package server;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

import java.util.Comparator;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

  public static boolean debug = false;

  @Test
  public void test001() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test001"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b4 = treeset_b0.isEmpty();
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.Boolean> sortedset_b7 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);

  }

  @Test
  public void test002() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test002"); }


    java.util.ArrayList<java.lang.Boolean> arraylist_b0 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b0, b_array2);
    java.util.stream.Stream<java.lang.Boolean> stream_b4 = arraylist_b0.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b4);

  }

  @Test
  public void test003() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test003"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.function.Predicate<java.lang.Object> predicate_obj10 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b11 = treeset_b0.removeIf(predicate_obj10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);

  }

  @Test
  public void test004() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test004"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b9 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long10 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array12 = new java.lang.Long[] { 1L };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long10, long_array12);
    boolean b14 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long10);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b15 = treeset_b0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test005() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test005"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b4 = treeset_b0.isEmpty();
    java.lang.Boolean b5 = treeset_b0.first();
    java.lang.Boolean b7 = treeset_b0.higher((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b5 + "' != '" + true+ "'", b5.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b7 + "' != '" + true+ "'", b7.equals(true));

  }

  @Test
  public void test006() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test006"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b12.stream();
    java.lang.Object[] obj_array21 = new java.lang.Object[] { treeset_b12 };
    java.lang.Object[] obj_array22 = treeset_b0.toArray(obj_array21);
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.Boolean> sortedset_b25 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);

  }

  @Test
  public void test007() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test007"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b8 = treeset_b0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);

  }

  @Test
  public void test008() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test008"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b0.headSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);

  }

  @Test
  public void test009() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test009"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true, true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b11, b_array14);
    treeset_b11.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b17 = treeset_b11.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b11.headSet((java.lang.Boolean)false, true);
    boolean b21 = treeset_b10.equals((java.lang.Object)treeset_b11);
    // The following exception was thrown during execution in test generation
    try {
    boolean b22 = treeset_b0.contains((java.lang.Object)treeset_b10);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);

  }

  @Test
  public void test010() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test010"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.util.ArrayList<java.lang.Long> arraylist_long7 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array9 = new java.lang.Long[] { 0L };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long7, long_array9);
    boolean b11 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long7);
    java.util.Iterator<java.lang.Boolean> iterator_b12 = treeset_b0.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    java.lang.Boolean b20 = treeset_b13.lower((java.lang.Boolean)true);
    java.lang.Boolean b21 = treeset_b13.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b24 = treeset_b13.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b24);
    // The following exception was thrown during execution in test generation
    try {
    boolean b26 = treeset_b0.contains((java.lang.Object)treeset_b25);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b24);

  }

  @Test
  public void test011() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test011"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.stream.Stream<java.lang.Boolean> stream_b1 = treeset_b0.parallelStream();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b2 = treeset_b0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b1);

  }

  @Test
  public void test012() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test012"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.lang.String str9 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { false };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10, b_array12);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b10.headSet((java.lang.Boolean)false, true);
    boolean b17 = treeset_b0.equals((java.lang.Object)navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[]"+ "'", str9.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test013() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test013"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b12 = treeset_b11.descendingIterator();
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b11.subSet((java.lang.Boolean)true, (java.lang.Boolean)false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b12);

  }

  @Test
  public void test014() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test014"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b8 = treeset_b0.stream();
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.Boolean> navigableset_b13 = treeset_b0.subSet((java.lang.Boolean)true, true, (java.lang.Boolean)false, false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b8);

  }

  @Test
  public void test015() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test015"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    boolean b9 = treeset_b0.add((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test016() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test016"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b18 = treeset_b0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test017() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test017"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b4 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b5 = treeset_b0.iterator();
    java.util.function.Consumer<java.lang.Boolean> consumer_b6 = null;
    // The following exception was thrown during execution in test generation
    try {
    treeset_b0.forEach(consumer_b6);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b5);

  }

  @Test
  public void test018() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test018"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.stream.Stream<java.lang.Boolean> stream_b1 = treeset_b0.parallelStream();
    java.util.function.Consumer<java.lang.Boolean> consumer_b2 = null;
    // The following exception was thrown during execution in test generation
    try {
    treeset_b0.forEach(consumer_b2);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b1);

  }

  @Test
  public void test019() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test019"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b12.tailSet((java.lang.Boolean)false);
    java.lang.Object obj15 = treeset_b12.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj15);

  }

  @Test
  public void test020() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test020"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b4 = treeset_b0.isEmpty();
    java.lang.Boolean b5 = treeset_b0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b5 + "' != '" + true+ "'", b5.equals(true));

  }

  @Test
  public void test021() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test021"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.util.function.Consumer<java.lang.Boolean> consumer_b9 = null;
    // The following exception was thrown during execution in test generation
    try {
    treeset_b0.forEach(consumer_b9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);

  }

  @Test
  public void test022() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test022"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b12.tailSet((java.lang.Boolean)false);
    java.util.function.Predicate<java.lang.Object> predicate_obj15 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b16 = sortedset_b14.removeIf(predicate_obj15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);

  }

  @Test
  public void test023() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test023"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array6 = new java.util.ArrayList<java.lang.Object[]>();
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array10 = new java.lang.Boolean[] { true, true };
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b7, b_array10);
    treeset_b7.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b7.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b17 = treeset_b7.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b7);
    java.util.TreeSet<java.lang.Boolean> treeset_b19 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array22 = new java.lang.Boolean[] { true, true };
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b19, b_array22);
    treeset_b19.clear();
    java.lang.Boolean b26 = treeset_b19.lower((java.lang.Boolean)true);
    java.lang.Boolean b27 = treeset_b19.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b30 = treeset_b19.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    boolean b38 = treeset_b31.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b39 = treeset_b31.stream();
    java.lang.Object[] obj_array40 = new java.lang.Object[] { treeset_b31 };
    java.lang.Object[] obj_array41 = treeset_b19.toArray(obj_array40);
    java.lang.Object[] obj_array42 = treeset_b18.toArray(obj_array41);
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array46 = new java.lang.Boolean[] { true, true };
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b43, b_array46);
    treeset_b43.clear();
    java.lang.Boolean b50 = treeset_b43.lower((java.lang.Boolean)true);
    java.lang.Boolean b51 = treeset_b43.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b54 = treeset_b43.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b55 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array58 = new java.lang.Boolean[] { true, true };
    boolean b59 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b55, b_array58);
    treeset_b55.clear();
    boolean b62 = treeset_b55.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b63 = treeset_b55.stream();
    java.lang.Object[] obj_array64 = new java.lang.Object[] { treeset_b55 };
    java.lang.Object[] obj_array65 = treeset_b43.toArray(obj_array64);
    java.util.TreeSet<java.lang.Boolean> treeset_b66 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array69 = new java.lang.Boolean[] { true, true };
    boolean b70 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b66, b_array69);
    treeset_b66.clear();
    java.lang.Boolean b73 = treeset_b66.lower((java.lang.Boolean)true);
    java.lang.Boolean b74 = treeset_b66.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b77 = treeset_b66.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b78 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array81 = new java.lang.Boolean[] { true, true };
    boolean b82 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b78, b_array81);
    treeset_b78.clear();
    boolean b85 = treeset_b78.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b86 = treeset_b78.stream();
    java.lang.Object[] obj_array87 = new java.lang.Object[] { treeset_b78 };
    java.lang.Object[] obj_array88 = treeset_b66.toArray(obj_array87);
    java.lang.Object[][] obj_array_array89 = new java.lang.Object[][] { obj_array41, obj_array64, obj_array88 };
    boolean b90 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array6, obj_array_array89);
    // The following exception was thrown during execution in test generation
    try {
    boolean b91 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array6);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b82 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b86);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array88);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array89);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b90 == true);

  }

  @Test
  public void test024() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test024"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b0.headSet((java.lang.Boolean)false);
    // The following exception was thrown during execution in test generation
    try {
    boolean b16 = treeset_b0.remove((java.lang.Object)10L);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);

  }

  @Test
  public void test025() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test025"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b11);
    java.util.ArrayList<java.lang.String> arraylist_str13 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str13, str_array18);
    boolean b20 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str13);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { true, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    treeset_b21.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b29 = treeset_b21.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b31 = treeset_b21.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array32 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array33 = new java.lang.Object[][] {  };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32, obj_array_array33);
    boolean b35 = treeset_b21.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32);
    boolean b36 = treeset_b12.equals((java.lang.Object)treeset_b21);
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array40 = new java.lang.Boolean[] { true, true };
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37, b_array40);
    treeset_b37.clear();
    java.lang.Boolean b44 = treeset_b37.lower((java.lang.Boolean)true);
    java.lang.Boolean b45 = treeset_b37.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b46 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array49 = new java.lang.Boolean[] { true, true };
    boolean b50 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b46, b_array49);
    treeset_b46.clear();
    java.lang.Boolean b53 = treeset_b46.lower((java.lang.Boolean)true);
    boolean b54 = treeset_b37.addAll((java.util.Collection<java.lang.Boolean>)treeset_b46);
    java.util.TreeSet<java.lang.Boolean> treeset_b55 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array58 = new java.lang.Boolean[] { true, true };
    boolean b59 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b55, b_array58);
    treeset_b55.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b61 = treeset_b55.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b64 = treeset_b55.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long65 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array67 = new java.lang.Long[] { 1L };
    boolean b68 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long65, long_array67);
    boolean b69 = treeset_b55.removeAll((java.util.Collection<java.lang.Long>)arraylist_long65);
    boolean b70 = treeset_b37.removeAll((java.util.Collection<java.lang.Long>)arraylist_long65);
    // The following exception was thrown during execution in test generation
    try {
    boolean b71 = treeset_b12.remove((java.lang.Object)arraylist_long65);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);

  }

  @Test
  public void test026() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test026"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.util.ArrayList<java.lang.Long> arraylist_long7 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array9 = new java.lang.Long[] { 0L };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long7, long_array9);
    boolean b11 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long7);
    java.util.Iterator<java.lang.Boolean> iterator_b12 = treeset_b0.descendingIterator();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b13 = treeset_b0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b12);

  }

  @Test
  public void test027() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test027"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.function.Predicate<java.lang.Object> predicate_obj1 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b2 = treeset_b0.removeIf(predicate_obj1);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }

  }

  @Test
  public void test028() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test028"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b9.tailSet((java.lang.Boolean)true, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);

  }

  @Test
  public void test029() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test029"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b9 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long10 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array12 = new java.lang.Long[] { 1L };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long10, long_array12);
    boolean b14 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long10);
    java.util.Collection<java.lang.Object[]> collection_obj_array15 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b16 = treeset_b0.containsAll(collection_obj_array15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test030() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test030"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b8 = treeset_b0.stream();
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Boolean b12 = treeset_b0.lower((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));

  }

  @Test
  public void test031() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test031"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b11);
    java.util.ArrayList<java.lang.String> arraylist_str13 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str13, str_array18);
    boolean b20 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str13);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { true, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    treeset_b21.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b29 = treeset_b21.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b31 = treeset_b21.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array32 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array33 = new java.lang.Object[][] {  };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32, obj_array_array33);
    boolean b35 = treeset_b21.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32);
    boolean b36 = treeset_b12.equals((java.lang.Object)treeset_b21);
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array40 = new java.lang.Boolean[] { true, true };
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37, b_array40);
    treeset_b37.clear();
    boolean b44 = treeset_b37.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b46 = treeset_b37.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b49 = treeset_b37.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b51 = treeset_b37.headSet((java.lang.Boolean)false);
    // The following exception was thrown during execution in test generation
    try {
    boolean b52 = treeset_b12.remove((java.lang.Object)sortedset_b51);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b51);

  }

  @Test
  public void test032() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test032"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b11);
    java.util.ArrayList<java.lang.String> arraylist_str13 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str13, str_array18);
    boolean b20 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str13);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { true, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    treeset_b21.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b29 = treeset_b21.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b31 = treeset_b21.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array32 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array33 = new java.lang.Object[][] {  };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32, obj_array_array33);
    boolean b35 = treeset_b21.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32);
    boolean b36 = treeset_b12.equals((java.lang.Object)treeset_b21);
    java.util.function.Consumer<java.lang.Boolean> consumer_b37 = null;
    // The following exception was thrown during execution in test generation
    try {
    treeset_b21.forEach(consumer_b37);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);

  }

  @Test
  public void test033() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test033"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9);
    java.lang.Boolean b18 = treeset_b0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b18);

  }

  @Test
  public void test034() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test034"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b18 = treeset_b0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test035() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test035"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b12 = treeset_b11.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + true+ "'", b12.equals(true));

  }

  @Test
  public void test036() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test036"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b14 = sortedset_b13.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b14);

  }

  @Test
  public void test037() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test037"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.lang.Boolean b11 = treeset_b0.ceiling((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);

  }

  @Test
  public void test038() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test038"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    boolean b13 = treeset_b0.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b14 = treeset_b0.stream();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.lang.Boolean b22 = treeset_b15.lower((java.lang.Boolean)true);
    java.lang.Boolean b23 = treeset_b15.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b15.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { true, true };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27, b_array30);
    treeset_b27.clear();
    boolean b34 = treeset_b27.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b35 = treeset_b27.stream();
    java.lang.Object[] obj_array36 = new java.lang.Object[] { treeset_b27 };
    java.lang.Object[] obj_array37 = treeset_b15.toArray(obj_array36);
    java.lang.Object[] obj_array38 = treeset_b0.toArray(obj_array37);
    java.lang.Boolean b39 = treeset_b0.last();
    java.lang.String str40 = treeset_b0.toString();
    java.lang.Boolean b41 = treeset_b0.last();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b39 + "' != '" + true+ "'", b39.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "[true]"+ "'", str40.equals("[true]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b41 + "' != '" + true+ "'", b41.equals(true));

  }

  @Test
  public void test039() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test039"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.Boolean> navigableset_b17 = treeset_b12.subSet((java.lang.Boolean)true, false, (java.lang.Boolean)false, false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test040() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test040"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array10 = new java.lang.Boolean[] { true, true };
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b7, b_array10);
    treeset_b7.clear();
    java.lang.Boolean b14 = treeset_b7.lower((java.lang.Boolean)true);
    java.lang.Boolean b15 = treeset_b7.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b7.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b19 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array22 = new java.lang.Boolean[] { true, true };
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b19, b_array22);
    treeset_b19.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b19.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b29 = treeset_b19.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array30 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array31 = new java.lang.Object[][] {  };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array30, obj_array_array31);
    boolean b33 = treeset_b19.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array30);
    boolean b34 = treeset_b7.addAll((java.util.Collection<java.lang.Boolean>)treeset_b19);
    java.lang.Boolean b35 = treeset_b19.first();
    java.lang.Boolean b37 = treeset_b19.higher((java.lang.Boolean)false);
    boolean b38 = treeset_b0.equals((java.lang.Object)treeset_b19);
    java.util.SortedSet<java.lang.Boolean> sortedset_b40 = treeset_b19.tailSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b35 + "' != '" + true+ "'", b35.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b37 + "' != '" + true+ "'", b37.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b40);

  }

  @Test
  public void test041() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test041"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    boolean b1 = treeset_b0.isEmpty();
    java.util.TreeSet<java.lang.Boolean> treeset_b2 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array5 = new java.lang.Boolean[] { true, true };
    boolean b6 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b2, b_array5);
    treeset_b2.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b10 = treeset_b2.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b12 = treeset_b2.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b2);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b2);
    java.util.SortedSet<java.lang.Boolean> sortedset_b17 = treeset_b2.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b18 = treeset_b2.iterator();
    // The following exception was thrown during execution in test generation
    try {
    boolean b19 = treeset_b0.contains((java.lang.Object)iterator_b18);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b18);

  }

  @Test
  public void test042() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test042"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b17 = treeset_b9.iterator();
    java.lang.Boolean b19 = treeset_b9.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b9);
    java.lang.Boolean b21 = treeset_b20.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b22 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { false, false };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b22, b_array25);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array27 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array28 = new java.lang.Object[][] {  };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27, obj_array_array28);
    boolean b30 = arraylist_b22.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b31 = treeset_b20.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b32 = treeset_b0.equals((java.lang.Object)treeset_b20);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b33 = treeset_b0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);

  }

  @Test
  public void test043() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test043"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { false };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b7, b_array9);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b13 = treeset_b7.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b13);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b17 = treeset_b14.tailSet((java.lang.Boolean)true, false);
    boolean b18 = treeset_b0.equals((java.lang.Object)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test044() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test044"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array4 = new java.lang.Boolean[] { true, true };
    boolean b5 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b1, b_array4);
    treeset_b1.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b7 = treeset_b1.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b1.headSet((java.lang.Boolean)false, true);
    boolean b11 = treeset_b0.equals((java.lang.Object)treeset_b1);
    java.lang.Boolean b13 = treeset_b1.lower((java.lang.Boolean)false);
    java.lang.Boolean b14 = treeset_b1.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);

  }

  @Test
  public void test045() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test045"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.lang.Object obj12 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.function.Consumer<java.lang.Boolean> consumer_b15 = null;
    // The following exception was thrown during execution in test generation
    try {
    sortedset_b14.forEach(consumer_b15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);

  }

  @Test
  public void test046() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test046"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b12.stream();
    java.lang.Object[] obj_array21 = new java.lang.Object[] { treeset_b12 };
    java.lang.Object[] obj_array22 = treeset_b0.toArray(obj_array21);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b23);
    java.util.Iterator<java.lang.Boolean> iterator_b25 = treeset_b24.iterator();
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b24.subSet((java.lang.Boolean)true, (java.lang.Boolean)false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b25);

  }

  @Test
  public void test047() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test047"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b12 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj13 = (Comparator<Object>) treeset_b0.comparator();
    java.util.Iterator<java.lang.Boolean> iterator_b14 = treeset_b0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b14);

  }

  @Test
  public void test048() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test048"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b12.tailSet((java.lang.Boolean)false);
    int i15 = treeset_b12.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 1);

  }

  @Test
  public void test049() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test049"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array11 = new java.lang.Boolean[] { true, true };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array11);
    treeset_b8.clear();
    java.lang.Boolean b15 = treeset_b8.lower((java.lang.Boolean)true);
    java.lang.Boolean b16 = treeset_b8.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b19 = treeset_b8.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { true, true };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b20, b_array23);
    treeset_b20.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b20.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b30 = treeset_b20.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array31 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array32 = new java.lang.Object[][] {  };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array31, obj_array_array32);
    boolean b34 = treeset_b20.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array31);
    boolean b35 = treeset_b8.addAll((java.util.Collection<java.lang.Boolean>)treeset_b20);
    boolean b36 = treeset_b0.remove((java.lang.Object)b35);
    java.util.Iterator<java.lang.Boolean> iterator_b37 = treeset_b0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b37);

  }

  @Test
  public void test050() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test050"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b11.headSet((java.lang.Boolean)false, false);
    java.util.Spliterator<java.lang.Boolean> spliterator_b15 = treeset_b11.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b15);

  }

  @Test
  public void test051() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test051"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b12 = treeset_b11.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b13 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { false, false };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b13, b_array16);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array18 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array19 = new java.lang.Object[][] {  };
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array18, obj_array_array19);
    boolean b21 = arraylist_b13.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array18);
    boolean b22 = treeset_b11.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array18);
    java.util.SortedSet<java.lang.Boolean> sortedset_b25 = treeset_b11.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.function.Predicate<java.lang.Object> predicate_obj26 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b27 = sortedset_b25.removeIf(predicate_obj26);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b25);

  }

  @Test
  public void test052() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test052"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array4 = new java.lang.Boolean[] { true, true };
    boolean b5 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b1, b_array4);
    treeset_b1.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b7 = treeset_b1.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b1.headSet((java.lang.Boolean)false, true);
    boolean b11 = treeset_b0.equals((java.lang.Object)treeset_b1);
    java.lang.String str12 = treeset_b1.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "[]"+ "'", str12.equals("[]"));

  }

  @Test
  public void test053() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test053"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b9 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.lang.Object[] obj_array10 = treeset_b0.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);

  }

  @Test
  public void test054() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test054"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b12 = treeset_b0.floor((java.lang.Boolean)false);
    java.lang.String str13 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { false };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array16);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b14.headSet((java.lang.Boolean)false, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b25 = treeset_b14.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.lang.Object obj26 = treeset_b14.clone();
    // The following exception was thrown during execution in test generation
    try {
    boolean b27 = treeset_b0.remove((java.lang.Object)treeset_b14);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[false]"+ "'", str13.equals("[false]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj26);

  }

  @Test
  public void test055() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test055"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    boolean b13 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { false };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array16);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b14.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b20);
    boolean b22 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b20);
    java.util.Comparator<java.lang.Object> comparator_obj23 = (Comparator<Object>) treeset_b0.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj23);

  }

  @Test
  public void test056() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test056"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b11.headSet((java.lang.Boolean)false, false);
    java.util.Comparator<java.lang.Object> comparator_obj15 = (Comparator<Object>) treeset_b11.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array19 = new java.lang.Boolean[] { true, true };
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b16, b_array19);
    treeset_b16.clear();
    java.lang.Boolean b23 = treeset_b16.lower((java.lang.Boolean)true);
    java.lang.Boolean b24 = treeset_b16.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b27 = treeset_b16.headSet((java.lang.Boolean)true, false);
    boolean b29 = treeset_b16.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b30 = treeset_b16.stream();
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    java.lang.Boolean b38 = treeset_b31.lower((java.lang.Boolean)true);
    java.lang.Boolean b39 = treeset_b31.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b42 = treeset_b31.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array46 = new java.lang.Boolean[] { true, true };
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b43, b_array46);
    treeset_b43.clear();
    boolean b50 = treeset_b43.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b51 = treeset_b43.stream();
    java.lang.Object[] obj_array52 = new java.lang.Object[] { treeset_b43 };
    java.lang.Object[] obj_array53 = treeset_b31.toArray(obj_array52);
    java.lang.Object[] obj_array54 = treeset_b16.toArray(obj_array53);
    java.lang.Object[] obj_array55 = treeset_b11.toArray(obj_array53);
    java.lang.Object[] obj_array56 = treeset_b11.toArray();
    java.lang.Boolean b57 = treeset_b11.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b57 + "' != '" + true+ "'", b57.equals(true));

  }

  @Test
  public void test057() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test057"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b17 = treeset_b9.iterator();
    java.lang.Boolean b19 = treeset_b9.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b9);
    java.lang.Boolean b21 = treeset_b20.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b22 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { false, false };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b22, b_array25);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array27 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array28 = new java.lang.Object[][] {  };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27, obj_array_array28);
    boolean b30 = arraylist_b22.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b31 = treeset_b20.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b32 = treeset_b0.equals((java.lang.Object)treeset_b20);
    java.util.TreeSet<java.lang.Boolean> treeset_b33 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.stream.Stream<java.lang.Boolean> stream_b34 = treeset_b33.parallelStream();
    boolean b35 = treeset_b20.equals((java.lang.Object)stream_b34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);

  }

  @Test
  public void test058() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test058"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.lang.String str9 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array13 = new java.lang.Boolean[] { true, true };
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10, b_array13);
    treeset_b10.clear();
    java.lang.Boolean b17 = treeset_b10.lower((java.lang.Boolean)true);
    java.lang.Boolean b18 = treeset_b10.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b10.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { true, true };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array25);
    treeset_b22.clear();
    boolean b29 = treeset_b22.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b30 = treeset_b22.stream();
    java.lang.Object[] obj_array31 = new java.lang.Object[] { treeset_b22 };
    java.lang.Object[] obj_array32 = treeset_b10.toArray(obj_array31);
    java.util.TreeSet<java.lang.Boolean> treeset_b33 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b10);
    java.util.Iterator<java.lang.Boolean> iterator_b34 = treeset_b10.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b35 = treeset_b10.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b36 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array39 = new java.lang.Boolean[] { true, true };
    boolean b40 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b36, b_array39);
    treeset_b36.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b42 = treeset_b36.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b45 = treeset_b36.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long46 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array51 = new java.lang.Long[] { 1L, 1L, 100L, (-1L) };
    boolean b52 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long46, long_array51);
    boolean b53 = treeset_b36.removeAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    boolean b54 = treeset_b10.removeAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    boolean b55 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[]"+ "'", str9.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);

  }

  @Test
  public void test059() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test059"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b12 = treeset_b11.last();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b15 = treeset_b11.headSet((java.lang.Boolean)false, true);
    java.util.stream.Stream<java.lang.Boolean> stream_b16 = navigableset_b15.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + true+ "'", b12.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b16);

  }

  @Test
  public void test060() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test060"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.lang.Boolean b30 = treeset_b12.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    java.lang.Boolean b38 = treeset_b31.lower((java.lang.Boolean)true);
    java.lang.Boolean b39 = treeset_b31.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b42 = treeset_b31.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b42);
    java.util.ArrayList<java.lang.String> arraylist_str44 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array49 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str44, str_array49);
    boolean b51 = treeset_b43.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    boolean b52 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b53 = treeset_b12.descendingSet();
    java.util.Comparator<java.lang.Object> comparator_obj54 = (Comparator<Object>) treeset_b12.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b55 = treeset_b12.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b30 + "' != '" + true+ "'", b30.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b55);

  }

  @Test
  public void test061() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test061"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.lang.Boolean b30 = treeset_b12.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    java.lang.Boolean b38 = treeset_b31.lower((java.lang.Boolean)true);
    java.lang.Boolean b39 = treeset_b31.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b42 = treeset_b31.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b42);
    java.util.ArrayList<java.lang.String> arraylist_str44 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array49 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str44, str_array49);
    boolean b51 = treeset_b43.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    boolean b52 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    java.util.function.Consumer<java.lang.Boolean> consumer_b53 = null;
    // The following exception was thrown during execution in test generation
    try {
    treeset_b12.forEach(consumer_b53);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b30 + "' != '" + true+ "'", b30.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);

  }

  @Test
  public void test062() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test062"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b17 = treeset_b9.iterator();
    java.lang.Boolean b19 = treeset_b9.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b9);
    java.lang.Boolean b21 = treeset_b20.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b22 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { false, false };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b22, b_array25);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array27 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array28 = new java.lang.Object[][] {  };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27, obj_array_array28);
    boolean b30 = arraylist_b22.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b31 = treeset_b20.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b32 = treeset_b0.equals((java.lang.Object)treeset_b20);
    java.util.Iterator<java.lang.Boolean> iterator_b33 = treeset_b0.descendingIterator();
    java.util.Iterator<java.lang.Boolean> iterator_b34 = treeset_b0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b34);

  }

  @Test
  public void test063() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test063"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array19 = new java.lang.Boolean[] { true, true };
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b16, b_array19);
    treeset_b16.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b22 = treeset_b16.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b25 = treeset_b16.headSet((java.lang.Boolean)false, true);
    boolean b26 = treeset_b15.equals((java.lang.Object)treeset_b16);
    java.lang.Boolean b28 = treeset_b16.lower((java.lang.Boolean)false);
    boolean b29 = treeset_b0.equals((java.lang.Object)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);

  }

  @Test
  public void test064() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test064"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.lang.Boolean b13 = treeset_b0.ceiling((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b13 + "' != '" + false+ "'", b13.equals(false));

  }

  @Test
  public void test065() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test065"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    java.lang.Boolean b17 = treeset_b9.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b9.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b20);
    java.util.ArrayList<java.lang.String> arraylist_str22 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array27 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str22, str_array27);
    boolean b29 = treeset_b21.retainAll((java.util.Collection<java.lang.String>)arraylist_str22);
    boolean b30 = treeset_b0.retainAll((java.util.Collection<java.lang.String>)arraylist_str22);
    java.lang.String str31 = treeset_b0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "[]"+ "'", str31.equals("[]"));

  }

  @Test
  public void test066() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test066"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b12.stream();
    java.lang.Object[] obj_array21 = new java.lang.Object[] { treeset_b12 };
    java.lang.Object[] obj_array22 = treeset_b0.toArray(obj_array21);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b24 = treeset_b0.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b25 = treeset_b0.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b26 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array29 = new java.lang.Boolean[] { true, true };
    boolean b30 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b26, b_array29);
    treeset_b26.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b32 = treeset_b26.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b35 = treeset_b26.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long36 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array41 = new java.lang.Long[] { 1L, 1L, 100L, (-1L) };
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long36, long_array41);
    boolean b43 = treeset_b26.removeAll((java.util.Collection<java.lang.Long>)arraylist_long36);
    boolean b44 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long36);
    java.lang.Boolean b46 = treeset_b0.lower((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b46);

  }

  @Test
  public void test067() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test067"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b11);
    java.util.Spliterator<java.lang.Boolean> spliterator_b13 = treeset_b12.spliterator();
    java.util.function.Predicate<java.lang.Object> predicate_obj14 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b15 = treeset_b12.removeIf(predicate_obj14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b13);

  }

  @Test
  public void test068() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test068"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    boolean b13 = treeset_b0.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b14 = treeset_b0.stream();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.lang.Boolean b22 = treeset_b15.lower((java.lang.Boolean)true);
    java.lang.Boolean b23 = treeset_b15.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b15.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { true, true };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27, b_array30);
    treeset_b27.clear();
    boolean b34 = treeset_b27.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b35 = treeset_b27.stream();
    java.lang.Object[] obj_array36 = new java.lang.Object[] { treeset_b27 };
    java.lang.Object[] obj_array37 = treeset_b15.toArray(obj_array36);
    java.lang.Object[] obj_array38 = treeset_b0.toArray(obj_array37);
    java.util.TreeSet<java.lang.Boolean> treeset_b39 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b40 = treeset_b0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b40);

  }

  @Test
  public void test069() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test069"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b0.headSet((java.lang.Boolean)true, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);

  }

  @Test
  public void test070() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test070"); }


    java.util.Comparator<java.lang.Boolean> comparator_b0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_b0);
    java.util.function.Consumer<java.lang.Boolean> consumer_b2 = null;
    // The following exception was thrown during execution in test generation
    try {
    treeset_b1.forEach(consumer_b2);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }

  }

  @Test
  public void test071() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test071"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b15 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b15);

  }

  @Test
  public void test072() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test072"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.stream.Stream<java.lang.Boolean> stream_b13 = treeset_b0.stream();
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b21 = treeset_b15.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b24 = treeset_b15.headSet((java.lang.Boolean)false, true);
    boolean b25 = treeset_b14.equals((java.lang.Object)treeset_b15);
    int i26 = treeset_b14.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { true, true };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27, b_array30);
    treeset_b27.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b35 = treeset_b27.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b37 = treeset_b27.add((java.lang.Boolean)true);
    boolean b39 = treeset_b27.add((java.lang.Boolean)true);
    boolean b41 = treeset_b27.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b44 = treeset_b27.headSet((java.lang.Boolean)true, true);
    boolean b45 = treeset_b14.equals((java.lang.Object)navigableset_b44);
    // The following exception was thrown during execution in test generation
    try {
    boolean b46 = treeset_b0.contains((java.lang.Object)navigableset_b44);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);

  }

  @Test
  public void test073() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test073"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    java.util.Comparator<java.lang.Object> comparator_obj13 = (Comparator<Object>) treeset_b0.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj13);

  }

  @Test
  public void test074() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test074"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    treeset_b11.clear();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b13 = treeset_b11.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);

  }

  @Test
  public void test075() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test075"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.tailSet((java.lang.Boolean)false, false);
    java.lang.Object obj11 = treeset_b0.clone();
    java.util.Iterator<java.lang.Boolean> iterator_b12 = treeset_b0.iterator();
    java.lang.Object[] obj_array13 = treeset_b0.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);

  }

  @Test
  public void test076() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test076"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b12.stream();
    java.lang.Object[] obj_array21 = new java.lang.Object[] { treeset_b12 };
    java.lang.Object[] obj_array22 = treeset_b0.toArray(obj_array21);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b24 = treeset_b0.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b25 = treeset_b0.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b26 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array29 = new java.lang.Boolean[] { true, true };
    boolean b30 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b26, b_array29);
    treeset_b26.clear();
    java.lang.Boolean b33 = treeset_b26.lower((java.lang.Boolean)true);
    java.lang.Boolean b34 = treeset_b26.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b37 = treeset_b26.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b38 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array41 = new java.lang.Boolean[] { true, true };
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b38, b_array41);
    treeset_b38.clear();
    boolean b45 = treeset_b38.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b46 = treeset_b38.stream();
    java.lang.Object[] obj_array47 = new java.lang.Object[] { treeset_b38 };
    java.lang.Object[] obj_array48 = treeset_b26.toArray(obj_array47);
    java.lang.Object[] obj_array49 = treeset_b0.toArray(obj_array48);
    java.util.TreeSet<java.lang.Boolean> treeset_b50 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b51 = treeset_b50.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b54 = treeset_b50.headSet((java.lang.Boolean)false, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b54);

  }

  @Test
  public void test077() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test077"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b11);
    java.util.ArrayList<java.lang.String> arraylist_str13 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str13, str_array18);
    boolean b20 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str13);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { true, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    treeset_b21.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b29 = treeset_b21.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b31 = treeset_b21.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array32 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array33 = new java.lang.Object[][] {  };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32, obj_array_array33);
    boolean b35 = treeset_b21.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32);
    boolean b36 = treeset_b12.equals((java.lang.Object)treeset_b21);
    java.lang.Boolean b38 = treeset_b12.ceiling((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b38);

  }

  @Test
  public void test078() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test078"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b11.headSet((java.lang.Boolean)false, false);
    java.util.Comparator<java.lang.Object> comparator_obj15 = (Comparator<Object>) treeset_b11.comparator();
    java.util.stream.Stream<java.lang.Boolean> stream_b16 = treeset_b11.parallelStream();
    java.lang.Boolean b17 = treeset_b11.last();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b17 + "' != '" + true+ "'", b17.equals(true));

  }

  @Test
  public void test079() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test079"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.lang.String str16 = treeset_b0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "[true]"+ "'", str16.equals("[true]"));

  }

  @Test
  public void test080() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test080"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b14 = treeset_b0.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + true+ "'", b14.equals(true));

  }

  @Test
  public void test081() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test081"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.lang.Boolean b8 = treeset_b0.ceiling((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);

  }

  @Test
  public void test082() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test082"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.Spliterator<java.lang.Boolean> spliterator_b14 = treeset_b0.spliterator();
    java.util.Iterator<java.lang.Boolean> iterator_b15 = treeset_b0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b15);

  }

  @Test
  public void test083() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test083"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b12.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>(sortedset_b14);
    java.util.Iterator<java.lang.Boolean> iterator_b16 = treeset_b15.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b16);

  }

  @Test
  public void test084() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test084"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b11 = treeset_b0.isEmpty();
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b12.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b24 = treeset_b12.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b12.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b30 = treeset_b12.tailSet((java.lang.Boolean)true, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b39 = treeset_b31.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b41 = treeset_b31.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array42 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array43 = new java.lang.Object[][] {  };
    boolean b44 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array42, obj_array_array43);
    boolean b45 = treeset_b31.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array42);
    boolean b47 = treeset_b31.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b48 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array51 = new java.lang.Boolean[] { true, true };
    boolean b52 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b48, b_array51);
    treeset_b48.clear();
    java.lang.Boolean b55 = treeset_b48.lower((java.lang.Boolean)true);
    java.lang.Boolean b56 = treeset_b48.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b59 = treeset_b48.headSet((java.lang.Boolean)true, false);
    boolean b61 = treeset_b48.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b62 = treeset_b48.stream();
    boolean b63 = treeset_b31.addAll((java.util.Collection<java.lang.Boolean>)treeset_b48);
    boolean b64 = treeset_b12.equals((java.lang.Object)treeset_b31);
    java.util.TreeSet<java.lang.Boolean> treeset_b65 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b31);
    // The following exception was thrown during execution in test generation
    try {
    boolean b66 = treeset_b0.contains((java.lang.Object)treeset_b31);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);

  }

  @Test
  public void test085() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test085"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.function.Predicate<java.lang.Object> predicate_obj13 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b14 = treeset_b0.removeIf(predicate_obj13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);

  }

  @Test
  public void test086() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test086"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b16 = treeset_b0.iterator();
    java.util.Iterator<java.lang.Boolean> iterator_b17 = treeset_b0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b17);

  }

  @Test
  public void test087() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test087"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b13 = treeset_b0.stream();
    java.lang.Boolean b14 = treeset_b0.pollLast();
    java.lang.Object[] obj_array15 = treeset_b0.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + false+ "'", b14.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);

  }

  @Test
  public void test088() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test088"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b12 = treeset_b11.descendingIterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b13 = treeset_b11.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b13);

  }

  @Test
  public void test089() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test089"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    boolean b16 = treeset_b0.add((java.lang.Boolean)true);
    int i17 = treeset_b0.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    treeset_b18.clear();
    java.lang.Boolean b25 = treeset_b18.lower((java.lang.Boolean)true);
    java.lang.Boolean b26 = treeset_b18.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true, true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30, b_array33);
    treeset_b30.clear();
    boolean b37 = treeset_b30.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b38 = treeset_b30.stream();
    java.lang.Object[] obj_array39 = new java.lang.Object[] { treeset_b30 };
    java.lang.Object[] obj_array40 = treeset_b18.toArray(obj_array39);
    java.util.TreeSet<java.lang.Boolean> treeset_b41 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b18);
    java.util.Iterator<java.lang.Boolean> iterator_b42 = treeset_b18.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b43 = treeset_b18.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b44 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array47 = new java.lang.Boolean[] { true, true };
    boolean b48 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b44, b_array47);
    treeset_b44.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b50 = treeset_b44.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b53 = treeset_b44.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long54 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array59 = new java.lang.Long[] { 1L, 1L, 100L, (-1L) };
    boolean b60 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long54, long_array59);
    boolean b61 = treeset_b44.removeAll((java.util.Collection<java.lang.Long>)arraylist_long54);
    boolean b62 = treeset_b18.removeAll((java.util.Collection<java.lang.Long>)arraylist_long54);
    boolean b63 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);

  }

  @Test
  public void test090() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test090"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b12 = treeset_b11.descendingIterator();
    java.lang.Boolean b14 = treeset_b11.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b15 = treeset_b11.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b15);

  }

  @Test
  public void test091() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test091"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b6);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b7.tailSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true, true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b11, b_array14);
    treeset_b11.clear();
    java.lang.Boolean b18 = treeset_b11.lower((java.lang.Boolean)true);
    java.lang.Boolean b19 = treeset_b11.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b22 = treeset_b11.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array26 = new java.lang.Boolean[] { true, true };
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23, b_array26);
    treeset_b23.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b31 = treeset_b23.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b33 = treeset_b23.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array34 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array35 = new java.lang.Object[][] {  };
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array34, obj_array_array35);
    boolean b37 = treeset_b23.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array34);
    boolean b38 = treeset_b11.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23);
    java.lang.Boolean b39 = treeset_b23.first();
    java.lang.Boolean b41 = treeset_b23.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b42 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array45 = new java.lang.Boolean[] { true, true };
    boolean b46 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b42, b_array45);
    treeset_b42.clear();
    java.lang.Boolean b49 = treeset_b42.lower((java.lang.Boolean)true);
    java.lang.Boolean b50 = treeset_b42.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b53 = treeset_b42.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b54 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b53);
    java.util.ArrayList<java.lang.String> arraylist_str55 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array60 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str55, str_array60);
    boolean b62 = treeset_b54.retainAll((java.util.Collection<java.lang.String>)arraylist_str55);
    boolean b63 = treeset_b23.retainAll((java.util.Collection<java.lang.String>)arraylist_str55);
    boolean b64 = treeset_b7.retainAll((java.util.Collection<java.lang.String>)arraylist_str55);
    boolean b66 = treeset_b7.add((java.lang.Boolean)true);
    java.lang.Object obj67 = treeset_b7.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b39 + "' != '" + true+ "'", b39.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b41 + "' != '" + true+ "'", b41.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj67);

  }

  @Test
  public void test092() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test092"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b30 = treeset_b0.headSet((java.lang.Boolean)false, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b30);

  }

  @Test
  public void test093() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test093"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    int i11 = treeset_b0.size();
    java.util.Comparator<java.lang.Object> comparator_obj12 = (Comparator<Object>) treeset_b0.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b15 = treeset_b0.tailSet((java.lang.Boolean)false, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b15);

  }

  @Test
  public void test094() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test094"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b13.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b23 = treeset_b13.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b13);
    java.lang.Boolean b25 = treeset_b24.last();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b28 = treeset_b24.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b29 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array31 = new java.lang.Boolean[] { false };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b29, b_array31);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b35 = treeset_b29.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b36 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b35);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b39 = treeset_b36.tailSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array43 = new java.lang.Boolean[] { true, true };
    boolean b44 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b40, b_array43);
    treeset_b40.clear();
    java.lang.Boolean b47 = treeset_b40.lower((java.lang.Boolean)true);
    java.lang.Boolean b48 = treeset_b40.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b51 = treeset_b40.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b52 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array55 = new java.lang.Boolean[] { true, true };
    boolean b56 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b52, b_array55);
    treeset_b52.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b60 = treeset_b52.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b62 = treeset_b52.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array63 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array64 = new java.lang.Object[][] {  };
    boolean b65 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array63, obj_array_array64);
    boolean b66 = treeset_b52.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array63);
    boolean b67 = treeset_b40.addAll((java.util.Collection<java.lang.Boolean>)treeset_b52);
    java.lang.Boolean b68 = treeset_b52.first();
    java.lang.Boolean b70 = treeset_b52.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b71 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array74 = new java.lang.Boolean[] { true, true };
    boolean b75 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b71, b_array74);
    treeset_b71.clear();
    java.lang.Boolean b78 = treeset_b71.lower((java.lang.Boolean)true);
    java.lang.Boolean b79 = treeset_b71.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b82 = treeset_b71.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b83 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b82);
    java.util.ArrayList<java.lang.String> arraylist_str84 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array89 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str84, str_array89);
    boolean b91 = treeset_b83.retainAll((java.util.Collection<java.lang.String>)arraylist_str84);
    boolean b92 = treeset_b52.retainAll((java.util.Collection<java.lang.String>)arraylist_str84);
    boolean b93 = treeset_b36.retainAll((java.util.Collection<java.lang.String>)arraylist_str84);
    boolean b94 = treeset_b24.retainAll((java.util.Collection<java.lang.String>)arraylist_str84);
    boolean b95 = treeset_b0.retainAll((java.util.Collection<java.lang.String>)arraylist_str84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b25 + "' != '" + true+ "'", b25.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b68 + "' != '" + true+ "'", b68.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b70 + "' != '" + true+ "'", b70.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array89);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b90 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b92 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b93 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b94 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b95 == true);

  }

  @Test
  public void test095() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test095"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b4 = treeset_b0.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b7 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.function.Consumer<java.lang.Boolean> consumer_b8 = null;
    // The following exception was thrown during execution in test generation
    try {
    navigableset_b7.forEach(consumer_b8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b7);

  }

  @Test
  public void test096() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test096"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array4 = new java.lang.Boolean[] { true, true };
    boolean b5 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b1, b_array4);
    treeset_b1.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b7 = treeset_b1.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b1.headSet((java.lang.Boolean)false, true);
    boolean b11 = treeset_b0.equals((java.lang.Object)treeset_b1);
    int i12 = treeset_b0.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b13.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b23 = treeset_b13.add((java.lang.Boolean)true);
    boolean b25 = treeset_b13.add((java.lang.Boolean)true);
    boolean b27 = treeset_b13.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b30 = treeset_b13.headSet((java.lang.Boolean)true, true);
    boolean b31 = treeset_b0.equals((java.lang.Object)navigableset_b30);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b34 = treeset_b0.tailSet((java.lang.Boolean)false, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b34);

  }

  @Test
  public void test097() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test097"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.tailSet((java.lang.Boolean)false, false);
    java.lang.Object obj11 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b0.tailSet((java.lang.Boolean)false, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array20 = new java.lang.Boolean[] { true, true };
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17, b_array20);
    treeset_b17.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b25 = treeset_b17.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b27 = treeset_b17.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b28 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b17);
    java.lang.Boolean b29 = treeset_b28.last();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b32 = treeset_b28.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b33 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array35 = new java.lang.Boolean[] { false };
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b33, b_array35);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b39 = treeset_b33.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b39);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b43 = treeset_b40.tailSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b44 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array47 = new java.lang.Boolean[] { true, true };
    boolean b48 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b44, b_array47);
    treeset_b44.clear();
    java.lang.Boolean b51 = treeset_b44.lower((java.lang.Boolean)true);
    java.lang.Boolean b52 = treeset_b44.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b55 = treeset_b44.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b56 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array59 = new java.lang.Boolean[] { true, true };
    boolean b60 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b56, b_array59);
    treeset_b56.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b64 = treeset_b56.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b66 = treeset_b56.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array67 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array68 = new java.lang.Object[][] {  };
    boolean b69 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array67, obj_array_array68);
    boolean b70 = treeset_b56.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array67);
    boolean b71 = treeset_b44.addAll((java.util.Collection<java.lang.Boolean>)treeset_b56);
    java.lang.Boolean b72 = treeset_b56.first();
    java.lang.Boolean b74 = treeset_b56.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b75 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array78 = new java.lang.Boolean[] { true, true };
    boolean b79 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b75, b_array78);
    treeset_b75.clear();
    java.lang.Boolean b82 = treeset_b75.lower((java.lang.Boolean)true);
    java.lang.Boolean b83 = treeset_b75.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b86 = treeset_b75.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b87 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b86);
    java.util.ArrayList<java.lang.String> arraylist_str88 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array93 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b94 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str88, str_array93);
    boolean b95 = treeset_b87.retainAll((java.util.Collection<java.lang.String>)arraylist_str88);
    boolean b96 = treeset_b56.retainAll((java.util.Collection<java.lang.String>)arraylist_str88);
    boolean b97 = treeset_b40.retainAll((java.util.Collection<java.lang.String>)arraylist_str88);
    boolean b98 = treeset_b28.retainAll((java.util.Collection<java.lang.String>)arraylist_str88);
    boolean b99 = treeset_b0.retainAll((java.util.Collection<java.lang.String>)arraylist_str88);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b29 + "' != '" + true+ "'", b29.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b72 + "' != '" + true+ "'", b72.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b74 + "' != '" + true+ "'", b74.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b86);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array93);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b94 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b95 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b96 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b97 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b98 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b99 == false);

  }

  @Test
  public void test098() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test098"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b12.tailSet((java.lang.Boolean)false);
    boolean b16 = treeset_b12.add((java.lang.Boolean)false);
    treeset_b12.clear();
    treeset_b12.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);

  }

  @Test
  public void test099() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test099"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b12.stream();
    java.lang.Object[] obj_array21 = new java.lang.Object[] { treeset_b12 };
    java.lang.Object[] obj_array22 = treeset_b0.toArray(obj_array21);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b23);
    java.util.Iterator<java.lang.Boolean> iterator_b25 = treeset_b24.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b28 = treeset_b24.tailSet((java.lang.Boolean)false, true);
    java.lang.Boolean b29 = treeset_b24.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b29);

  }

  @Test
  public void test100() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test100"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.util.TreeSet<java.lang.Boolean> treeset_b28 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array31 = new java.lang.Boolean[] { true, true };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b28, b_array31);
    treeset_b28.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b36 = treeset_b28.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b38 = treeset_b28.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array39 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array40 = new java.lang.Object[][] {  };
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array39, obj_array_array40);
    boolean b42 = treeset_b28.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array39);
    boolean b43 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array39);
    java.util.SortedSet<java.lang.Boolean> sortedset_b45 = treeset_b12.headSet((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b48 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b48);

  }

  @Test
  public void test101() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test101"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Object obj15 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj15);

  }

  @Test
  public void test102() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test102"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b0.headSet((java.lang.Boolean)false);
    boolean b15 = treeset_b0.isEmpty();
    java.util.SortedSet<java.lang.Boolean> sortedset_b18 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b18);

  }

  @Test
  public void test103() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test103"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b0.headSet((java.lang.Boolean)false, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b19 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array22 = new java.lang.Boolean[] { true, true };
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b19, b_array22);
    treeset_b19.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b19.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.lang.String str28 = treeset_b19.toString();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b19.descendingSet();
    // The following exception was thrown during execution in test generation
    try {
    boolean b30 = treeset_b0.contains((java.lang.Object)navigableset_b29);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[]"+ "'", str28.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);

  }

  @Test
  public void test104() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test104"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b12.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>(sortedset_b14);
    java.util.Comparator<java.lang.Object> comparator_obj16 = (Comparator<Object>) treeset_b15.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array20 = new java.lang.Boolean[] { true, true };
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17, b_array20);
    treeset_b17.clear();
    java.lang.Boolean b24 = treeset_b17.lower((java.lang.Boolean)true);
    java.lang.Boolean b25 = treeset_b17.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b28 = treeset_b17.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b29 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array32 = new java.lang.Boolean[] { true, true };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b29, b_array32);
    treeset_b29.clear();
    boolean b36 = treeset_b29.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b37 = treeset_b29.stream();
    java.lang.Object[] obj_array38 = new java.lang.Object[] { treeset_b29 };
    java.lang.Object[] obj_array39 = treeset_b17.toArray(obj_array38);
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b17);
    java.util.TreeSet<java.lang.Boolean> treeset_b41 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b40);
    java.util.Iterator<java.lang.Boolean> iterator_b42 = treeset_b41.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b45 = treeset_b41.tailSet((java.lang.Boolean)false, true);
    java.util.Spliterator<java.lang.Boolean> spliterator_b46 = treeset_b41.spliterator();
    // The following exception was thrown during execution in test generation
    try {
    boolean b47 = treeset_b15.remove((java.lang.Object)spliterator_b46);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b46);

  }

  @Test
  public void test105() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test105"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Boolean b14 = treeset_b0.floor((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + true+ "'", b14.equals(true));

  }

  @Test
  public void test106() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test106"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);

  }

  @Test
  public void test107() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test107"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b0.headSet((java.lang.Boolean)false);
    boolean b15 = treeset_b0.isEmpty();
    java.util.stream.Stream<java.lang.Boolean> stream_b16 = treeset_b0.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b16);

  }

  @Test
  public void test108() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test108"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.lang.Object obj12 = treeset_b0.clone();
    java.util.Iterator<java.lang.Boolean> iterator_b13 = treeset_b0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b13);

  }

  @Test
  public void test109() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test109"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    int i12 = treeset_b0.size();
    java.lang.Boolean b14 = treeset_b0.ceiling((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);

  }

  @Test
  public void test110() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test110"); }


    java.util.Collection<java.lang.Boolean> collection_b0 = null;
    // The following exception was thrown during execution in test generation
    try {
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(collection_b0);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }

  }

  @Test
  public void test111() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test111"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b8 = treeset_b0.stream();
    java.lang.String str9 = treeset_b0.toString();
    java.util.Comparator<java.lang.Object> comparator_obj10 = (Comparator<Object>) treeset_b0.comparator();
    java.lang.Object[] obj_array11 = treeset_b0.toArray();
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.headSet((java.lang.Boolean)false);
    int i14 = treeset_b0.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[false]"+ "'", str9.equals("[false]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 1);

  }

  @Test
  public void test112() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test112"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b12 = treeset_b11.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b13 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { false, false };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b13, b_array16);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array18 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array19 = new java.lang.Object[][] {  };
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array18, obj_array_array19);
    boolean b21 = arraylist_b13.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array18);
    boolean b22 = treeset_b11.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array18);
    java.util.SortedSet<java.lang.Boolean> sortedset_b25 = treeset_b11.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.lang.Object[] obj_array26 = treeset_b11.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);

  }

  @Test
  public void test113() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test113"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)false, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);

  }

  @Test
  public void test114() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test114"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.util.Iterator<java.lang.Boolean> iterator_b29 = treeset_b12.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true, true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30, b_array33);
    treeset_b30.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b30.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b40 = treeset_b30.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b43 = treeset_b30.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b44 = treeset_b30.iterator();
    boolean b45 = treeset_b12.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30);
    java.lang.Boolean b47 = treeset_b12.ceiling((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b47 + "' != '" + true+ "'", b47.equals(true));

  }

  @Test
  public void test115() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test115"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.lang.Boolean b19 = treeset_b12.lower((java.lang.Boolean)true);
    java.lang.Boolean b20 = treeset_b12.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b23 = treeset_b12.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array27 = new java.lang.Boolean[] { true, true };
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24, b_array27);
    treeset_b24.clear();
    boolean b31 = treeset_b24.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b32 = treeset_b24.stream();
    java.lang.Object[] obj_array33 = new java.lang.Object[] { treeset_b24 };
    java.lang.Object[] obj_array34 = treeset_b12.toArray(obj_array33);
    java.util.TreeSet<java.lang.Boolean> treeset_b35 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.util.Iterator<java.lang.Boolean> iterator_b36 = treeset_b12.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b37 = treeset_b12.parallelStream();
    java.util.Comparator<java.lang.Object> comparator_obj38 = (Comparator<Object>)treeset_b12.comparator();
    boolean b39 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array43 = new java.lang.Boolean[] { true, true };
    boolean b44 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b40, b_array43);
    treeset_b40.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b48 = treeset_b40.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b50 = treeset_b40.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b51 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b40);
    java.util.Iterator<java.lang.Boolean> iterator_b52 = treeset_b51.descendingIterator();
    java.lang.Boolean b54 = treeset_b51.lower((java.lang.Boolean)true);
    java.lang.Object[] obj_array55 = treeset_b51.toArray();
    java.lang.Object[] obj_array56 = treeset_b0.toArray(obj_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array56);

  }

  @Test
  public void test116() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test116"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.SortedSet<java.lang.Boolean> sortedset_b2 = treeset_b0.headSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b2);

  }

  @Test
  public void test117() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test117"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b12 = treeset_b0.floor((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b13.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b23 = treeset_b13.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b13);
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array28 = new java.lang.Boolean[] { true, true };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25, b_array28);
    treeset_b25.clear();
    java.lang.Boolean b32 = treeset_b25.lower((java.lang.Boolean)true);
    java.lang.Boolean b33 = treeset_b25.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b36 = treeset_b25.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array40 = new java.lang.Boolean[] { true, true };
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37, b_array40);
    treeset_b37.clear();
    boolean b44 = treeset_b37.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b45 = treeset_b37.stream();
    java.lang.Object[] obj_array46 = new java.lang.Object[] { treeset_b37 };
    java.lang.Object[] obj_array47 = treeset_b25.toArray(obj_array46);
    java.lang.Object[] obj_array48 = treeset_b24.toArray(obj_array47);
    java.lang.Object[] obj_array49 = treeset_b0.toArray(obj_array47);
    java.util.SortedSet<java.lang.Boolean> sortedset_b51 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.function.Predicate<java.lang.Object> predicate_obj52 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b53 = sortedset_b51.removeIf(predicate_obj52);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b51);

  }

  @Test
  public void test118() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test118"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.tailSet((java.lang.Boolean)true, true);
    java.util.Iterator<java.lang.Boolean> iterator_b17 = treeset_b13.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b17);

  }

  @Test
  public void test119() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test119"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b12 = treeset_b0.floor((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b13.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b23 = treeset_b13.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b13);
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array28 = new java.lang.Boolean[] { true, true };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25, b_array28);
    treeset_b25.clear();
    java.lang.Boolean b32 = treeset_b25.lower((java.lang.Boolean)true);
    java.lang.Boolean b33 = treeset_b25.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b36 = treeset_b25.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array40 = new java.lang.Boolean[] { true, true };
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37, b_array40);
    treeset_b37.clear();
    boolean b44 = treeset_b37.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b45 = treeset_b37.stream();
    java.lang.Object[] obj_array46 = new java.lang.Object[] { treeset_b37 };
    java.lang.Object[] obj_array47 = treeset_b25.toArray(obj_array46);
    java.lang.Object[] obj_array48 = treeset_b24.toArray(obj_array47);
    java.lang.Object[] obj_array49 = treeset_b0.toArray(obj_array47);
    java.util.SortedSet<java.lang.Boolean> sortedset_b51 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b54 = treeset_b0.tailSet((java.lang.Boolean)false, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b55 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array58 = new java.lang.Boolean[] { true, true };
    boolean b59 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b55, b_array58);
    treeset_b55.clear();
    java.lang.Boolean b62 = treeset_b55.lower((java.lang.Boolean)true);
    java.lang.Boolean b63 = treeset_b55.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b66 = treeset_b55.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b67 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array70 = new java.lang.Boolean[] { true, true };
    boolean b71 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b67, b_array70);
    treeset_b67.clear();
    boolean b74 = treeset_b67.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b75 = treeset_b67.stream();
    java.lang.Object[] obj_array76 = new java.lang.Object[] { treeset_b67 };
    java.lang.Object[] obj_array77 = treeset_b55.toArray(obj_array76);
    java.util.TreeSet<java.lang.Boolean> treeset_b78 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b55);
    // The following exception was thrown during execution in test generation
    try {
    boolean b79 = treeset_b0.contains((java.lang.Object)treeset_b55);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array77);

  }

  @Test
  public void test120() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test120"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b13.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.lang.String str22 = treeset_b13.toString();
    java.util.stream.Stream<java.lang.Boolean> stream_b23 = treeset_b13.parallelStream();
    boolean b24 = treeset_b0.equals((java.lang.Object)stream_b23);
    java.util.Iterator<java.lang.Boolean> iterator_b25 = treeset_b0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "[]"+ "'", str22.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b25);

  }

  @Test
  public void test121() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test121"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.util.ArrayList<java.lang.Long> arraylist_long7 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array9 = new java.lang.Long[] { 0L };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long7, long_array9);
    boolean b11 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long7);
    java.util.Iterator<java.lang.Boolean> iterator_b12 = treeset_b0.descendingIterator();
    java.util.Spliterator<java.lang.Boolean> spliterator_b13 = treeset_b0.spliterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { true, true };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array17);
    treeset_b14.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b22 = treeset_b14.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b24 = treeset_b14.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b14.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    // The following exception was thrown during execution in test generation
    try {
    boolean b28 = treeset_b0.remove((java.lang.Object)treeset_b14);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);

  }

  @Test
  public void test122() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test122"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9);
    java.util.function.Consumer<java.lang.Boolean> consumer_b18 = null;
    // The following exception was thrown during execution in test generation
    try {
    treeset_b0.forEach(consumer_b18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test123() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test123"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.lang.Object obj9 = null;
    boolean b10 = treeset_b0.equals(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test124() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test124"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array13 = new java.lang.Boolean[] { true, true };
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10, b_array13);
    treeset_b10.clear();
    java.lang.Boolean b17 = treeset_b10.lower((java.lang.Boolean)true);
    java.lang.Boolean b18 = treeset_b10.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b10.headSet((java.lang.Boolean)true, false);
    boolean b23 = treeset_b10.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b24 = treeset_b10.stream();
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array28 = new java.lang.Boolean[] { true, true };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25, b_array28);
    treeset_b25.clear();
    java.lang.Boolean b32 = treeset_b25.lower((java.lang.Boolean)true);
    java.lang.Boolean b33 = treeset_b25.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b36 = treeset_b25.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array40 = new java.lang.Boolean[] { true, true };
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37, b_array40);
    treeset_b37.clear();
    boolean b44 = treeset_b37.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b45 = treeset_b37.stream();
    java.lang.Object[] obj_array46 = new java.lang.Object[] { treeset_b37 };
    java.lang.Object[] obj_array47 = treeset_b25.toArray(obj_array46);
    java.lang.Object[] obj_array48 = treeset_b10.toArray(obj_array47);
    java.util.SortedSet<java.lang.Boolean> sortedset_b50 = treeset_b10.tailSet((java.lang.Boolean)true);
    boolean b51 = treeset_b0.equals((java.lang.Object)true);
    int i52 = treeset_b0.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 0);

  }

  @Test
  public void test125() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test125"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    boolean b16 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array20 = new java.lang.Boolean[] { true, true };
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17, b_array20);
    treeset_b17.clear();
    java.lang.Boolean b24 = treeset_b17.lower((java.lang.Boolean)true);
    java.lang.Boolean b25 = treeset_b17.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b28 = treeset_b17.headSet((java.lang.Boolean)true, false);
    boolean b30 = treeset_b17.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b31 = treeset_b17.stream();
    boolean b32 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17);
    java.util.function.Consumer<java.lang.Boolean> consumer_b33 = null;
    // The following exception was thrown during execution in test generation
    try {
    treeset_b17.forEach(consumer_b33);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test126() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test126"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    int i11 = treeset_b0.size();
    java.util.Comparator<java.lang.Object> comparator_obj12 = (Comparator<Object>) treeset_b0.comparator();
    java.util.Spliterator<java.lang.Boolean> spliterator_b13 = treeset_b0.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b13);

  }

  @Test
  public void test127() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test127"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array13 = new java.lang.Boolean[] { true, true };
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10, b_array13);
    treeset_b10.clear();
    java.lang.Boolean b17 = treeset_b10.lower((java.lang.Boolean)true);
    java.lang.Boolean b18 = treeset_b10.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b10.headSet((java.lang.Boolean)true, false);
    boolean b23 = treeset_b10.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b24 = treeset_b10.stream();
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array28 = new java.lang.Boolean[] { true, true };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25, b_array28);
    treeset_b25.clear();
    java.lang.Boolean b32 = treeset_b25.lower((java.lang.Boolean)true);
    java.lang.Boolean b33 = treeset_b25.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b36 = treeset_b25.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array40 = new java.lang.Boolean[] { true, true };
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37, b_array40);
    treeset_b37.clear();
    boolean b44 = treeset_b37.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b45 = treeset_b37.stream();
    java.lang.Object[] obj_array46 = new java.lang.Object[] { treeset_b37 };
    java.lang.Object[] obj_array47 = treeset_b25.toArray(obj_array46);
    java.lang.Object[] obj_array48 = treeset_b10.toArray(obj_array47);
    java.util.SortedSet<java.lang.Boolean> sortedset_b50 = treeset_b10.tailSet((java.lang.Boolean)true);
    boolean b51 = treeset_b0.equals((java.lang.Object)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b53 = treeset_b0.tailSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b53);

  }

  @Test
  public void test128() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test128"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b17 = treeset_b9.iterator();
    java.lang.Boolean b19 = treeset_b9.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b9);
    java.lang.Boolean b21 = treeset_b20.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b22 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { false, false };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b22, b_array25);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array27 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array28 = new java.lang.Object[][] {  };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27, obj_array_array28);
    boolean b30 = arraylist_b22.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b31 = treeset_b20.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b32 = treeset_b0.equals((java.lang.Object)treeset_b20);
    boolean b34 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b35 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);

  }

  @Test
  public void test129() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test129"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b17 = treeset_b9.iterator();
    java.lang.Boolean b19 = treeset_b9.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b9);
    java.lang.Boolean b21 = treeset_b20.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b22 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { false, false };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b22, b_array25);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array27 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array28 = new java.lang.Object[][] {  };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27, obj_array_array28);
    boolean b30 = arraylist_b22.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b31 = treeset_b20.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b32 = treeset_b0.equals((java.lang.Object)treeset_b20);
    boolean b34 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b35 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array38 = new java.lang.Boolean[] { true, true };
    boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b35, b_array38);
    treeset_b35.clear();
    boolean b42 = treeset_b35.add((java.lang.Boolean)false);
    int i43 = treeset_b35.size();
    java.lang.Boolean b45 = treeset_b35.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b47 = treeset_b35.tailSet((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b48 = treeset_b35.stream();
    java.lang.Boolean b49 = treeset_b35.pollFirst();
    java.util.TreeSet<java.lang.Boolean> treeset_b50 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array53 = new java.lang.Boolean[] { true, true };
    boolean b54 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b50, b_array53);
    treeset_b50.clear();
    java.lang.Boolean b57 = treeset_b50.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b58 = treeset_b50.iterator();
    java.lang.Boolean b60 = treeset_b50.ceiling((java.lang.Boolean)true);
    boolean b61 = treeset_b35.addAll((java.util.Collection<java.lang.Boolean>)treeset_b50);
    boolean b62 = treeset_b0.remove((java.lang.Object)b61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b45 + "' != '" + false+ "'", b45.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b49 + "' != '" + false+ "'", b49.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);

  }

  @Test
  public void test130() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test130"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.lang.Boolean b19 = treeset_b12.lower((java.lang.Boolean)true);
    java.lang.Boolean b20 = treeset_b12.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b23 = treeset_b12.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array27 = new java.lang.Boolean[] { true, true };
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24, b_array27);
    treeset_b24.clear();
    boolean b31 = treeset_b24.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b32 = treeset_b24.stream();
    java.lang.Object[] obj_array33 = new java.lang.Object[] { treeset_b24 };
    java.lang.Object[] obj_array34 = treeset_b12.toArray(obj_array33);
    java.util.TreeSet<java.lang.Boolean> treeset_b35 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.util.Iterator<java.lang.Boolean> iterator_b36 = treeset_b12.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b37 = treeset_b12.parallelStream();
      java.util.Comparator<java.lang.Object> comparator_obj38 = (Comparator<Object>)treeset_b12.comparator();    boolean b39 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.util.function.Predicate<java.lang.Object> predicate_obj40 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b41 = treeset_b12.removeIf(predicate_obj40);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);

  }

  @Test
  public void test131() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test131"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.lang.Boolean b14 = treeset_b0.ceiling((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);

  }

  @Test
  public void test132() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test132"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    boolean b1 = treeset_b0.isEmpty();
    java.util.SortedSet<java.lang.Boolean> sortedset_b4 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b5 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array8 = new java.lang.Boolean[] { true, true };
    boolean b9 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b5, b_array8);
    treeset_b5.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b5.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { true, true };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array17);
    treeset_b14.clear();
    java.lang.Boolean b21 = treeset_b14.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b22 = treeset_b14.iterator();
    java.lang.Boolean b24 = treeset_b14.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b14);
    java.lang.Boolean b26 = treeset_b25.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b27 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { false, false };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b27, b_array30);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array32 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array33 = new java.lang.Object[][] {  };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32, obj_array_array33);
    boolean b35 = arraylist_b27.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32);
    boolean b36 = treeset_b25.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32);
    boolean b37 = treeset_b5.equals((java.lang.Object)treeset_b25);
    java.util.Iterator<java.lang.Boolean> iterator_b38 = treeset_b5.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b39 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array42 = new java.lang.Boolean[] { true, true };
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b39, b_array42);
    treeset_b39.clear();
    boolean b46 = treeset_b39.add((java.lang.Boolean)false);
    int i47 = treeset_b39.size();
    java.lang.Boolean b49 = treeset_b39.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b51 = treeset_b39.floor((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b52 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array55 = new java.lang.Boolean[] { true, true };
    boolean b56 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b52, b_array55);
    treeset_b52.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b60 = treeset_b52.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b62 = treeset_b52.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b63 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b52);
    java.util.TreeSet<java.lang.Boolean> treeset_b64 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array67 = new java.lang.Boolean[] { true, true };
    boolean b68 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b64, b_array67);
    treeset_b64.clear();
    java.lang.Boolean b71 = treeset_b64.lower((java.lang.Boolean)true);
    java.lang.Boolean b72 = treeset_b64.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b75 = treeset_b64.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b76 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array79 = new java.lang.Boolean[] { true, true };
    boolean b80 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b76, b_array79);
    treeset_b76.clear();
    boolean b83 = treeset_b76.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b84 = treeset_b76.stream();
    java.lang.Object[] obj_array85 = new java.lang.Object[] { treeset_b76 };
    java.lang.Object[] obj_array86 = treeset_b64.toArray(obj_array85);
    java.lang.Object[] obj_array87 = treeset_b63.toArray(obj_array86);
    java.lang.Object[] obj_array88 = treeset_b39.toArray(obj_array86);
    java.lang.Object[] obj_array89 = treeset_b5.toArray(obj_array88);
    java.lang.Object[] obj_array90 = treeset_b0.toArray(obj_array89);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b49 + "' != '" + false+ "'", b49.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b51 + "' != '" + false+ "'", b51.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b80 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b83 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array86);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array88);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array89);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array90);

  }

  @Test
  public void test133() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test133"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b13 = treeset_b0.stream();
    java.lang.Boolean b14 = treeset_b0.pollFirst();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.lang.Boolean b22 = treeset_b15.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b23 = treeset_b15.iterator();
    java.lang.Boolean b25 = treeset_b15.ceiling((java.lang.Boolean)true);
    boolean b26 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15);
    java.util.SortedSet<java.lang.Boolean> sortedset_b29 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + false+ "'", b14.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b29);

  }

  @Test
  public void test134() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test134"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.lang.Boolean b19 = treeset_b12.lower((java.lang.Boolean)true);
    java.lang.Boolean b20 = treeset_b12.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b23 = treeset_b12.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array27 = new java.lang.Boolean[] { true, true };
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24, b_array27);
    treeset_b24.clear();
    boolean b31 = treeset_b24.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b32 = treeset_b24.stream();
    java.lang.Object[] obj_array33 = new java.lang.Object[] { treeset_b24 };
    java.lang.Object[] obj_array34 = treeset_b12.toArray(obj_array33);
    java.util.TreeSet<java.lang.Boolean> treeset_b35 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.util.Iterator<java.lang.Boolean> iterator_b36 = treeset_b12.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b37 = treeset_b12.parallelStream();
      java.util.Comparator<java.lang.Object> comparator_obj38 = (Comparator<Object>)treeset_b12.comparator();
    boolean b39 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    treeset_b0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);

  }

  @Test
  public void test135() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test135"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b13 = treeset_b0.descendingIterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b0.tailSet((java.lang.Boolean)true, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);

  }

  @Test
  public void test136() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test136"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.util.Iterator<java.lang.Boolean> iterator_b29 = treeset_b12.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true, true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30, b_array33);
    treeset_b30.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b30.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b40 = treeset_b30.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b43 = treeset_b30.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b44 = treeset_b30.iterator();
    boolean b45 = treeset_b12.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30);
    int i46 = treeset_b30.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b47 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array50 = new java.lang.Boolean[] { true, true };
    boolean b51 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b47, b_array50);
    treeset_b47.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b55 = treeset_b47.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b57 = treeset_b47.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b58 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b47);
    java.util.Iterator<java.lang.Boolean> iterator_b59 = treeset_b58.descendingIterator();
    java.lang.Boolean b61 = treeset_b58.lower((java.lang.Boolean)true);
    java.lang.Object[] obj_array62 = treeset_b58.toArray();
    boolean b63 = treeset_b30.equals((java.lang.Object)treeset_b58);
    java.lang.String str64 = treeset_b30.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "[true]"+ "'", str64.equals("[true]"));

  }

  @Test
  public void test137() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test137"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b12 = treeset_b11.descendingIterator();
    java.lang.Boolean b14 = treeset_b11.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b15 = treeset_b11.descendingIterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b17 = treeset_b11.headSet((java.lang.Boolean)true);
    java.util.function.Consumer<java.lang.Boolean> consumer_b18 = null;
    // The following exception was thrown during execution in test generation
    try {
    sortedset_b17.forEach(consumer_b18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b17);

  }

  @Test
  public void test138() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test138"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array11 = new java.lang.Boolean[] { true, true };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array11);
    treeset_b8.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b16 = treeset_b8.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b18 = treeset_b8.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b8.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8);
    java.lang.Boolean b23 = treeset_b0.pollFirst();
    java.util.function.Predicate<java.lang.Object> predicate_obj24 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b25 = treeset_b0.removeIf(predicate_obj24);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b23 + "' != '" + false+ "'", b23.equals(false));

  }

  @Test
  public void test139() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test139"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b15 = treeset_b0.add((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);

  }

  @Test
  public void test140() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test140"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    boolean b16 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    treeset_b18.clear();
    java.lang.Boolean b25 = treeset_b18.lower((java.lang.Boolean)true);
    java.lang.Boolean b26 = treeset_b18.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true, true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30, b_array33);
    treeset_b30.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b30.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b40 = treeset_b30.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array41 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array42 = new java.lang.Object[][] {  };
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array41, obj_array_array42);
    boolean b44 = treeset_b30.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array41);
    boolean b45 = treeset_b18.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30);
    java.lang.Boolean b46 = treeset_b30.first();
    java.util.Iterator<java.lang.Boolean> iterator_b47 = treeset_b30.descendingIterator();
    boolean b48 = treeset_b0.equals((java.lang.Object)treeset_b30);
    java.util.stream.Stream<java.lang.Boolean> stream_b49 = treeset_b0.parallelStream();
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.Boolean> navigableset_b54 = treeset_b0.subSet((java.lang.Boolean)true, false, (java.lang.Boolean)false, false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b46 + "' != '" + true+ "'", b46.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b49);

  }

  @Test
  public void test141() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test141"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array11 = new java.lang.Boolean[] { true, true };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array11);
    treeset_b8.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b16 = treeset_b8.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b18 = treeset_b8.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b8.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8);
    int i23 = treeset_b8.size();
    boolean b25 = treeset_b8.add((java.lang.Boolean)false);
    java.lang.Boolean b26 = treeset_b8.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + false+ "'", b26.equals(false));

  }

  @Test
  public void test142() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test142"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.function.Consumer<java.lang.Boolean> consumer_b13 = null;
    // The following exception was thrown during execution in test generation
    try {
    treeset_b0.forEach(consumer_b13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);

  }

  @Test
  public void test143() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test143"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b12.stream();
    java.lang.Object[] obj_array21 = new java.lang.Object[] { treeset_b12 };
    java.lang.Object[] obj_array22 = treeset_b0.toArray(obj_array21);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    boolean b25 = treeset_b0.remove((java.lang.Object)(byte)1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);

  }

  @Test
  public void test144() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test144"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    boolean b16 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b19 = treeset_b0.higher((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b19 + "' != '" + true+ "'", b19.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);

  }

  @Test
  public void test145() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test145"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.lang.Boolean b30 = treeset_b12.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    java.lang.Boolean b38 = treeset_b31.lower((java.lang.Boolean)true);
    java.lang.Boolean b39 = treeset_b31.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b42 = treeset_b31.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b42);
    java.util.ArrayList<java.lang.String> arraylist_str44 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array49 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str44, str_array49);
    boolean b51 = treeset_b43.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    boolean b52 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b53 = treeset_b12.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b54 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b12);
    java.util.stream.Stream<java.lang.Boolean> stream_b55 = treeset_b12.parallelStream();
    java.util.stream.Stream<java.lang.Boolean> stream_b56 = treeset_b12.parallelStream();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b57 = treeset_b12.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b30 + "' != '" + true+ "'", b30.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b57);

  }

  @Test
  public void test146() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test146"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.lang.Boolean b12 = treeset_b0.higher((java.lang.Boolean)true);
    treeset_b0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);

  }

  @Test
  public void test147() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test147"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Boolean> arraylist_b9 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { false, false };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b9, b_array12);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array14 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array15 = new java.lang.Object[][] {  };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array14, obj_array_array15);
    boolean b17 = arraylist_b9.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array14);
    boolean b18 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array14);
    java.util.stream.Stream<java.lang.Boolean> stream_b19 = treeset_b0.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b19);

  }

  @Test
  public void test148() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test148"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b11.headSet((java.lang.Boolean)false, false);
    java.util.Comparator<java.lang.Object> comparator_obj15 = (Comparator<Object>) treeset_b11.comparator();
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array19 = new java.lang.Boolean[] { true, true };
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b16, b_array19);
    treeset_b16.clear();
    java.lang.Boolean b23 = treeset_b16.lower((java.lang.Boolean)true);
    java.lang.Boolean b24 = treeset_b16.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b27 = treeset_b16.headSet((java.lang.Boolean)true, false);
    boolean b29 = treeset_b16.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b30 = treeset_b16.stream();
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    java.lang.Boolean b38 = treeset_b31.lower((java.lang.Boolean)true);
    java.lang.Boolean b39 = treeset_b31.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b42 = treeset_b31.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array46 = new java.lang.Boolean[] { true, true };
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b43, b_array46);
    treeset_b43.clear();
    boolean b50 = treeset_b43.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b51 = treeset_b43.stream();
    java.lang.Object[] obj_array52 = new java.lang.Object[] { treeset_b43 };
    java.lang.Object[] obj_array53 = treeset_b31.toArray(obj_array52);
    java.lang.Object[] obj_array54 = treeset_b16.toArray(obj_array53);
    java.lang.Object[] obj_array55 = treeset_b11.toArray(obj_array53);
    java.lang.Object[] obj_array56 = treeset_b11.toArray();
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.Boolean> sortedset_b59 = treeset_b11.subSet((java.lang.Boolean)true, (java.lang.Boolean)false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array56);

  }

  @Test
  public void test149() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test149"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.function.Predicate<java.lang.Object> predicate_obj11 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b12 = treeset_b0.removeIf(predicate_obj11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);

  }

  @Test
  public void test150() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test150"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    java.lang.Boolean b20 = treeset_b13.lower((java.lang.Boolean)true);
    java.lang.Boolean b21 = treeset_b13.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b24 = treeset_b13.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array28 = new java.lang.Boolean[] { true, true };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25, b_array28);
    treeset_b25.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b33 = treeset_b25.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b35 = treeset_b25.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array36 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array37 = new java.lang.Object[][] {  };
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array36, obj_array_array37);
    boolean b39 = treeset_b25.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array36);
    boolean b40 = treeset_b13.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25);
    java.lang.Boolean b41 = treeset_b25.first();
    java.lang.Boolean b43 = treeset_b25.higher((java.lang.Boolean)false);
    java.lang.Boolean b44 = treeset_b25.last();
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array48 = new java.lang.Boolean[] { true, true };
    boolean b49 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b45, b_array48);
    treeset_b45.clear();
    java.lang.Boolean b52 = treeset_b45.lower((java.lang.Boolean)true);
    java.lang.Boolean b53 = treeset_b45.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b56 = treeset_b45.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b57 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array60 = new java.lang.Boolean[] { true, true };
    boolean b61 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b57, b_array60);
    treeset_b57.clear();
    boolean b64 = treeset_b57.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b65 = treeset_b57.stream();
    java.lang.Object[] obj_array66 = new java.lang.Object[] { treeset_b57 };
    java.lang.Object[] obj_array67 = treeset_b45.toArray(obj_array66);
    java.util.TreeSet<java.lang.Boolean> treeset_b68 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b45);
    java.util.Iterator<java.lang.Boolean> iterator_b69 = treeset_b45.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b70 = treeset_b45.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b71 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array74 = new java.lang.Boolean[] { true, true };
    boolean b75 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b71, b_array74);
    treeset_b71.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b77 = treeset_b71.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b80 = treeset_b71.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long81 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array86 = new java.lang.Long[] { 1L, 1L, 100L, (-1L) };
    boolean b87 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long81, long_array86);
    boolean b88 = treeset_b71.removeAll((java.util.Collection<java.lang.Long>)arraylist_long81);
    boolean b89 = treeset_b45.removeAll((java.util.Collection<java.lang.Long>)arraylist_long81);
    boolean b90 = treeset_b25.removeAll((java.util.Collection<java.lang.Long>)arraylist_long81);
    boolean b91 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b41 + "' != '" + true+ "'", b41.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b43 + "' != '" + true+ "'", b43.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b44 + "' != '" + true+ "'", b44.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array86);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b87 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b88 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b91 == false);

  }

  @Test
  public void test151() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test151"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b13 = treeset_b0.stream();
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array16 = new java.lang.String[] { "" };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array16);
    boolean b18 = treeset_b0.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);

  }

  @Test
  public void test152() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test152"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Object obj13 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj13);

  }

  @Test
  public void test153() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test153"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { false };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array14);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b12.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b19 = treeset_b12.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b22 = treeset_b12.headSet((java.lang.Boolean)false, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array26 = new java.lang.Boolean[] { true, true };
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23, b_array26);
    treeset_b23.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b29 = treeset_b23.spliterator();
    java.util.ArrayList<java.lang.Long> arraylist_long30 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array32 = new java.lang.Long[] { 0L };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long30, long_array32);
    boolean b34 = treeset_b23.removeAll((java.util.Collection<java.lang.Long>)arraylist_long30);
    boolean b35 = treeset_b12.removeAll((java.util.Collection<java.lang.Long>)arraylist_long30);
    boolean b36 = treeset_b11.equals((java.lang.Object)arraylist_long30);
    boolean b38 = treeset_b11.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b39 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array42 = new java.lang.Boolean[] { true, true };
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b39, b_array42);
    treeset_b39.clear();
    java.lang.Boolean b46 = treeset_b39.lower((java.lang.Boolean)true);
    java.lang.Boolean b47 = treeset_b39.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b50 = treeset_b39.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b51 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array54 = new java.lang.Boolean[] { true, true };
    boolean b55 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b51, b_array54);
    treeset_b51.clear();
    boolean b58 = treeset_b51.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b59 = treeset_b51.stream();
    java.lang.Object[] obj_array60 = new java.lang.Object[] { treeset_b51 };
    java.lang.Object[] obj_array61 = treeset_b39.toArray(obj_array60);
    java.util.TreeSet<java.lang.Boolean> treeset_b62 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b39);
    java.util.Iterator<java.lang.Boolean> iterator_b63 = treeset_b39.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b64 = treeset_b39.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b65 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array68 = new java.lang.Boolean[] { true, true };
    boolean b69 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b65, b_array68);
    treeset_b65.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b71 = treeset_b65.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b74 = treeset_b65.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long75 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array80 = new java.lang.Long[] { 1L, 1L, 100L, (-1L) };
    boolean b81 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long75, long_array80);
    boolean b82 = treeset_b65.removeAll((java.util.Collection<java.lang.Long>)arraylist_long75);
    boolean b83 = treeset_b39.removeAll((java.util.Collection<java.lang.Long>)arraylist_long75);
    boolean b84 = treeset_b11.removeAll((java.util.Collection<java.lang.Long>)arraylist_long75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b81 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b82 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b84 == false);

  }

  @Test
  public void test154() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test154"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    boolean b14 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b17 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);

  }

  @Test
  public void test155() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test155"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b11.headSet((java.lang.Boolean)false, false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b19 = treeset_b11.subSet((java.lang.Boolean)false, false, (java.lang.Boolean)true, false);
    java.util.function.Consumer<java.lang.Boolean> consumer_b20 = null;
    // The following exception was thrown during execution in test generation
    try {
    navigableset_b19.forEach(consumer_b20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b19);

  }

  @Test
  public void test156() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test156"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array10 = new java.lang.Boolean[] { true, true };
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b7, b_array10);
    treeset_b7.clear();
    java.lang.Boolean b14 = treeset_b7.lower((java.lang.Boolean)true);
    java.lang.Boolean b15 = treeset_b7.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b7.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b19 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array22 = new java.lang.Boolean[] { true, true };
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b19, b_array22);
    treeset_b19.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b19.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b29 = treeset_b19.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array30 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array31 = new java.lang.Object[][] {  };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array30, obj_array_array31);
    boolean b33 = treeset_b19.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array30);
    boolean b34 = treeset_b7.addAll((java.util.Collection<java.lang.Boolean>)treeset_b19);
    java.lang.Boolean b35 = treeset_b19.first();
    java.lang.Boolean b37 = treeset_b19.higher((java.lang.Boolean)false);
    boolean b38 = treeset_b0.equals((java.lang.Object)treeset_b19);
    java.util.TreeSet<java.lang.Boolean> treeset_b39 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array42 = new java.lang.Boolean[] { true, true };
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b39, b_array42);
    treeset_b39.clear();
    java.lang.Boolean b46 = treeset_b39.lower((java.lang.Boolean)true);
    java.lang.Boolean b47 = treeset_b39.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b48 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array51 = new java.lang.Boolean[] { true, true };
    boolean b52 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b48, b_array51);
    treeset_b48.clear();
    java.lang.Boolean b55 = treeset_b48.lower((java.lang.Boolean)true);
    boolean b56 = treeset_b39.addAll((java.util.Collection<java.lang.Boolean>)treeset_b48);
    java.util.TreeSet<java.lang.Boolean> treeset_b57 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array60 = new java.lang.Boolean[] { true, true };
    boolean b61 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b57, b_array60);
    treeset_b57.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b63 = treeset_b57.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b66 = treeset_b57.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long67 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array69 = new java.lang.Long[] { 1L };
    boolean b70 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long67, long_array69);
    boolean b71 = treeset_b57.removeAll((java.util.Collection<java.lang.Long>)arraylist_long67);
    boolean b72 = treeset_b39.removeAll((java.util.Collection<java.lang.Long>)arraylist_long67);
    boolean b73 = treeset_b19.removeAll((java.util.Collection<java.lang.Long>)arraylist_long67);
    java.lang.String str74 = treeset_b19.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b35 + "' != '" + true+ "'", b35.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b37 + "' != '" + true+ "'", b37.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str74 + "' != '" + "[true]"+ "'", str74.equals("[true]"));

  }

  @Test
  public void test157() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test157"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b13 = treeset_b0.stream();
    java.lang.Boolean b14 = treeset_b0.pollFirst();
    java.util.Spliterator<java.lang.Boolean> spliterator_b15 = treeset_b0.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + false+ "'", b14.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b15);

  }

  @Test
  public void test158() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test158"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.util.ArrayList<java.lang.Long> arraylist_long7 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array9 = new java.lang.Long[] { 0L };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long7, long_array9);
    boolean b11 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long7);
    java.util.Comparator<java.lang.Object> comparator_obj12 = (Comparator<Object>) treeset_b0.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b13 = treeset_b0.descendingSet();
    java.lang.Boolean b15 = treeset_b0.floor((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);

  }

  @Test
  public void test159() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test159"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b12 = treeset_b0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b12);

  }

  @Test
  public void test160() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test160"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b16 = treeset_b0.iterator();
    java.lang.String str17 = treeset_b0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "[true]"+ "'", str17.equals("[true]"));

  }

  @Test
  public void test161() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test161"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b11 = treeset_b0.parallelStream();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);

  }

  @Test
  public void test162() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test162"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array10 = new java.lang.Boolean[] { true, true };
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b7, b_array10);
    treeset_b7.clear();
    java.lang.Boolean b14 = treeset_b7.lower((java.lang.Boolean)true);
    java.lang.Boolean b15 = treeset_b7.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b7.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b19 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array22 = new java.lang.Boolean[] { true, true };
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b19, b_array22);
    treeset_b19.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b19.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b29 = treeset_b19.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array30 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array31 = new java.lang.Object[][] {  };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array30, obj_array_array31);
    boolean b33 = treeset_b19.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array30);
    boolean b34 = treeset_b7.addAll((java.util.Collection<java.lang.Boolean>)treeset_b19);
    java.lang.Boolean b35 = treeset_b19.first();
    java.lang.Boolean b37 = treeset_b19.higher((java.lang.Boolean)false);
    boolean b38 = treeset_b0.equals((java.lang.Object)treeset_b19);
    java.lang.String str39 = treeset_b0.toString();
    java.lang.Object[] obj_array40 = treeset_b0.toArray();
    java.util.Spliterator<java.lang.Boolean> spliterator_b41 = treeset_b0.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b35 + "' != '" + true+ "'", b35.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b37 + "' != '" + true+ "'", b37.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[false]"+ "'", str39.equals("[false]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b41);

  }

  @Test
  public void test163() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test163"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b14 = treeset_b0.iterator();
    java.util.Comparator<java.lang.Object> comparator_obj15 = (Comparator<Object>) treeset_b0.comparator();
    java.lang.Boolean b17 = treeset_b0.ceiling((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b17 + "' != '" + true+ "'", b17.equals(true));

  }

  @Test
  public void test164() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test164"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    boolean b16 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    treeset_b18.clear();
    java.lang.Boolean b25 = treeset_b18.lower((java.lang.Boolean)true);
    java.lang.Boolean b26 = treeset_b18.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true, true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30, b_array33);
    treeset_b30.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b30.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b40 = treeset_b30.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array41 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array42 = new java.lang.Object[][] {  };
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array41, obj_array_array42);
    boolean b44 = treeset_b30.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array41);
    boolean b45 = treeset_b18.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30);
    java.lang.Boolean b46 = treeset_b30.first();
    java.util.Iterator<java.lang.Boolean> iterator_b47 = treeset_b30.descendingIterator();
    boolean b48 = treeset_b0.equals((java.lang.Object)treeset_b30);
    java.lang.Boolean b50 = treeset_b30.floor((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b46 + "' != '" + true+ "'", b46.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b50 + "' != '" + true+ "'", b50.equals(true));

  }

  @Test
  public void test165() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test165"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj10 = (Comparator<Object>) treeset_b0.comparator();
    java.lang.Object obj11 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj11);

  }

  @Test
  public void test166() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test166"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b12.stream();
    java.lang.Object[] obj_array21 = new java.lang.Object[] { treeset_b12 };
    java.lang.Object[] obj_array22 = treeset_b0.toArray(obj_array21);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b24 = treeset_b0.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b25 = treeset_b0.parallelStream();
    java.lang.Boolean b27 = treeset_b0.lower((java.lang.Boolean)false);
    boolean b29 = treeset_b0.add((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);

  }

  @Test
  public void test167() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test167"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean b2 = treeset_b0.lower((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b2);

  }

  @Test
  public void test168() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test168"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.util.ArrayList<java.lang.Long> arraylist_long7 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array9 = new java.lang.Long[] { 0L };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long7, long_array9);
    boolean b11 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long7);
    java.util.Comparator<java.lang.Object> comparator_obj12 = (Comparator<Object>)treeset_b0.comparator();
    java.lang.Object[] obj_array13 = treeset_b0.toArray();
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { true, true };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array17);
    treeset_b14.clear();
    java.lang.Boolean b21 = treeset_b14.lower((java.lang.Boolean)true);
    java.lang.Boolean b22 = treeset_b14.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b25 = treeset_b14.headSet((java.lang.Boolean)true, false);
    boolean b27 = treeset_b14.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b28 = treeset_b14.stream();
    java.util.TreeSet<java.lang.Boolean> treeset_b29 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array32 = new java.lang.Boolean[] { true, true };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b29, b_array32);
    treeset_b29.clear();
    java.lang.Boolean b36 = treeset_b29.lower((java.lang.Boolean)true);
    java.lang.Boolean b37 = treeset_b29.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b40 = treeset_b29.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b41 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array44 = new java.lang.Boolean[] { true, true };
    boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b41, b_array44);
    treeset_b41.clear();
    boolean b48 = treeset_b41.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b49 = treeset_b41.stream();
    java.lang.Object[] obj_array50 = new java.lang.Object[] { treeset_b41 };
    java.lang.Object[] obj_array51 = treeset_b29.toArray(obj_array50);
    java.lang.Object[] obj_array52 = treeset_b14.toArray(obj_array51);
    java.lang.Object[] obj_array53 = treeset_b0.toArray(obj_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array53);

  }

  @Test
  public void test169() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test169"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    boolean b16 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array20 = new java.lang.Boolean[] { true, true };
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17, b_array20);
    treeset_b17.clear();
    java.lang.Boolean b24 = treeset_b17.lower((java.lang.Boolean)true);
    java.lang.Boolean b25 = treeset_b17.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b28 = treeset_b17.headSet((java.lang.Boolean)true, false);
    boolean b30 = treeset_b17.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b31 = treeset_b17.stream();
    boolean b32 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17);
    java.lang.Boolean b33 = treeset_b0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b33 + "' != '" + true+ "'", b33.equals(true));

  }

  @Test
  public void test170() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test170"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    java.lang.Boolean b17 = treeset_b9.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b9.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b20);
    java.util.ArrayList<java.lang.String> arraylist_str22 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array27 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str22, str_array27);
    boolean b29 = treeset_b21.retainAll((java.util.Collection<java.lang.String>)arraylist_str22);
    boolean b30 = treeset_b0.retainAll((java.util.Collection<java.lang.String>)arraylist_str22);
    java.lang.Object obj31 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj31);

  }

  @Test
  public void test171() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test171"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    boolean b17 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    treeset_b18.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b24 = treeset_b18.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b27 = treeset_b18.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long28 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array30 = new java.lang.Long[] { 1L };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long28, long_array30);
    boolean b32 = treeset_b18.removeAll((java.util.Collection<java.lang.Long>)arraylist_long28);
    boolean b33 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long28);
    java.lang.Boolean b35 = treeset_b0.lower((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b35);

  }

  @Test
  public void test172() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test172"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.lang.Boolean b30 = treeset_b12.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    java.lang.Boolean b38 = treeset_b31.lower((java.lang.Boolean)true);
    java.lang.Boolean b39 = treeset_b31.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b42 = treeset_b31.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b42);
    java.util.ArrayList<java.lang.String> arraylist_str44 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array49 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str44, str_array49);
    boolean b51 = treeset_b43.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    boolean b52 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b53 = treeset_b12.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b54 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b12);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b55 = treeset_b54.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b30 + "' != '" + true+ "'", b30.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b53);

  }

  @Test
  public void test173() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test173"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    boolean b15 = treeset_b0.equals((java.lang.Object)10.0d);
    java.util.SortedSet<java.lang.Boolean> sortedset_b18 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b18);

  }

  @Test
  public void test174() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test174"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b0.headSet((java.lang.Boolean)false);
    boolean b15 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b16 = treeset_b0.descendingIterator();
    java.lang.Boolean b18 = treeset_b0.lower((java.lang.Boolean)false);
    java.lang.Boolean b19 = treeset_b0.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b19 + "' != '" + false+ "'", b19.equals(false));

  }

  @Test
  public void test175() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test175"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b17 = treeset_b9.iterator();
    java.lang.Boolean b19 = treeset_b9.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b9);
    java.lang.Boolean b21 = treeset_b20.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b22 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { false, false };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b22, b_array25);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array27 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array28 = new java.lang.Object[][] {  };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27, obj_array_array28);
    boolean b30 = arraylist_b22.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b31 = treeset_b20.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b32 = treeset_b0.equals((java.lang.Object)treeset_b20);
    boolean b34 = treeset_b0.add((java.lang.Boolean)true);
    boolean b35 = treeset_b0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);

  }

  @Test
  public void test176() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test176"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b6);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b7.tailSet((java.lang.Boolean)true, false);
    java.util.Iterator<java.lang.Boolean> iterator_b11 = treeset_b7.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b11);

  }

  @Test
  public void test177() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test177"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    boolean b13 = treeset_b0.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b14 = treeset_b0.stream();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.lang.Boolean b22 = treeset_b15.lower((java.lang.Boolean)true);
    java.lang.Boolean b23 = treeset_b15.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b15.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { true, true };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27, b_array30);
    treeset_b27.clear();
    boolean b34 = treeset_b27.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b35 = treeset_b27.stream();
    java.lang.Object[] obj_array36 = new java.lang.Object[] { treeset_b27 };
    java.lang.Object[] obj_array37 = treeset_b15.toArray(obj_array36);
    java.lang.Object[] obj_array38 = treeset_b0.toArray(obj_array37);
    java.lang.Boolean b39 = treeset_b0.last();
    java.util.function.Consumer<java.lang.Boolean> consumer_b40 = null;
    // The following exception was thrown during execution in test generation
    try {
    treeset_b0.forEach(consumer_b40);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b39 + "' != '" + true+ "'", b39.equals(true));

  }

  @Test
  public void test178() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test178"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b11);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b13.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b23 = treeset_b13.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b13);
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array28 = new java.lang.Boolean[] { true, true };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25, b_array28);
    treeset_b25.clear();
    java.lang.Boolean b32 = treeset_b25.lower((java.lang.Boolean)true);
    java.lang.Boolean b33 = treeset_b25.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b36 = treeset_b25.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array40 = new java.lang.Boolean[] { true, true };
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37, b_array40);
    treeset_b37.clear();
    boolean b44 = treeset_b37.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b45 = treeset_b37.stream();
    java.lang.Object[] obj_array46 = new java.lang.Object[] { treeset_b37 };
    java.lang.Object[] obj_array47 = treeset_b25.toArray(obj_array46);
    java.lang.Object[] obj_array48 = treeset_b24.toArray(obj_array47);
    java.util.stream.Stream<java.lang.Boolean> stream_b49 = treeset_b24.stream();
    boolean b50 = treeset_b12.equals((java.lang.Object)treeset_b24);
    java.lang.Boolean b51 = treeset_b24.last();
    java.util.TreeSet<java.lang.Boolean> treeset_b52 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array54 = new java.lang.Boolean[] { false };
    boolean b55 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b52, b_array54);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b58 = treeset_b52.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b59 = treeset_b52.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b62 = treeset_b52.headSet((java.lang.Boolean)false, false);
    java.lang.Boolean b63 = treeset_b52.first();
    // The following exception was thrown during execution in test generation
    try {
    boolean b64 = treeset_b24.remove((java.lang.Object)treeset_b52);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b51 + "' != '" + true+ "'", b51.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b63 + "' != '" + false+ "'", b63.equals(false));

  }

  @Test
  public void test179() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test179"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array11 = new java.lang.Boolean[] { true, true };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array11);
    treeset_b8.clear();
    java.lang.Boolean b15 = treeset_b8.lower((java.lang.Boolean)true);
    java.lang.Boolean b16 = treeset_b8.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b19 = treeset_b8.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { true, true };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b20, b_array23);
    treeset_b20.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b20.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b30 = treeset_b20.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array31 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array32 = new java.lang.Object[][] {  };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array31, obj_array_array32);
    boolean b34 = treeset_b20.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array31);
    boolean b35 = treeset_b8.addAll((java.util.Collection<java.lang.Boolean>)treeset_b20);
    boolean b36 = treeset_b0.remove((java.lang.Object)b35);
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b40 = treeset_b0.floor((java.lang.Boolean)false);
    java.lang.Boolean b42 = treeset_b0.ceiling((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b42);

  }

  @Test
  public void test180() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test180"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.lang.Boolean b14 = treeset_b0.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { false };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array17);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b15.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b21);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b25 = treeset_b22.tailSet((java.lang.Boolean)true, false);
    boolean b26 = treeset_b0.equals((java.lang.Object)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { true, true };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27, b_array30);
    treeset_b27.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b35 = treeset_b27.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b37 = treeset_b27.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b38 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b27);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b41 = treeset_b38.headSet((java.lang.Boolean)false, false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b46 = treeset_b38.subSet((java.lang.Boolean)false, false, (java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b47 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array50 = new java.lang.Boolean[] { true, true };
    boolean b51 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b47, b_array50);
    treeset_b47.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b55 = treeset_b47.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Boolean> arraylist_b56 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array59 = new java.lang.Boolean[] { false, false };
    boolean b60 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b56, b_array59);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array61 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array62 = new java.lang.Object[][] {  };
    boolean b63 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array61, obj_array_array62);
    boolean b64 = arraylist_b56.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array61);
    boolean b65 = treeset_b47.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array61);
    boolean b66 = treeset_b38.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array61);
    boolean b67 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == true);

  }

  @Test
  public void test181() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test181"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b8 = treeset_b0.parallelStream();
    java.lang.String str9 = treeset_b0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[false]"+ "'", str9.equals("[false]"));

  }

  @Test
  public void test182() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test182"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b9 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long10 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array12 = new java.lang.Long[] { 1L };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long10, long_array12);
    boolean b14 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long10);
    boolean b15 = treeset_b0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);

  }

  @Test
  public void test183() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test183"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b9 = treeset_b0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);

  }

  @Test
  public void test184() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test184"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.util.Iterator<java.lang.Boolean> iterator_b29 = treeset_b12.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true, true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30, b_array33);
    treeset_b30.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b30.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b40 = treeset_b30.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b43 = treeset_b30.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b44 = treeset_b30.iterator();
    boolean b45 = treeset_b12.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30);
    java.lang.Boolean b47 = treeset_b12.ceiling((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b47 + "' != '" + true+ "'", b47.equals(true));

  }

  @Test
  public void test185() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test185"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    boolean b16 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    treeset_b18.clear();
    java.lang.Boolean b25 = treeset_b18.lower((java.lang.Boolean)true);
    java.lang.Boolean b26 = treeset_b18.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b29);
    java.util.ArrayList<java.lang.String> arraylist_str31 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array36 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str31, str_array36);
    boolean b38 = treeset_b30.retainAll((java.util.Collection<java.lang.String>)arraylist_str31);
    boolean b39 = treeset_b17.retainAll((java.util.Collection<java.lang.String>)arraylist_str31);
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array42 = new java.lang.Boolean[] { false };
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b40, b_array42);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b46 = treeset_b40.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b47 = treeset_b40.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b48 = treeset_b40.stream();
    // The following exception was thrown during execution in test generation
    try {
    boolean b49 = treeset_b17.remove((java.lang.Object)stream_b48);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b48);

  }

  @Test
  public void test186() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test186"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    int i11 = treeset_b0.size();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b0.tailSet((java.lang.Boolean)true, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);

  }

  @Test
  public void test187() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test187"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b13 = treeset_b0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b13 + "' != '" + false+ "'", b13.equals(false));

  }

  @Test
  public void test188() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test188"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    boolean b13 = treeset_b0.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b14 = treeset_b0.stream();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.lang.Boolean b22 = treeset_b15.lower((java.lang.Boolean)true);
    java.lang.Boolean b23 = treeset_b15.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b15.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { true, true };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27, b_array30);
    treeset_b27.clear();
    boolean b34 = treeset_b27.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b35 = treeset_b27.stream();
    java.lang.Object[] obj_array36 = new java.lang.Object[] { treeset_b27 };
    java.lang.Object[] obj_array37 = treeset_b15.toArray(obj_array36);
    java.lang.Object[] obj_array38 = treeset_b0.toArray(obj_array37);
    java.util.SortedSet<java.lang.Boolean> sortedset_b40 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b41 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b40);

  }

  @Test
  public void test189() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test189"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b23 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.util.stream.Stream<java.lang.Boolean> stream_b24 = navigableset_b23.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b24);

  }

  @Test
  public void test190() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test190"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b19 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array22 = new java.lang.Boolean[] { true, true };
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b19, b_array22);
    treeset_b19.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b19.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b29 = treeset_b19.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array30 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array31 = new java.lang.Object[][] {  };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array30, obj_array_array31);
    boolean b33 = treeset_b19.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array30);
    boolean b35 = treeset_b19.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b36 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array39 = new java.lang.Boolean[] { true, true };
    boolean b40 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b36, b_array39);
    treeset_b36.clear();
    java.lang.Boolean b43 = treeset_b36.lower((java.lang.Boolean)true);
    java.lang.Boolean b44 = treeset_b36.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b47 = treeset_b36.headSet((java.lang.Boolean)true, false);
    boolean b49 = treeset_b36.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b50 = treeset_b36.stream();
    boolean b51 = treeset_b19.addAll((java.util.Collection<java.lang.Boolean>)treeset_b36);
    boolean b52 = treeset_b0.equals((java.lang.Object)treeset_b19);
    java.util.function.Predicate<java.lang.Object> predicate_obj53 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b54 = treeset_b19.removeIf(predicate_obj53);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);

  }

  @Test
  public void test191() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test191"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b11.headSet((java.lang.Boolean)false, false);
    java.util.Comparator<java.lang.Object> comparator_obj15 = (Comparator<Object>) treeset_b11.comparator();
    java.util.stream.Stream<java.lang.Boolean> stream_b16 = treeset_b11.parallelStream();
    java.util.function.Predicate<java.lang.Object> predicate_obj17 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b18 = treeset_b11.removeIf(predicate_obj17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b16);

  }

  @Test
  public void test192() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test192"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b11);
    java.util.ArrayList<java.lang.String> arraylist_str13 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str13, str_array18);
    boolean b20 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str13);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { true, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    treeset_b21.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b29 = treeset_b21.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b31 = treeset_b21.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array32 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array33 = new java.lang.Object[][] {  };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32, obj_array_array33);
    boolean b35 = treeset_b21.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32);
    boolean b36 = treeset_b12.equals((java.lang.Object)treeset_b21);
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array39 = new java.lang.Boolean[] { false };
    boolean b40 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37, b_array39);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b43 = treeset_b37.headSet((java.lang.Boolean)false, true);
    java.util.stream.Stream<java.lang.Boolean> stream_b44 = treeset_b37.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b37);
    boolean b46 = treeset_b21.equals((java.lang.Object)treeset_b45);
    java.util.SortedSet<java.lang.Boolean> sortedset_b48 = treeset_b21.headSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b48);

  }

  @Test
  public void test193() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test193"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b9 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long10 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array15 = new java.lang.Long[] { 1L, 1L, 100L, (-1L) };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long10, long_array15);
    boolean b17 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long10);
    java.util.stream.Stream<java.lang.Boolean> stream_b18 = treeset_b0.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b19 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array22 = new java.lang.Boolean[] { true, true };
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b19, b_array22);
    treeset_b19.clear();
    java.lang.Boolean b26 = treeset_b19.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b27 = treeset_b19.iterator();
    java.lang.Boolean b29 = treeset_b19.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b19);
    java.lang.Boolean b31 = treeset_b30.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b32 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array35 = new java.lang.Boolean[] { false, false };
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b32, b_array35);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array37 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array38 = new java.lang.Object[][] {  };
    boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array37, obj_array_array38);
    boolean b40 = arraylist_b32.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array37);
    boolean b41 = treeset_b30.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array37);
    boolean b42 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);

  }

  @Test
  public void test194() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test194"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array4 = new java.lang.Boolean[] { true, true };
    boolean b5 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b1, b_array4);
    treeset_b1.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b7 = treeset_b1.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b1.headSet((java.lang.Boolean)false, true);
    boolean b11 = treeset_b0.equals((java.lang.Object)treeset_b1);
    int i12 = treeset_b0.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b13.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b23 = treeset_b13.add((java.lang.Boolean)true);
    boolean b25 = treeset_b13.add((java.lang.Boolean)true);
    boolean b27 = treeset_b13.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b30 = treeset_b13.headSet((java.lang.Boolean)true, true);
    boolean b31 = treeset_b0.equals((java.lang.Object)navigableset_b30);
    java.util.function.Consumer<java.lang.Boolean> consumer_b32 = null;
    // The following exception was thrown during execution in test generation
    try {
    treeset_b0.forEach(consumer_b32);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);

  }

  @Test
  public void test195() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test195"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    int i20 = treeset_b12.size();
    java.lang.Boolean b22 = treeset_b12.ceiling((java.lang.Boolean)false);
    boolean b23 = treeset_b12.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b28 = treeset_b12.subSet((java.lang.Boolean)true, false, (java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b29 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array32 = new java.lang.Boolean[] { true, true };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b29, b_array32);
    treeset_b29.clear();
    java.lang.Boolean b36 = treeset_b29.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b37 = treeset_b29.iterator();
    java.lang.Boolean b39 = treeset_b29.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b29);
    java.util.TreeSet<java.lang.Boolean> treeset_b41 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array44 = new java.lang.Boolean[] { true, true };
    boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b41, b_array44);
    treeset_b41.clear();
    java.lang.Boolean b48 = treeset_b41.lower((java.lang.Boolean)true);
    java.lang.Boolean b49 = treeset_b41.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b52 = treeset_b41.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b53 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array56 = new java.lang.Boolean[] { true, true };
    boolean b57 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b53, b_array56);
    treeset_b53.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b61 = treeset_b53.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b63 = treeset_b53.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array64 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array65 = new java.lang.Object[][] {  };
    boolean b66 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array64, obj_array_array65);
    boolean b67 = treeset_b53.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array64);
    boolean b68 = treeset_b41.addAll((java.util.Collection<java.lang.Boolean>)treeset_b53);
    java.lang.Boolean b69 = treeset_b53.first();
    java.lang.Boolean b71 = treeset_b53.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b72 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array75 = new java.lang.Boolean[] { true, true };
    boolean b76 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b72, b_array75);
    treeset_b72.clear();
    java.lang.Boolean b79 = treeset_b72.lower((java.lang.Boolean)true);
    java.lang.Boolean b80 = treeset_b72.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b83 = treeset_b72.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b84 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b83);
    java.util.ArrayList<java.lang.String> arraylist_str85 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array90 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str85, str_array90);
    boolean b92 = treeset_b84.retainAll((java.util.Collection<java.lang.String>)arraylist_str85);
    boolean b93 = treeset_b53.retainAll((java.util.Collection<java.lang.String>)arraylist_str85);
    boolean b94 = treeset_b29.retainAll((java.util.Collection<java.lang.String>)arraylist_str85);
    boolean b95 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str85);
    boolean b96 = treeset_b0.retainAll((java.util.Collection<java.lang.String>)arraylist_str85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b22 + "' != '" + false+ "'", b22.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b69 + "' != '" + true+ "'", b69.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b71 + "' != '" + true+ "'", b71.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array90);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b91 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b92 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b93 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b94 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b95 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b96 == false);

  }

  @Test
  public void test196() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test196"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.lang.Boolean b30 = treeset_b12.higher((java.lang.Boolean)false);
    java.lang.Object[] obj_array31 = treeset_b12.toArray();
    java.util.SortedSet<java.lang.Boolean> sortedset_b34 = treeset_b12.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b30 + "' != '" + true+ "'", b30.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b34);

  }

  @Test
  public void test197() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test197"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.lang.Boolean b30 = treeset_b12.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    java.lang.Boolean b38 = treeset_b31.lower((java.lang.Boolean)true);
    java.lang.Boolean b39 = treeset_b31.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b42 = treeset_b31.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b42);
    java.util.ArrayList<java.lang.String> arraylist_str44 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array49 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str44, str_array49);
    boolean b51 = treeset_b43.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    boolean b52 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b53 = treeset_b12.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b54 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b12);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b55 = treeset_b12.descendingSet();
    java.util.SortedSet<java.lang.Boolean> sortedset_b57 = treeset_b12.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b62 = treeset_b12.subSet((java.lang.Boolean)true, false, (java.lang.Boolean)true, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b30 + "' != '" + true+ "'", b30.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b62);

  }

  @Test
  public void test198() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test198"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    boolean b13 = treeset_b0.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b14 = treeset_b0.stream();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.lang.Boolean b22 = treeset_b15.lower((java.lang.Boolean)true);
    java.lang.Boolean b23 = treeset_b15.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b15.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { true, true };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27, b_array30);
    treeset_b27.clear();
    boolean b34 = treeset_b27.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b35 = treeset_b27.stream();
    java.lang.Object[] obj_array36 = new java.lang.Object[] { treeset_b27 };
    java.lang.Object[] obj_array37 = treeset_b15.toArray(obj_array36);
    java.lang.Object[] obj_array38 = treeset_b0.toArray(obj_array37);
    java.util.TreeSet<java.lang.Boolean> treeset_b39 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array43 = new java.lang.Boolean[] { true, true };
    boolean b44 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b40, b_array43);
    treeset_b40.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b48 = treeset_b40.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b50 = treeset_b40.add((java.lang.Boolean)true);
    boolean b52 = treeset_b40.add((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b53 = treeset_b40.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b54 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array57 = new java.lang.Boolean[] { true, true };
    boolean b58 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b54, b_array57);
    treeset_b54.clear();
    java.lang.Boolean b61 = treeset_b54.lower((java.lang.Boolean)true);
    java.lang.Boolean b62 = treeset_b54.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b65 = treeset_b54.headSet((java.lang.Boolean)true, false);
    boolean b67 = treeset_b54.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b68 = treeset_b54.stream();
    java.util.TreeSet<java.lang.Boolean> treeset_b69 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array72 = new java.lang.Boolean[] { true, true };
    boolean b73 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b69, b_array72);
    treeset_b69.clear();
    java.lang.Boolean b76 = treeset_b69.lower((java.lang.Boolean)true);
    java.lang.Boolean b77 = treeset_b69.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b80 = treeset_b69.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b81 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array84 = new java.lang.Boolean[] { true, true };
    boolean b85 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b81, b_array84);
    treeset_b81.clear();
    boolean b88 = treeset_b81.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b89 = treeset_b81.stream();
    java.lang.Object[] obj_array90 = new java.lang.Object[] { treeset_b81 };
    java.lang.Object[] obj_array91 = treeset_b69.toArray(obj_array90);
    java.lang.Object[] obj_array92 = treeset_b54.toArray(obj_array91);
    java.lang.Object[] obj_array93 = treeset_b40.toArray(obj_array91);
    java.lang.Object[] obj_array94 = treeset_b39.toArray(obj_array93);
    java.util.function.Consumer<java.lang.Boolean> consumer_b95 = null;
    // The following exception was thrown during execution in test generation
    try {
    treeset_b39.forEach(consumer_b95);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b88 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b89);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array90);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array91);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array92);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array93);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array94);

  }

  @Test
  public void test199() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test199"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b8 = treeset_b0.stream();
    java.lang.String str9 = treeset_b0.toString();
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array13 = new java.lang.Boolean[] { true, true };
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10, b_array13);
    treeset_b10.clear();
    java.lang.Boolean b17 = treeset_b10.lower((java.lang.Boolean)true);
    java.lang.Boolean b18 = treeset_b10.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b10.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { true, true };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array25);
    treeset_b22.clear();
    boolean b29 = treeset_b22.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b30 = treeset_b22.stream();
    java.lang.Object[] obj_array31 = new java.lang.Object[] { treeset_b22 };
    java.lang.Object[] obj_array32 = treeset_b10.toArray(obj_array31);
    java.util.TreeSet<java.lang.Boolean> treeset_b33 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b10);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b33);
    java.util.Iterator<java.lang.Boolean> iterator_b35 = treeset_b34.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b38 = treeset_b34.tailSet((java.lang.Boolean)false, true);
    java.util.Spliterator<java.lang.Boolean> spliterator_b39 = treeset_b34.spliterator();
    java.lang.Object[] obj_array40 = treeset_b34.toArray();
    java.lang.Object[] obj_array41 = treeset_b0.toArray(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[false]"+ "'", str9.equals("[false]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);

  }

  @Test
  public void test200() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test200"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b12 = treeset_b11.pollFirst();
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b11.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);

  }

  @Test
  public void test201() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test201"); }


    java.util.Comparator<java.lang.Boolean> comparator_b0 = null;
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(comparator_b0);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b2 = treeset_b1.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }

  }

  @Test
  public void test202() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test202"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b12.tailSet((java.lang.Boolean)false);
    boolean b16 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b17 = treeset_b12.stream();
    java.lang.Boolean b19 = treeset_b12.lower((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);

  }

  @Test
  public void test203() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test203"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    boolean b14 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object obj15 = treeset_b0.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b17 = treeset_b16.last();
    java.util.ArrayList<java.lang.String> arraylist_str18 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array24 = new java.lang.String[] { "hi!", "[]", "[]", "[true]", "[false]" };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str18, str_array24);
    boolean b26 = treeset_b16.retainAll((java.util.Collection<java.lang.String>)arraylist_str18);
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { true, true };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27, b_array30);
    treeset_b27.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b35 = treeset_b27.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b37 = treeset_b27.add((java.lang.Boolean)true);
    boolean b39 = treeset_b27.add((java.lang.Boolean)true);
    boolean b41 = treeset_b27.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b44 = treeset_b27.headSet((java.lang.Boolean)true, true);
    java.util.Iterator<java.lang.Boolean> iterator_b45 = treeset_b27.descendingIterator();
    // The following exception was thrown during execution in test generation
    try {
    boolean b46 = treeset_b16.remove((java.lang.Object)iterator_b45);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b17 + "' != '" + true+ "'", b17.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b45);

  }

  @Test
  public void test204() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test204"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    int i11 = treeset_b0.size();
    java.util.stream.Stream<java.lang.Boolean> stream_b12 = treeset_b0.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b12);

  }

  @Test
  public void test205() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test205"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.stream.Stream<java.lang.Boolean> stream_b7 = treeset_b0.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.stream.Stream<java.lang.Boolean> stream_b9 = treeset_b8.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b9);

  }

  @Test
  public void test206() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test206"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b12.stream();
    java.lang.Object[] obj_array21 = new java.lang.Object[] { treeset_b12 };
    java.lang.Object[] obj_array22 = treeset_b0.toArray(obj_array21);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b24 = treeset_b0.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b25 = treeset_b0.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b26 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array29 = new java.lang.Boolean[] { true, true };
    boolean b30 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b26, b_array29);
    treeset_b26.clear();
    java.lang.Boolean b33 = treeset_b26.lower((java.lang.Boolean)true);
    java.lang.Boolean b34 = treeset_b26.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b37 = treeset_b26.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b38 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array41 = new java.lang.Boolean[] { true, true };
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b38, b_array41);
    treeset_b38.clear();
    boolean b45 = treeset_b38.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b46 = treeset_b38.stream();
    java.lang.Object[] obj_array47 = new java.lang.Object[] { treeset_b38 };
    java.lang.Object[] obj_array48 = treeset_b26.toArray(obj_array47);
    java.lang.Object[] obj_array49 = treeset_b0.toArray(obj_array48);
    java.util.TreeSet<java.lang.Boolean> treeset_b50 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Object obj51 = treeset_b50.clone();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b56 = treeset_b50.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b56);

  }

  @Test
  public void test207() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test207"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    boolean b16 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    treeset_b18.clear();
    java.lang.Boolean b25 = treeset_b18.lower((java.lang.Boolean)true);
    java.lang.Boolean b26 = treeset_b18.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true, true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30, b_array33);
    treeset_b30.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b30.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b40 = treeset_b30.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array41 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array42 = new java.lang.Object[][] {  };
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array41, obj_array_array42);
    boolean b44 = treeset_b30.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array41);
    boolean b45 = treeset_b18.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30);
    java.lang.Boolean b46 = treeset_b30.first();
    java.util.Iterator<java.lang.Boolean> iterator_b47 = treeset_b30.descendingIterator();
    boolean b48 = treeset_b0.equals((java.lang.Object)treeset_b30);
    java.util.stream.Stream<java.lang.Boolean> stream_b49 = treeset_b0.parallelStream();
    java.util.function.Predicate<java.lang.Object> predicate_obj50 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b51 = treeset_b0.removeIf(predicate_obj50);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b46 + "' != '" + true+ "'", b46.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b49);

  }

  @Test
  public void test208() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test208"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b12.stream();
    java.lang.Object[] obj_array21 = new java.lang.Object[] { treeset_b12 };
    java.lang.Object[] obj_array22 = treeset_b0.toArray(obj_array21);
    java.util.function.Predicate<java.lang.Object> predicate_obj23 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b24 = treeset_b0.removeIf(predicate_obj23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);

  }

  @Test
  public void test209() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test209"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b8 = treeset_b0.stream();
    java.lang.Boolean b9 = treeset_b0.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { false };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b10, b_array12);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b10.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array20 = new java.lang.Boolean[] { true, true };
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17, b_array20);
    treeset_b17.clear();
    java.lang.Boolean b24 = treeset_b17.lower((java.lang.Boolean)true);
    java.lang.Boolean b25 = treeset_b17.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b28 = treeset_b17.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b29 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array32 = new java.lang.Boolean[] { true, true };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b29, b_array32);
    treeset_b29.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b37 = treeset_b29.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b39 = treeset_b29.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array40 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array41 = new java.lang.Object[][] {  };
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array40, obj_array_array41);
    boolean b43 = treeset_b29.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array40);
    boolean b44 = treeset_b17.addAll((java.util.Collection<java.lang.Boolean>)treeset_b29);
    java.lang.Boolean b45 = treeset_b29.first();
    java.lang.Boolean b47 = treeset_b29.higher((java.lang.Boolean)false);
    boolean b48 = treeset_b10.equals((java.lang.Object)treeset_b29);
    java.util.TreeSet<java.lang.Boolean> treeset_b49 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array52 = new java.lang.Boolean[] { true, true };
    boolean b53 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b49, b_array52);
    treeset_b49.clear();
    java.lang.Boolean b56 = treeset_b49.lower((java.lang.Boolean)true);
    java.lang.Boolean b57 = treeset_b49.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b58 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array61 = new java.lang.Boolean[] { true, true };
    boolean b62 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b58, b_array61);
    treeset_b58.clear();
    java.lang.Boolean b65 = treeset_b58.lower((java.lang.Boolean)true);
    boolean b66 = treeset_b49.addAll((java.util.Collection<java.lang.Boolean>)treeset_b58);
    java.util.TreeSet<java.lang.Boolean> treeset_b67 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array70 = new java.lang.Boolean[] { true, true };
    boolean b71 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b67, b_array70);
    treeset_b67.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b73 = treeset_b67.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b76 = treeset_b67.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long77 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array79 = new java.lang.Long[] { 1L };
    boolean b80 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long77, long_array79);
    boolean b81 = treeset_b67.removeAll((java.util.Collection<java.lang.Long>)arraylist_long77);
    boolean b82 = treeset_b49.removeAll((java.util.Collection<java.lang.Long>)arraylist_long77);
    boolean b83 = treeset_b29.removeAll((java.util.Collection<java.lang.Long>)arraylist_long77);
    boolean b84 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b45 + "' != '" + true+ "'", b45.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b47 + "' != '" + true+ "'", b47.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b80 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b82 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b84 == false);

  }

  @Test
  public void test210() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test210"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array11 = new java.lang.Boolean[] { true, true };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array11);
    treeset_b8.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b16 = treeset_b8.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b18 = treeset_b8.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b8.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8);
    int i23 = treeset_b8.size();
    boolean b25 = treeset_b8.add((java.lang.Boolean)false);
    java.lang.Object[] obj_array26 = treeset_b8.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);

  }

  @Test
  public void test211() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test211"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b0.last();
    java.util.stream.Stream<java.lang.Boolean> stream_b29 = treeset_b0.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b29);

  }

  @Test
  public void test212() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test212"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array11 = new java.lang.Boolean[] { true, true };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array11);
    treeset_b8.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b16 = treeset_b8.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b18 = treeset_b8.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b8.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b22 = treeset_b8.iterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b8);
    boolean b24 = treeset_b0.equals((java.lang.Object)treeset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test213() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test213"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    java.lang.Object obj15 = treeset_b0.clone();
    java.lang.String str16 = treeset_b0.toString();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b0.subSet((java.lang.Boolean)false, false, (java.lang.Boolean)false, false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b23 = treeset_b0.tailSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "[true]"+ "'", str16.equals("[true]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b23);

  }

  @Test
  public void test214() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test214"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b17 = treeset_b0.headSet((java.lang.Boolean)true);
    java.lang.String str18 = treeset_b0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "[true]"+ "'", str18.equals("[true]"));

  }

  @Test
  public void test215() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test215"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.lang.Boolean b11 = treeset_b0.pollFirst();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);

  }

  @Test
  public void test216() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test216"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b10 = treeset_b0.higher((java.lang.Boolean)false);
    boolean b12 = treeset_b0.add((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    boolean b20 = treeset_b13.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b22 = treeset_b13.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b25 = treeset_b13.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b13.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b29 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array32 = new java.lang.Boolean[] { true, true };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b29, b_array32);
    treeset_b29.clear();
    boolean b36 = treeset_b29.add((java.lang.Boolean)false);
    int i37 = treeset_b29.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b38 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array41 = new java.lang.Boolean[] { true, true };
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b38, b_array41);
    treeset_b38.clear();
    java.lang.Boolean b45 = treeset_b38.lower((java.lang.Boolean)true);
    java.lang.Boolean b46 = treeset_b38.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b49 = treeset_b38.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b50 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b49);
    java.util.ArrayList<java.lang.String> arraylist_str51 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array56 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str51, str_array56);
    boolean b58 = treeset_b50.retainAll((java.util.Collection<java.lang.String>)arraylist_str51);
    boolean b59 = treeset_b29.retainAll((java.util.Collection<java.lang.String>)arraylist_str51);
    boolean b60 = treeset_b13.retainAll((java.util.Collection<java.lang.String>)arraylist_str51);
    // The following exception was thrown during execution in test generation
    try {
    boolean b61 = treeset_b0.contains((java.lang.Object)arraylist_str51);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);

  }

  @Test
  public void test217() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test217"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array11 = new java.lang.Boolean[] { true, true };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array11);
    treeset_b8.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b16 = treeset_b8.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b18 = treeset_b8.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b8.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8);
    int i23 = treeset_b8.size();
    boolean b25 = treeset_b8.add((java.lang.Boolean)false);
    java.lang.Boolean b27 = treeset_b8.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b28 = treeset_b8.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b27 + "' != '" + false+ "'", b27.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b28);

  }

  @Test
  public void test218() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test218"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b17 = treeset_b9.iterator();
    java.lang.Boolean b19 = treeset_b9.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b9);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { true, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    treeset_b21.clear();
    java.lang.Boolean b28 = treeset_b21.lower((java.lang.Boolean)true);
    java.lang.Boolean b29 = treeset_b21.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b32 = treeset_b21.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b33 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true, true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b33, b_array36);
    treeset_b33.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b41 = treeset_b33.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b43 = treeset_b33.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array44 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array45 = new java.lang.Object[][] {  };
    boolean b46 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array44, obj_array_array45);
    boolean b47 = treeset_b33.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array44);
    boolean b48 = treeset_b21.addAll((java.util.Collection<java.lang.Boolean>)treeset_b33);
    java.lang.Boolean b49 = treeset_b33.first();
    java.lang.Boolean b51 = treeset_b33.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b52 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array55 = new java.lang.Boolean[] { true, true };
    boolean b56 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b52, b_array55);
    treeset_b52.clear();
    java.lang.Boolean b59 = treeset_b52.lower((java.lang.Boolean)true);
    java.lang.Boolean b60 = treeset_b52.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b63 = treeset_b52.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b64 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b63);
    java.util.ArrayList<java.lang.String> arraylist_str65 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array70 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str65, str_array70);
    boolean b72 = treeset_b64.retainAll((java.util.Collection<java.lang.String>)arraylist_str65);
    boolean b73 = treeset_b33.retainAll((java.util.Collection<java.lang.String>)arraylist_str65);
    boolean b74 = treeset_b9.retainAll((java.util.Collection<java.lang.String>)arraylist_str65);
    boolean b75 = treeset_b0.retainAll((java.util.Collection<java.lang.String>)arraylist_str65);
    java.lang.Boolean b77 = treeset_b0.lower((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b49 + "' != '" + true+ "'", b49.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b51 + "' != '" + true+ "'", b51.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b77);

  }

  @Test
  public void test219() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test219"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    boolean b13 = treeset_b0.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b14 = treeset_b0.stream();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.lang.Boolean b22 = treeset_b15.lower((java.lang.Boolean)true);
    java.lang.Boolean b23 = treeset_b15.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b15.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { true, true };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27, b_array30);
    treeset_b27.clear();
    boolean b34 = treeset_b27.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b35 = treeset_b27.stream();
    java.lang.Object[] obj_array36 = new java.lang.Object[] { treeset_b27 };
    java.lang.Object[] obj_array37 = treeset_b15.toArray(obj_array36);
    java.lang.Object[] obj_array38 = treeset_b0.toArray(obj_array37);
    java.util.TreeSet<java.lang.Boolean> treeset_b39 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b41 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array44 = new java.lang.Boolean[] { true, true };
    boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b41, b_array44);
    treeset_b41.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b47 = treeset_b41.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b50 = treeset_b41.headSet((java.lang.Boolean)false, true);
    boolean b51 = treeset_b40.equals((java.lang.Object)treeset_b41);
    int i52 = treeset_b40.size();
    java.util.SortedSet<java.lang.Boolean> sortedset_b54 = treeset_b40.headSet((java.lang.Boolean)false);
    boolean b55 = treeset_b0.equals((java.lang.Object)sortedset_b54);
    java.util.stream.Stream<java.lang.Boolean> stream_b56 = treeset_b0.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b56);

  }

  @Test
  public void test220() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test220"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Boolean b14 = treeset_b0.last();
    java.util.SortedSet<java.lang.Boolean> sortedset_b16 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.Collection<java.lang.Long> collection_long17 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b18 = treeset_b0.removeAll(collection_long17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + true+ "'", b14.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b16);

  }

  @Test
  public void test221() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test221"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Boolean> arraylist_b9 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { false, false };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b9, b_array12);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array14 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array15 = new java.lang.Object[][] {  };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array14, obj_array_array15);
    boolean b17 = arraylist_b9.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array14);
    boolean b18 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array14);
    java.lang.Object obj19 = treeset_b0.clone();
    java.lang.Boolean b20 = treeset_b0.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b20);

  }

  @Test
  public void test222() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test222"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.tailSet((java.lang.Boolean)false, false);
    java.lang.Object obj11 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.headSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);

  }

  @Test
  public void test223() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test223"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.util.TreeSet<java.lang.Boolean> treeset_b28 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array31 = new java.lang.Boolean[] { true, true };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b28, b_array31);
    treeset_b28.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b36 = treeset_b28.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b38 = treeset_b28.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array39 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array40 = new java.lang.Object[][] {  };
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array39, obj_array_array40);
    boolean b42 = treeset_b28.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array39);
    boolean b43 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array39);
    java.util.SortedSet<java.lang.Boolean> sortedset_b45 = treeset_b12.headSet((java.lang.Boolean)true);
    boolean b47 = treeset_b12.add((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);

  }

  @Test
  public void test224() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test224"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.lang.Boolean b30 = treeset_b12.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    java.lang.Boolean b38 = treeset_b31.lower((java.lang.Boolean)true);
    java.lang.Boolean b39 = treeset_b31.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b42 = treeset_b31.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b42);
    java.util.ArrayList<java.lang.String> arraylist_str44 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array49 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str44, str_array49);
    boolean b51 = treeset_b43.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    boolean b52 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b53 = treeset_b12.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b54 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b12);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b55 = treeset_b12.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b30 + "' != '" + true+ "'", b30.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b53);

  }

  @Test
  public void test225() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test225"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b0.headSet((java.lang.Boolean)false, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b19 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array22 = new java.lang.Boolean[] { true, true };
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b19, b_array22);
    treeset_b19.clear();
    java.lang.Boolean b26 = treeset_b19.lower((java.lang.Boolean)true);
    java.lang.Boolean b27 = treeset_b19.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b30 = treeset_b19.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    boolean b38 = treeset_b31.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b39 = treeset_b31.stream();
    java.lang.Object[] obj_array40 = new java.lang.Object[] { treeset_b31 };
    java.lang.Object[] obj_array41 = treeset_b19.toArray(obj_array40);
    java.util.TreeSet<java.lang.Boolean> treeset_b42 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b19);
    java.util.Iterator<java.lang.Boolean> iterator_b43 = treeset_b19.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b44 = treeset_b19.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array48 = new java.lang.Boolean[] { true, true };
    boolean b49 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b45, b_array48);
    treeset_b45.clear();
    java.lang.Boolean b52 = treeset_b45.lower((java.lang.Boolean)true);
    java.lang.Boolean b53 = treeset_b45.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b56 = treeset_b45.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b57 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array60 = new java.lang.Boolean[] { true, true };
    boolean b61 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b57, b_array60);
    treeset_b57.clear();
    boolean b64 = treeset_b57.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b65 = treeset_b57.stream();
    java.lang.Object[] obj_array66 = new java.lang.Object[] { treeset_b57 };
    java.lang.Object[] obj_array67 = treeset_b45.toArray(obj_array66);
    java.lang.Object[] obj_array68 = treeset_b19.toArray(obj_array67);
    java.lang.Object[] obj_array69 = treeset_b0.toArray(obj_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array69);

  }

  @Test
  public void test226() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test226"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array4 = new java.lang.Boolean[] { true, true };
    boolean b5 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b1, b_array4);
    treeset_b1.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b7 = treeset_b1.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b1.headSet((java.lang.Boolean)false, true);
    boolean b11 = treeset_b0.equals((java.lang.Object)treeset_b1);
    boolean b12 = treeset_b1.isEmpty();
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b1.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b23 = treeset_b15.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b25 = treeset_b15.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b26 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b15);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b26.headSet((java.lang.Boolean)false, false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b34 = treeset_b26.subSet((java.lang.Boolean)false, false, (java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b35 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array38 = new java.lang.Boolean[] { true, true };
    boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b35, b_array38);
    treeset_b35.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b43 = treeset_b35.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Boolean> arraylist_b44 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array47 = new java.lang.Boolean[] { false, false };
    boolean b48 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b44, b_array47);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array49 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array50 = new java.lang.Object[][] {  };
    boolean b51 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array49, obj_array_array50);
    boolean b52 = arraylist_b44.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array49);
    boolean b53 = treeset_b35.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array49);
    boolean b54 = treeset_b26.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array49);
    boolean b55 = treeset_b1.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);

  }

  @Test
  public void test227() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test227"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b13 = treeset_b0.stream();
    java.lang.Boolean b14 = treeset_b0.pollFirst();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.lang.Boolean b22 = treeset_b15.lower((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b15.headSet((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj25 = (Comparator<Object>) treeset_b15.comparator();
    boolean b26 = treeset_b0.equals((java.lang.Object)comparator_obj25);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b31 = treeset_b0.subSet((java.lang.Boolean)false, false, (java.lang.Boolean)true, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + false+ "'", b14.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b31);

  }

  @Test
  public void test228() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test228"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.lang.Boolean b30 = treeset_b12.higher((java.lang.Boolean)false);
    java.lang.Boolean b31 = treeset_b12.last();
    java.util.function.Consumer<java.lang.Boolean> consumer_b32 = null;
    // The following exception was thrown during execution in test generation
    try {
    treeset_b12.forEach(consumer_b32);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b30 + "' != '" + true+ "'", b30.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b31 + "' != '" + true+ "'", b31.equals(true));

  }

  @Test
  public void test229() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test229"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.util.TreeSet<java.lang.Boolean> treeset_b28 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array31 = new java.lang.Boolean[] { true, true };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b28, b_array31);
    treeset_b28.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b36 = treeset_b28.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b38 = treeset_b28.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array39 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array40 = new java.lang.Object[][] {  };
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array39, obj_array_array40);
    boolean b42 = treeset_b28.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array39);
    boolean b43 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array39);
    java.util.SortedSet<java.lang.Boolean> sortedset_b45 = treeset_b12.headSet((java.lang.Boolean)true);
    java.util.function.Predicate<java.lang.Object> predicate_obj46 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b47 = sortedset_b45.removeIf(predicate_obj46);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b45);

  }

  @Test
  public void test230() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test230"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b12 = treeset_b11.descendingIterator();
    java.lang.Boolean b14 = treeset_b11.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b15 = treeset_b11.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { false };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b16, b_array18);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b22 = treeset_b16.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b23 = treeset_b16.iterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array27 = new java.lang.Boolean[] { true, true };
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24, b_array27);
    treeset_b24.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b32 = treeset_b24.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b34 = treeset_b24.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b37 = treeset_b24.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b38 = treeset_b16.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24);
    boolean b39 = treeset_b11.equals((java.lang.Object)treeset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);

  }

  @Test
  public void test231() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test231"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b11);
    java.util.ArrayList<java.lang.String> arraylist_str13 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str13, str_array18);
    boolean b20 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str13);
    java.util.Iterator<java.lang.Boolean> iterator_b21 = treeset_b12.descendingIterator();
    boolean b22 = treeset_b12.isEmpty();
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array26 = new java.lang.Boolean[] { true, true };
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23, b_array26);
    treeset_b23.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b31 = treeset_b23.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Boolean> arraylist_b32 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array35 = new java.lang.Boolean[] { false, false };
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b32, b_array35);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array37 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array38 = new java.lang.Object[][] {  };
    boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array37, obj_array_array38);
    boolean b40 = arraylist_b32.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array37);
    boolean b41 = treeset_b23.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array37);
    boolean b42 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array37);
    java.lang.Boolean b44 = treeset_b12.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array48 = new java.lang.Boolean[] { true, true };
    boolean b49 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b45, b_array48);
    treeset_b45.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b51 = treeset_b45.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b54 = treeset_b45.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long55 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array57 = new java.lang.Long[] { 1L };
    boolean b58 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long55, long_array57);
    boolean b59 = treeset_b45.removeAll((java.util.Collection<java.lang.Long>)arraylist_long55);
    boolean b60 = treeset_b12.removeAll((java.util.Collection<java.lang.Long>)arraylist_long55);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b61 = treeset_b12.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b61);

  }

  @Test
  public void test232() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test232"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b0.headSet((java.lang.Boolean)false);
    boolean b15 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b16 = treeset_b0.descendingIterator();
    java.lang.Boolean b18 = treeset_b0.lower((java.lang.Boolean)false);
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.Boolean> navigableset_b23 = treeset_b0.subSet((java.lang.Boolean)true, false, (java.lang.Boolean)false, false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b18);

  }

  @Test
  public void test233() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test233"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b19 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array22 = new java.lang.Boolean[] { true, true };
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b19, b_array22);
    treeset_b19.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b19.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b29 = treeset_b19.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array30 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array31 = new java.lang.Object[][] {  };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array30, obj_array_array31);
    boolean b33 = treeset_b19.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array30);
    boolean b35 = treeset_b19.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b36 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array39 = new java.lang.Boolean[] { true, true };
    boolean b40 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b36, b_array39);
    treeset_b36.clear();
    java.lang.Boolean b43 = treeset_b36.lower((java.lang.Boolean)true);
    java.lang.Boolean b44 = treeset_b36.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b47 = treeset_b36.headSet((java.lang.Boolean)true, false);
    boolean b49 = treeset_b36.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b50 = treeset_b36.stream();
    boolean b51 = treeset_b19.addAll((java.util.Collection<java.lang.Boolean>)treeset_b36);
    boolean b52 = treeset_b0.equals((java.lang.Object)treeset_b19);
    java.util.TreeSet<java.lang.Boolean> treeset_b53 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array56 = new java.lang.Boolean[] { true, true };
    boolean b57 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b53, b_array56);
    treeset_b53.clear();
    java.lang.Boolean b60 = treeset_b53.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b61 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array64 = new java.lang.Boolean[] { true, true };
    boolean b65 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b61, b_array64);
    treeset_b61.clear();
    java.lang.Boolean b68 = treeset_b61.lower((java.lang.Boolean)true);
    java.lang.Boolean b69 = treeset_b61.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b72 = treeset_b61.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b73 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array76 = new java.lang.Boolean[] { true, true };
    boolean b77 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b73, b_array76);
    treeset_b73.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b81 = treeset_b73.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b83 = treeset_b73.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array84 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array85 = new java.lang.Object[][] {  };
    boolean b86 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array84, obj_array_array85);
    boolean b87 = treeset_b73.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array84);
    boolean b88 = treeset_b61.addAll((java.util.Collection<java.lang.Boolean>)treeset_b73);
    boolean b89 = treeset_b53.remove((java.lang.Object)b88);
    java.util.SortedSet<java.lang.Boolean> sortedset_b91 = treeset_b53.tailSet((java.lang.Boolean)false);
    // The following exception was thrown during execution in test generation
    try {
    boolean b92 = treeset_b19.remove((java.lang.Object)treeset_b53);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b83 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b86 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b87 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b88 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b91);

  }

  @Test
  public void test234() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test234"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.lang.Boolean b14 = treeset_b0.higher((java.lang.Boolean)false);
    boolean b16 = treeset_b0.add((java.lang.Boolean)true);
    treeset_b0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);

  }

  @Test
  public void test235() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test235"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array4 = new java.lang.Boolean[] { true, true };
    boolean b5 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b1, b_array4);
    treeset_b1.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b7 = treeset_b1.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b1.headSet((java.lang.Boolean)false, true);
    boolean b11 = treeset_b0.equals((java.lang.Object)treeset_b1);
    java.lang.Boolean b13 = treeset_b1.lower((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { false };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array16);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b14.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { true, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    treeset_b21.clear();
    java.lang.Boolean b28 = treeset_b21.lower((java.lang.Boolean)true);
    java.lang.Boolean b29 = treeset_b21.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b32 = treeset_b21.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b33 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true, true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b33, b_array36);
    treeset_b33.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b41 = treeset_b33.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b43 = treeset_b33.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array44 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array45 = new java.lang.Object[][] {  };
    boolean b46 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array44, obj_array_array45);
    boolean b47 = treeset_b33.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array44);
    boolean b48 = treeset_b21.addAll((java.util.Collection<java.lang.Boolean>)treeset_b33);
    java.lang.Boolean b49 = treeset_b33.first();
    java.lang.Boolean b51 = treeset_b33.higher((java.lang.Boolean)false);
    boolean b52 = treeset_b14.equals((java.lang.Object)treeset_b33);
    java.util.TreeSet<java.lang.Boolean> treeset_b53 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array56 = new java.lang.Boolean[] { true, true };
    boolean b57 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b53, b_array56);
    treeset_b53.clear();
    java.lang.Boolean b60 = treeset_b53.lower((java.lang.Boolean)true);
    java.lang.Boolean b61 = treeset_b53.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b62 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array65 = new java.lang.Boolean[] { true, true };
    boolean b66 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b62, b_array65);
    treeset_b62.clear();
    java.lang.Boolean b69 = treeset_b62.lower((java.lang.Boolean)true);
    boolean b70 = treeset_b53.addAll((java.util.Collection<java.lang.Boolean>)treeset_b62);
    java.util.TreeSet<java.lang.Boolean> treeset_b71 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array74 = new java.lang.Boolean[] { true, true };
    boolean b75 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b71, b_array74);
    treeset_b71.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b77 = treeset_b71.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b80 = treeset_b71.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long81 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array83 = new java.lang.Long[] { 1L };
    boolean b84 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long81, long_array83);
    boolean b85 = treeset_b71.removeAll((java.util.Collection<java.lang.Long>)arraylist_long81);
    boolean b86 = treeset_b53.removeAll((java.util.Collection<java.lang.Long>)arraylist_long81);
    boolean b87 = treeset_b33.removeAll((java.util.Collection<java.lang.Long>)arraylist_long81);
    boolean b88 = treeset_b1.removeAll((java.util.Collection<java.lang.Long>)arraylist_long81);
    java.util.stream.Stream<java.lang.Boolean> stream_b89 = treeset_b1.stream();
    java.util.Iterator<java.lang.Boolean> iterator_b90 = treeset_b1.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b49 + "' != '" + true+ "'", b49.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b51 + "' != '" + true+ "'", b51.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b84 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b86 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b87 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b88 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b89);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b90);

  }

  @Test
  public void test236() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test236"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.lang.Boolean b30 = treeset_b12.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    java.lang.Boolean b38 = treeset_b31.lower((java.lang.Boolean)true);
    java.lang.Boolean b39 = treeset_b31.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b42 = treeset_b31.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b42);
    java.util.ArrayList<java.lang.String> arraylist_str44 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array49 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str44, str_array49);
    boolean b51 = treeset_b43.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    boolean b52 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b53 = treeset_b12.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b54 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b12);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b55 = treeset_b12.descendingSet();
    java.util.SortedSet<java.lang.Boolean> sortedset_b57 = treeset_b12.headSet((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj58 = (Comparator<Object>) treeset_b12.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b30 + "' != '" + true+ "'", b30.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj58);

  }

  @Test
  public void test237() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test237"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b12 = treeset_b11.pollFirst();
    java.util.Iterator<java.lang.Boolean> iterator_b13 = treeset_b11.descendingIterator();
    treeset_b11.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { false };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array17);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b15.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { true, true };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array25);
    treeset_b22.clear();
    java.lang.Boolean b29 = treeset_b22.lower((java.lang.Boolean)true);
    java.lang.Boolean b30 = treeset_b22.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b33 = treeset_b22.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array37 = new java.lang.Boolean[] { true, true };
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array37);
    treeset_b34.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b42 = treeset_b34.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b44 = treeset_b34.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array45 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array46 = new java.lang.Object[][] {  };
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array45, obj_array_array46);
    boolean b48 = treeset_b34.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array45);
    boolean b49 = treeset_b22.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34);
    java.lang.Boolean b50 = treeset_b34.first();
    java.lang.Boolean b52 = treeset_b34.higher((java.lang.Boolean)false);
    boolean b53 = treeset_b15.equals((java.lang.Object)treeset_b34);
    java.lang.String str54 = treeset_b15.toString();
    java.lang.Object[] obj_array55 = treeset_b15.toArray();
    java.lang.Object[] obj_array56 = treeset_b11.toArray(obj_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b50 + "' != '" + true+ "'", b50.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b52 + "' != '" + true+ "'", b52.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "[false]"+ "'", str54.equals("[false]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array56);

  }

  @Test
  public void test238() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test238"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array4 = new java.lang.Boolean[] { true, true };
    boolean b5 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b1, b_array4);
    treeset_b1.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b7 = treeset_b1.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b1.headSet((java.lang.Boolean)false, true);
    boolean b11 = treeset_b0.equals((java.lang.Object)treeset_b1);
    java.lang.Boolean b13 = treeset_b1.lower((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { false };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array16);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b14.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { true, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    treeset_b21.clear();
    java.lang.Boolean b28 = treeset_b21.lower((java.lang.Boolean)true);
    java.lang.Boolean b29 = treeset_b21.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b32 = treeset_b21.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b33 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true, true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b33, b_array36);
    treeset_b33.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b41 = treeset_b33.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b43 = treeset_b33.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array44 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array45 = new java.lang.Object[][] {  };
    boolean b46 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array44, obj_array_array45);
    boolean b47 = treeset_b33.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array44);
    boolean b48 = treeset_b21.addAll((java.util.Collection<java.lang.Boolean>)treeset_b33);
    java.lang.Boolean b49 = treeset_b33.first();
    java.lang.Boolean b51 = treeset_b33.higher((java.lang.Boolean)false);
    boolean b52 = treeset_b14.equals((java.lang.Object)treeset_b33);
    java.util.TreeSet<java.lang.Boolean> treeset_b53 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array56 = new java.lang.Boolean[] { true, true };
    boolean b57 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b53, b_array56);
    treeset_b53.clear();
    java.lang.Boolean b60 = treeset_b53.lower((java.lang.Boolean)true);
    java.lang.Boolean b61 = treeset_b53.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b62 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array65 = new java.lang.Boolean[] { true, true };
    boolean b66 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b62, b_array65);
    treeset_b62.clear();
    java.lang.Boolean b69 = treeset_b62.lower((java.lang.Boolean)true);
    boolean b70 = treeset_b53.addAll((java.util.Collection<java.lang.Boolean>)treeset_b62);
    java.util.TreeSet<java.lang.Boolean> treeset_b71 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array74 = new java.lang.Boolean[] { true, true };
    boolean b75 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b71, b_array74);
    treeset_b71.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b77 = treeset_b71.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b80 = treeset_b71.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long81 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array83 = new java.lang.Long[] { 1L };
    boolean b84 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long81, long_array83);
    boolean b85 = treeset_b71.removeAll((java.util.Collection<java.lang.Long>)arraylist_long81);
    boolean b86 = treeset_b53.removeAll((java.util.Collection<java.lang.Long>)arraylist_long81);
    boolean b87 = treeset_b33.removeAll((java.util.Collection<java.lang.Long>)arraylist_long81);
    boolean b88 = treeset_b1.removeAll((java.util.Collection<java.lang.Long>)arraylist_long81);
    java.util.Iterator<java.lang.Boolean> iterator_b89 = treeset_b1.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b49 + "' != '" + true+ "'", b49.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b51 + "' != '" + true+ "'", b51.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b84 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b86 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b87 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b88 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b89);

  }

  @Test
  public void test239() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test239"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b17 = treeset_b9.iterator();
    java.lang.Boolean b19 = treeset_b9.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b9);
    java.lang.Boolean b21 = treeset_b20.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b22 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { false, false };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b22, b_array25);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array27 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array28 = new java.lang.Object[][] {  };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27, obj_array_array28);
    boolean b30 = arraylist_b22.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b31 = treeset_b20.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b32 = treeset_b0.equals((java.lang.Object)treeset_b20);
    boolean b34 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Boolean b35 = treeset_b0.last();
    java.util.TreeSet<java.lang.Boolean> treeset_b36 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array39 = new java.lang.Boolean[] { true, true };
    boolean b40 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b36, b_array39);
    treeset_b36.clear();
    java.lang.Boolean b43 = treeset_b36.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b44 = treeset_b36.iterator();
    java.lang.Boolean b46 = treeset_b36.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b47 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b36);
    java.lang.Boolean b48 = treeset_b47.pollFirst();
    java.util.SortedSet<java.lang.Boolean> sortedset_b51 = treeset_b47.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    // The following exception was thrown during execution in test generation
    try {
    boolean b52 = treeset_b0.remove((java.lang.Object)sortedset_b51);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b35 + "' != '" + true+ "'", b35.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b51);

  }

  @Test
  public void test240() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test240"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.lang.Boolean b30 = treeset_b12.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    java.lang.Boolean b38 = treeset_b31.lower((java.lang.Boolean)true);
    java.lang.Boolean b39 = treeset_b31.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b42 = treeset_b31.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b42);
    java.util.ArrayList<java.lang.String> arraylist_str44 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array49 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str44, str_array49);
    boolean b51 = treeset_b43.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    boolean b52 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b53 = treeset_b12.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b54 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b12);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b55 = treeset_b12.descendingSet();
    java.util.SortedSet<java.lang.Boolean> sortedset_b57 = treeset_b12.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b60 = treeset_b12.headSet((java.lang.Boolean)false, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b30 + "' != '" + true+ "'", b30.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b60);

  }

  @Test
  public void test241() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test241"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b15 = treeset_b0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b15);

  }

  @Test
  public void test242() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test242"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array11 = new java.lang.Boolean[] { true, true };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array11);
    treeset_b8.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b16 = treeset_b8.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b18 = treeset_b8.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b8.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8);
    int i23 = treeset_b8.size();
    boolean b25 = treeset_b8.add((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b26 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array29 = new java.lang.Boolean[] { true, true };
    boolean b30 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b26, b_array29);
    treeset_b26.clear();
    java.lang.Boolean b33 = treeset_b26.lower((java.lang.Boolean)true);
    java.lang.Boolean b34 = treeset_b26.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b37 = treeset_b26.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b38 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b37);
    java.util.ArrayList<java.lang.String> arraylist_str39 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array44 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str39, str_array44);
    boolean b46 = treeset_b38.retainAll((java.util.Collection<java.lang.String>)arraylist_str39);
    java.util.Iterator<java.lang.Boolean> iterator_b47 = treeset_b38.descendingIterator();
    boolean b48 = treeset_b38.isEmpty();
    java.util.TreeSet<java.lang.Boolean> treeset_b49 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array52 = new java.lang.Boolean[] { true, true };
    boolean b53 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b49, b_array52);
    treeset_b49.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b57 = treeset_b49.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Boolean> arraylist_b58 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array61 = new java.lang.Boolean[] { false, false };
    boolean b62 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b58, b_array61);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array63 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array64 = new java.lang.Object[][] {  };
    boolean b65 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array63, obj_array_array64);
    boolean b66 = arraylist_b58.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array63);
    boolean b67 = treeset_b49.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array63);
    boolean b68 = treeset_b38.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array63);
    java.lang.Boolean b70 = treeset_b38.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b71 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array74 = new java.lang.Boolean[] { true, true };
    boolean b75 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b71, b_array74);
    treeset_b71.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b77 = treeset_b71.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b80 = treeset_b71.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long81 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array83 = new java.lang.Long[] { 1L };
    boolean b84 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long81, long_array83);
    boolean b85 = treeset_b71.removeAll((java.util.Collection<java.lang.Long>)arraylist_long81);
    boolean b86 = treeset_b38.removeAll((java.util.Collection<java.lang.Long>)arraylist_long81);
    // The following exception was thrown during execution in test generation
    try {
    boolean b87 = treeset_b8.removeAll((java.util.Collection<java.lang.Long>)arraylist_long81);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b84 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b86 == false);

  }

  @Test
  public void test243() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test243"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.util.TreeSet<java.lang.Boolean> treeset_b28 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array31 = new java.lang.Boolean[] { true, true };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b28, b_array31);
    treeset_b28.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b36 = treeset_b28.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b38 = treeset_b28.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array39 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array40 = new java.lang.Object[][] {  };
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array39, obj_array_array40);
    boolean b42 = treeset_b28.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array39);
    boolean b43 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array39);
    treeset_b12.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);

  }

  @Test
  public void test244() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test244"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    boolean b13 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { false };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array16);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b14.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b20);
    boolean b22 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b20);
    boolean b24 = treeset_b0.add((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test245() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test245"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b6);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b7.tailSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true, true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b11, b_array14);
    treeset_b11.clear();
    java.lang.Boolean b18 = treeset_b11.lower((java.lang.Boolean)true);
    java.lang.Boolean b19 = treeset_b11.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b22 = treeset_b11.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array26 = new java.lang.Boolean[] { true, true };
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23, b_array26);
    treeset_b23.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b31 = treeset_b23.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b33 = treeset_b23.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array34 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array35 = new java.lang.Object[][] {  };
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array34, obj_array_array35);
    boolean b37 = treeset_b23.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array34);
    boolean b38 = treeset_b11.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23);
    java.lang.Boolean b39 = treeset_b23.first();
    java.lang.Boolean b41 = treeset_b23.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b42 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array45 = new java.lang.Boolean[] { true, true };
    boolean b46 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b42, b_array45);
    treeset_b42.clear();
    java.lang.Boolean b49 = treeset_b42.lower((java.lang.Boolean)true);
    java.lang.Boolean b50 = treeset_b42.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b53 = treeset_b42.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b54 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b53);
    java.util.ArrayList<java.lang.String> arraylist_str55 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array60 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str55, str_array60);
    boolean b62 = treeset_b54.retainAll((java.util.Collection<java.lang.String>)arraylist_str55);
    boolean b63 = treeset_b23.retainAll((java.util.Collection<java.lang.String>)arraylist_str55);
    boolean b64 = treeset_b7.retainAll((java.util.Collection<java.lang.String>)arraylist_str55);
    boolean b66 = treeset_b7.add((java.lang.Boolean)true);
    java.util.function.Predicate<java.lang.Object> predicate_obj67 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b68 = treeset_b7.removeIf(predicate_obj67);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b39 + "' != '" + true+ "'", b39.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b41 + "' != '" + true+ "'", b41.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);

  }

  @Test
  public void test246() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test246"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    // The following exception was thrown during execution in test generation
    try {
    boolean b16 = treeset_b0.contains((java.lang.Object)10.0f);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);

  }

  @Test
  public void test247() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test247"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.util.ArrayList<java.lang.Long> arraylist_long7 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array9 = new java.lang.Long[] { 0L };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long7, long_array9);
    boolean b11 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long7);
    java.util.Iterator<java.lang.Boolean> iterator_b12 = treeset_b0.descendingIterator();
    java.util.Spliterator<java.lang.Boolean> spliterator_b13 = treeset_b0.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    java.util.function.Consumer<java.lang.Boolean> consumer_b19 = null;
    // The following exception was thrown during execution in test generation
    try {
    treeset_b0.forEach(consumer_b19);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);

  }

  @Test
  public void test248() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test248"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b12 = treeset_b11.pollFirst();
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b11.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    boolean b17 = treeset_b11.add((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);

  }

  @Test
  public void test249() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test249"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b12 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b13 = treeset_b0.descendingIterator();
    treeset_b0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b13);

  }

  @Test
  public void test250() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test250"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b13);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b23 = treeset_b15.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.lang.String str24 = treeset_b15.toString();
    java.lang.Boolean b26 = treeset_b15.floor((java.lang.Boolean)true);
    // The following exception was thrown during execution in test generation
    try {
    boolean b27 = treeset_b14.remove((java.lang.Object)treeset_b15);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "[]"+ "'", str24.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b26);

  }

  @Test
  public void test251() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test251"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b13 = treeset_b0.stream();
    java.lang.Boolean b14 = treeset_b0.pollFirst();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.lang.Boolean b22 = treeset_b15.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b23 = treeset_b15.iterator();
    java.lang.Boolean b25 = treeset_b15.ceiling((java.lang.Boolean)true);
    boolean b26 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b27 = treeset_b15.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + false+ "'", b14.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test252() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test252"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b15 = treeset_b0.descendingSet();
    boolean b17 = treeset_b0.add((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);

  }

  @Test
  public void test253() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test253"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.lang.Boolean b30 = treeset_b12.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    java.lang.Boolean b38 = treeset_b31.lower((java.lang.Boolean)true);
    java.lang.Boolean b39 = treeset_b31.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b42 = treeset_b31.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b42);
    java.util.ArrayList<java.lang.String> arraylist_str44 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array49 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str44, str_array49);
    boolean b51 = treeset_b43.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    boolean b52 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b53 = treeset_b12.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b54 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b12);
    java.util.stream.Stream<java.lang.Boolean> stream_b55 = treeset_b12.parallelStream();
    java.util.stream.Stream<java.lang.Boolean> stream_b56 = treeset_b12.parallelStream();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b57 = treeset_b12.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b30 + "' != '" + true+ "'", b30.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b56);

  }

  @Test
  public void test254() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test254"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array4 = new java.lang.Boolean[] { true, true };
    boolean b5 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b1, b_array4);
    treeset_b1.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b7 = treeset_b1.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b1.headSet((java.lang.Boolean)false, true);
    boolean b11 = treeset_b0.equals((java.lang.Object)treeset_b1);
    boolean b12 = treeset_b1.isEmpty();
    java.lang.Boolean b13 = treeset_b1.pollFirst();
    java.util.Comparator<java.lang.Object> comparator_obj14 = (Comparator<Object>) treeset_b1.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj14);

  }

  @Test
  public void test255() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test255"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    treeset_b11.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b11);
    java.util.SortedSet<java.lang.Boolean> sortedset_b16 = treeset_b11.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b16);

  }

  @Test
  public void test256() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test256"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b11.headSet((java.lang.Boolean)false, false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b19 = treeset_b11.subSet((java.lang.Boolean)false, false, (java.lang.Boolean)true, false);
    java.lang.Boolean b21 = treeset_b11.floor((java.lang.Boolean)true);
    java.util.function.Consumer<java.lang.Boolean> consumer_b22 = null;
    // The following exception was thrown during execution in test generation
    try {
    treeset_b11.forEach(consumer_b22);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b21 + "' != '" + true+ "'", b21.equals(true));

  }

  @Test
  public void test257() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test257"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b12 = treeset_b0.floor((java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b13 = treeset_b0.descendingIterator();
    java.util.Iterator<java.lang.Boolean> iterator_b14 = treeset_b0.iterator();
    java.lang.Boolean b16 = treeset_b0.higher((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);

  }

  @Test
  public void test258() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test258"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>(sortedset_b15);
    java.lang.Boolean b17 = treeset_b16.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b17);

  }

  @Test
  public void test259() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test259"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b12 = treeset_b11.last();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b15 = treeset_b11.headSet((java.lang.Boolean)false, true);
    java.lang.Boolean b16 = treeset_b11.pollLast();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b17 = treeset_b11.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + true+ "'", b12.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b16 + "' != '" + true+ "'", b16.equals(true));

  }

  @Test
  public void test260() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test260"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b13.descendingSet();
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.Boolean> sortedset_b17 = treeset_b13.subSet((java.lang.Boolean)true, (java.lang.Boolean)false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);

  }

  @Test
  public void test261() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test261"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.lang.Object obj7 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);

  }

  @Test
  public void test262() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test262"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array4 = new java.lang.Boolean[] { true, true };
    boolean b5 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b1, b_array4);
    treeset_b1.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b7 = treeset_b1.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b1.headSet((java.lang.Boolean)false, true);
    boolean b11 = treeset_b0.equals((java.lang.Object)treeset_b1);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b18 = treeset_b0.equals((java.lang.Object)treeset_b12);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b0.headSet((java.lang.Boolean)true, false);
    boolean b23 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b24 = treeset_b0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b24);

  }

  @Test
  public void test263() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test263"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Object[] obj_array12 = treeset_b0.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);

  }

  @Test
  public void test264() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test264"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.descendingSet();
    java.util.stream.Stream<java.lang.Boolean> stream_b12 = treeset_b0.parallelStream();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b15 = treeset_b0.headSet((java.lang.Boolean)false, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b15);

  }

  @Test
  public void test265() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test265"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b11);
    java.util.ArrayList<java.lang.String> arraylist_str13 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str13, str_array18);
    boolean b20 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str13);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { true, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    treeset_b21.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b29 = treeset_b21.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b31 = treeset_b21.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array32 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array33 = new java.lang.Object[][] {  };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32, obj_array_array33);
    boolean b35 = treeset_b21.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32);
    boolean b36 = treeset_b12.equals((java.lang.Object)treeset_b21);
    java.lang.Boolean b37 = treeset_b21.first();
    java.lang.Boolean b39 = treeset_b21.ceiling((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b37 + "' != '" + true+ "'", b37.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b39 + "' != '" + true+ "'", b39.equals(true));

  }

  @Test
  public void test266() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test266"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.tailSet((java.lang.Boolean)false, false);
    java.util.stream.Stream<java.lang.Boolean> stream_b11 = navigableset_b10.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b11);

  }

  @Test
  public void test267() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test267"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b23 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b23);
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array28 = new java.lang.Boolean[] { true, true };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25, b_array28);
    treeset_b25.clear();
    java.lang.Boolean b32 = treeset_b25.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b33 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true, true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b33, b_array36);
    treeset_b33.clear();
    java.lang.Boolean b40 = treeset_b33.lower((java.lang.Boolean)true);
    java.lang.Boolean b41 = treeset_b33.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b44 = treeset_b33.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array48 = new java.lang.Boolean[] { true, true };
    boolean b49 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b45, b_array48);
    treeset_b45.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b53 = treeset_b45.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b55 = treeset_b45.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array56 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array57 = new java.lang.Object[][] {  };
    boolean b58 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array56, obj_array_array57);
    boolean b59 = treeset_b45.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array56);
    boolean b60 = treeset_b33.addAll((java.util.Collection<java.lang.Boolean>)treeset_b45);
    boolean b61 = treeset_b25.remove((java.lang.Object)b60);
    java.util.SortedSet<java.lang.Boolean> sortedset_b63 = treeset_b25.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b65 = treeset_b25.floor((java.lang.Boolean)false);
    java.lang.Boolean b66 = treeset_b25.pollFirst();
    boolean b67 = treeset_b24.equals((java.lang.Object)treeset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == false);

  }

  @Test
  public void test268() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test268"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array4 = new java.lang.Boolean[] { true, true };
    boolean b5 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b1, b_array4);
    treeset_b1.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b7 = treeset_b1.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b1.headSet((java.lang.Boolean)false, true);
    boolean b11 = treeset_b0.equals((java.lang.Object)treeset_b1);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b18 = treeset_b0.equals((java.lang.Object)treeset_b12);
    java.lang.Boolean b19 = treeset_b12.pollLast();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b20 = treeset_b12.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);

  }

  @Test
  public void test269() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test269"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    boolean b14 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object obj15 = treeset_b0.clone();
    java.lang.Boolean b16 = treeset_b0.last();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b16 + "' != '" + true+ "'", b16.equals(true));

  }

  @Test
  public void test270() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test270"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b8 = treeset_b0.parallelStream();
    java.util.Comparator<java.lang.Object> comparator_obj9 = (Comparator<Object>) treeset_b0.comparator();
    java.lang.Object[] obj_array10 = treeset_b0.toArray();
    java.lang.Boolean b11 = treeset_b0.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b11 + "' != '" + false+ "'", b11.equals(false));

  }

  @Test
  public void test271() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test271"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b13 = treeset_b0.stream();
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array16 = new java.lang.String[] { "" };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array16);
    boolean b18 = treeset_b0.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b0.headSet((java.lang.Boolean)false);
    java.lang.Boolean b22 = treeset_b0.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);

  }

  @Test
  public void test272() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test272"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.headSet((java.lang.Boolean)false, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true, true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b11, b_array14);
    treeset_b11.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b17 = treeset_b11.spliterator();
    java.util.ArrayList<java.lang.Long> arraylist_long18 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array20 = new java.lang.Long[] { 0L };
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long18, long_array20);
    boolean b22 = treeset_b11.removeAll((java.util.Collection<java.lang.Long>)arraylist_long18);
    boolean b23 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long18);
    java.util.SortedSet<java.lang.Boolean> sortedset_b25 = treeset_b0.headSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b25);

  }

  @Test
  public void test273() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test273"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array4 = new java.lang.Boolean[] { true, true };
    boolean b5 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b1, b_array4);
    treeset_b1.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b7 = treeset_b1.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b1.headSet((java.lang.Boolean)false, true);
    boolean b11 = treeset_b0.equals((java.lang.Object)treeset_b1);
    java.lang.Boolean b13 = treeset_b1.ceiling((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);

  }

  @Test
  public void test274() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test274"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.lang.Boolean b19 = treeset_b12.lower((java.lang.Boolean)true);
    java.lang.Boolean b20 = treeset_b12.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b23 = treeset_b12.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array27 = new java.lang.Boolean[] { true, true };
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24, b_array27);
    treeset_b24.clear();
    boolean b31 = treeset_b24.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b32 = treeset_b24.stream();
    java.lang.Object[] obj_array33 = new java.lang.Object[] { treeset_b24 };
    java.lang.Object[] obj_array34 = treeset_b12.toArray(obj_array33);
    java.lang.Object[] obj_array35 = treeset_b11.toArray(obj_array34);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b38 = treeset_b11.tailSet((java.lang.Boolean)false, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b38);

  }

  @Test
  public void test275() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test275"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b12 = treeset_b11.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b13 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { false, false };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b13, b_array16);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array18 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array19 = new java.lang.Object[][] {  };
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array18, obj_array_array19);
    boolean b21 = arraylist_b13.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array18);
    boolean b22 = treeset_b11.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array18);
    java.util.SortedSet<java.lang.Boolean> sortedset_b25 = treeset_b11.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b26 = treeset_b11.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);

  }

  @Test
  public void test276() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test276"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    boolean b16 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    int i18 = treeset_b17.size();
    java.lang.Boolean b19 = treeset_b17.first();
    boolean b20 = treeset_b17.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b19 + "' != '" + true+ "'", b19.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test277() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test277"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b11);
    java.util.Spliterator<java.lang.Boolean> spliterator_b13 = treeset_b12.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b12.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);

  }

  @Test
  public void test278() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test278"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.tailSet((java.lang.Boolean)true, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b13.subSet((java.lang.Boolean)true, false, (java.lang.Boolean)true, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);

  }

  @Test
  public void test279() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test279"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.tailSet((java.lang.Boolean)false, false);
    java.lang.Object obj11 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b0.tailSet((java.lang.Boolean)false, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);

  }

  @Test
  public void test280() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test280"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.lang.Boolean b9 = treeset_b0.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));

  }

  @Test
  public void test281() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test281"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.String str1 = treeset_b0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str1 + "' != '" + "[]"+ "'", str1.equals("[]"));

  }

  @Test
  public void test282() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test282"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    boolean b13 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { false };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array16);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b14.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b20);
    boolean b22 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b20);
    int i23 = treeset_b0.size();
    java.util.stream.Stream<java.lang.Boolean> stream_b24 = treeset_b0.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b24);

  }

  @Test
  public void test283() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test283"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b0.headSet((java.lang.Boolean)false, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);

  }

  @Test
  public void test284() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test284"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b12 = treeset_b0.floor((java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b13 = treeset_b0.descendingIterator();
    java.util.Iterator<java.lang.Boolean> iterator_b14 = treeset_b0.iterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.lang.Boolean b22 = treeset_b15.lower((java.lang.Boolean)true);
    java.lang.Boolean b23 = treeset_b15.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b15.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { true, true };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27, b_array30);
    treeset_b27.clear();
    boolean b34 = treeset_b27.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b35 = treeset_b27.stream();
    java.lang.Object[] obj_array36 = new java.lang.Object[] { treeset_b27 };
    java.lang.Object[] obj_array37 = treeset_b15.toArray(obj_array36);
    java.util.TreeSet<java.lang.Boolean> treeset_b38 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b15);
    java.util.Iterator<java.lang.Boolean> iterator_b39 = treeset_b15.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b40 = treeset_b15.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b41 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array44 = new java.lang.Boolean[] { true, true };
    boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b41, b_array44);
    treeset_b41.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b47 = treeset_b41.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b50 = treeset_b41.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long51 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array56 = new java.lang.Long[] { 1L, 1L, 100L, (-1L) };
    boolean b57 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long51, long_array56);
    boolean b58 = treeset_b41.removeAll((java.util.Collection<java.lang.Long>)arraylist_long51);
    boolean b59 = treeset_b15.removeAll((java.util.Collection<java.lang.Long>)arraylist_long51);
    boolean b60 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);

  }

  @Test
  public void test285() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test285"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b13 = treeset_b0.subSet((java.lang.Boolean)true, true, (java.lang.Boolean)true, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b16 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array20 = new java.lang.Boolean[] { true, true };
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17, b_array20);
    treeset_b17.clear();
    java.lang.Boolean b24 = treeset_b17.lower((java.lang.Boolean)true);
    java.lang.Boolean b25 = treeset_b17.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b28 = treeset_b17.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b29 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array32 = new java.lang.Boolean[] { true, true };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b29, b_array32);
    treeset_b29.clear();
    boolean b36 = treeset_b29.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b37 = treeset_b29.stream();
    java.lang.Object[] obj_array38 = new java.lang.Object[] { treeset_b29 };
    java.lang.Object[] obj_array39 = treeset_b17.toArray(obj_array38);
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b17);
    java.util.TreeSet<java.lang.Boolean> treeset_b41 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b40);
    java.util.SortedSet<java.lang.Boolean> sortedset_b43 = treeset_b40.headSet((java.lang.Boolean)false);
    // The following exception was thrown during execution in test generation
    try {
    boolean b44 = treeset_b0.contains((java.lang.Object)sortedset_b43);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b43);

  }

  @Test
  public void test286() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test286"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.stream.Stream<java.lang.Boolean> stream_b7 = treeset_b0.parallelStream();
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);

  }

  @Test
  public void test287() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test287"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b6);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b7.tailSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true, true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b11, b_array14);
    treeset_b11.clear();
    java.lang.Boolean b18 = treeset_b11.lower((java.lang.Boolean)true);
    java.lang.Boolean b19 = treeset_b11.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b22 = treeset_b11.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array26 = new java.lang.Boolean[] { true, true };
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23, b_array26);
    treeset_b23.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b31 = treeset_b23.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b33 = treeset_b23.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array34 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array35 = new java.lang.Object[][] {  };
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array34, obj_array_array35);
    boolean b37 = treeset_b23.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array34);
    boolean b38 = treeset_b11.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23);
    java.lang.Boolean b39 = treeset_b23.first();
    java.lang.Boolean b41 = treeset_b23.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b42 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array45 = new java.lang.Boolean[] { true, true };
    boolean b46 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b42, b_array45);
    treeset_b42.clear();
    java.lang.Boolean b49 = treeset_b42.lower((java.lang.Boolean)true);
    java.lang.Boolean b50 = treeset_b42.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b53 = treeset_b42.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b54 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b53);
    java.util.ArrayList<java.lang.String> arraylist_str55 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array60 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str55, str_array60);
    boolean b62 = treeset_b54.retainAll((java.util.Collection<java.lang.String>)arraylist_str55);
    boolean b63 = treeset_b23.retainAll((java.util.Collection<java.lang.String>)arraylist_str55);
    boolean b64 = treeset_b7.retainAll((java.util.Collection<java.lang.String>)arraylist_str55);
    boolean b66 = treeset_b7.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b69 = treeset_b7.tailSet((java.lang.Boolean)true, true);
    java.lang.Boolean b70 = treeset_b7.last();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b39 + "' != '" + true+ "'", b39.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b41 + "' != '" + true+ "'", b41.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b70 + "' != '" + true+ "'", b70.equals(true));

  }

  @Test
  public void test288() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test288"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    boolean b13 = treeset_b0.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b14 = treeset_b0.stream();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.lang.Boolean b22 = treeset_b15.lower((java.lang.Boolean)true);
    java.lang.Boolean b23 = treeset_b15.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b15.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { true, true };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27, b_array30);
    treeset_b27.clear();
    boolean b34 = treeset_b27.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b35 = treeset_b27.stream();
    java.lang.Object[] obj_array36 = new java.lang.Object[] { treeset_b27 };
    java.lang.Object[] obj_array37 = treeset_b15.toArray(obj_array36);
    java.lang.Object[] obj_array38 = treeset_b0.toArray(obj_array37);
    java.util.TreeSet<java.lang.Boolean> treeset_b39 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b41 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array44 = new java.lang.Boolean[] { true, true };
    boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b41, b_array44);
    treeset_b41.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b47 = treeset_b41.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b50 = treeset_b41.headSet((java.lang.Boolean)false, true);
    boolean b51 = treeset_b40.equals((java.lang.Object)treeset_b41);
    int i52 = treeset_b40.size();
    java.util.SortedSet<java.lang.Boolean> sortedset_b54 = treeset_b40.headSet((java.lang.Boolean)false);
    boolean b55 = treeset_b0.equals((java.lang.Object)sortedset_b54);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b56 = treeset_b0.descendingSet();
    java.util.ArrayList<java.lang.Boolean> arraylist_b57 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array60 = new java.lang.Boolean[] { false, false };
    boolean b61 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b57, b_array60);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array62 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array63 = new java.lang.Object[][] {  };
    boolean b64 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array62, obj_array_array63);
    boolean b65 = arraylist_b57.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array62);
    boolean b66 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);

  }

  @Test
  public void test289() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test289"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    boolean b16 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    treeset_b18.clear();
    java.lang.Boolean b25 = treeset_b18.lower((java.lang.Boolean)true);
    java.lang.Boolean b26 = treeset_b18.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true, true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30, b_array33);
    treeset_b30.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b30.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b40 = treeset_b30.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array41 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array42 = new java.lang.Object[][] {  };
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array41, obj_array_array42);
    boolean b44 = treeset_b30.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array41);
    boolean b45 = treeset_b18.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30);
    java.lang.Boolean b46 = treeset_b30.first();
    java.util.Iterator<java.lang.Boolean> iterator_b47 = treeset_b30.descendingIterator();
    boolean b48 = treeset_b0.equals((java.lang.Object)treeset_b30);
    java.util.function.Consumer<java.lang.Boolean> consumer_b49 = null;
    // The following exception was thrown during execution in test generation
    try {
    treeset_b0.forEach(consumer_b49);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b46 + "' != '" + true+ "'", b46.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);

  }

  @Test
  public void test290() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test290"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b8 = treeset_b0.stream();
    java.lang.Boolean b9 = treeset_b0.pollLast();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.tailSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b9 + "' != '" + false+ "'", b9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);

  }

  @Test
  public void test291() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test291"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    boolean b16 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array20 = new java.lang.Boolean[] { true, true };
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17, b_array20);
    treeset_b17.clear();
    java.lang.Boolean b24 = treeset_b17.lower((java.lang.Boolean)true);
    java.lang.Boolean b25 = treeset_b17.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b28 = treeset_b17.headSet((java.lang.Boolean)true, false);
    boolean b30 = treeset_b17.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b31 = treeset_b17.stream();
    boolean b32 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17);
    java.util.TreeSet<java.lang.Boolean> treeset_b33 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array35 = new java.lang.Boolean[] { false };
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b33, b_array35);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b39 = treeset_b33.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b39);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b43 = treeset_b40.tailSet((java.lang.Boolean)true, false);
    boolean b44 = treeset_b17.equals((java.lang.Object)treeset_b40);
    treeset_b40.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);

  }

  @Test
  public void test292() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test292"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.lang.Boolean b12 = treeset_b0.pollFirst();
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b13.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b23 = treeset_b13.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array24 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array25 = new java.lang.Object[][] {  };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array24, obj_array_array25);
    boolean b27 = treeset_b13.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array24);
    boolean b29 = treeset_b13.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b13);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    java.lang.Boolean b38 = treeset_b31.lower((java.lang.Boolean)true);
    java.lang.Boolean b39 = treeset_b31.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b42 = treeset_b31.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array46 = new java.lang.Boolean[] { true, true };
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b43, b_array46);
    treeset_b43.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b51 = treeset_b43.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b53 = treeset_b43.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array54 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array55 = new java.lang.Object[][] {  };
    boolean b56 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array54, obj_array_array55);
    boolean b57 = treeset_b43.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array54);
    boolean b58 = treeset_b31.addAll((java.util.Collection<java.lang.Boolean>)treeset_b43);
    java.lang.Boolean b59 = treeset_b43.first();
    java.util.Iterator<java.lang.Boolean> iterator_b60 = treeset_b43.descendingIterator();
    boolean b61 = treeset_b13.equals((java.lang.Object)treeset_b43);
    // The following exception was thrown during execution in test generation
    try {
    boolean b62 = treeset_b0.contains((java.lang.Object)treeset_b13);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b59 + "' != '" + true+ "'", b59.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);

  }

  @Test
  public void test293() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test293"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b11.headSet((java.lang.Boolean)false, false);
    java.lang.Boolean b15 = treeset_b11.pollLast();
    java.util.Spliterator<java.lang.Boolean> spliterator_b16 = treeset_b11.spliterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array20 = new java.lang.Boolean[] { true, true };
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17, b_array20);
    treeset_b17.clear();
    boolean b24 = treeset_b17.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b26 = treeset_b17.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b17.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b32 = treeset_b17.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    boolean b33 = treeset_b11.equals((java.lang.Object)sortedset_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b15 + "' != '" + true+ "'", b15.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);

  }

  @Test
  public void test294() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test294"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    treeset_b11.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b11);
    java.util.Spliterator<java.lang.Boolean> spliterator_b14 = treeset_b13.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b14);

  }

  @Test
  public void test295() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test295"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);

  }

  @Test
  public void test296() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test296"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    boolean b22 = treeset_b15.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b15.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b27 = treeset_b15.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b30 = treeset_b15.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    boolean b38 = treeset_b31.add((java.lang.Boolean)false);
    int i39 = treeset_b31.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array43 = new java.lang.Boolean[] { true, true };
    boolean b44 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b40, b_array43);
    treeset_b40.clear();
    java.lang.Boolean b47 = treeset_b40.lower((java.lang.Boolean)true);
    java.lang.Boolean b48 = treeset_b40.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b51 = treeset_b40.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b52 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b51);
    java.util.ArrayList<java.lang.String> arraylist_str53 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array58 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str53, str_array58);
    boolean b60 = treeset_b52.retainAll((java.util.Collection<java.lang.String>)arraylist_str53);
    boolean b61 = treeset_b31.retainAll((java.util.Collection<java.lang.String>)arraylist_str53);
    boolean b62 = treeset_b15.retainAll((java.util.Collection<java.lang.String>)arraylist_str53);
    boolean b63 = treeset_b14.retainAll((java.util.Collection<java.lang.String>)arraylist_str53);
    java.util.TreeSet<java.lang.Boolean> treeset_b64 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array67 = new java.lang.Boolean[] { true, true };
    boolean b68 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b64, b_array67);
    treeset_b64.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b72 = treeset_b64.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b74 = treeset_b64.add((java.lang.Boolean)true);
    boolean b76 = treeset_b64.add((java.lang.Boolean)true);
    boolean b78 = treeset_b64.add((java.lang.Boolean)true);
    java.lang.Object obj79 = treeset_b64.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b80 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b64);
    // The following exception was thrown during execution in test generation
    try {
    boolean b81 = treeset_b14.contains((java.lang.Object)treeset_b64);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj79);

  }

  @Test
  public void test297() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test297"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b17 = treeset_b9.iterator();
    java.lang.Boolean b19 = treeset_b9.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b9);
    java.lang.Boolean b21 = treeset_b20.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b22 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { false, false };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b22, b_array25);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array27 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array28 = new java.lang.Object[][] {  };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27, obj_array_array28);
    boolean b30 = arraylist_b22.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b31 = treeset_b20.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b32 = treeset_b0.equals((java.lang.Object)treeset_b20);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b33 = treeset_b20.descendingSet();
    java.lang.Boolean b35 = treeset_b20.ceiling((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b35);

  }

  @Test
  public void test298() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test298"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b12 = treeset_b0.floor((java.lang.Boolean)false);
    java.lang.String str13 = treeset_b0.toString();
    java.lang.Object[] obj_array14 = treeset_b0.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[false]"+ "'", str13.equals("[false]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);

  }

  @Test
  public void test299() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test299"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b13 = treeset_b0.descendingIterator();
    int i14 = treeset_b0.size();
    java.lang.Boolean b15 = treeset_b0.last();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b15 + "' != '" + true+ "'", b15.equals(true));

  }

  @Test
  public void test300() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test300"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b6);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b7.tailSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true, true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b11, b_array14);
    treeset_b11.clear();
    java.lang.Boolean b18 = treeset_b11.lower((java.lang.Boolean)true);
    java.lang.Boolean b19 = treeset_b11.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b22 = treeset_b11.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array26 = new java.lang.Boolean[] { true, true };
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23, b_array26);
    treeset_b23.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b31 = treeset_b23.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b33 = treeset_b23.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array34 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array35 = new java.lang.Object[][] {  };
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array34, obj_array_array35);
    boolean b37 = treeset_b23.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array34);
    boolean b38 = treeset_b11.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23);
    java.lang.Boolean b39 = treeset_b23.first();
    java.lang.Boolean b41 = treeset_b23.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b42 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array45 = new java.lang.Boolean[] { true, true };
    boolean b46 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b42, b_array45);
    treeset_b42.clear();
    java.lang.Boolean b49 = treeset_b42.lower((java.lang.Boolean)true);
    java.lang.Boolean b50 = treeset_b42.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b53 = treeset_b42.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b54 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b53);
    java.util.ArrayList<java.lang.String> arraylist_str55 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array60 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str55, str_array60);
    boolean b62 = treeset_b54.retainAll((java.util.Collection<java.lang.String>)arraylist_str55);
    boolean b63 = treeset_b23.retainAll((java.util.Collection<java.lang.String>)arraylist_str55);
    boolean b64 = treeset_b7.retainAll((java.util.Collection<java.lang.String>)arraylist_str55);
    boolean b66 = treeset_b7.add((java.lang.Boolean)true);
    java.lang.Boolean b67 = treeset_b7.last();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b39 + "' != '" + true+ "'", b39.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b41 + "' != '" + true+ "'", b41.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b67 + "' != '" + true+ "'", b67.equals(true));

  }

  @Test
  public void test301() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test301"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.lang.String str9 = treeset_b0.toString();
    java.util.stream.Stream<java.lang.Boolean> stream_b10 = treeset_b0.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    boolean b13 = treeset_b0.add((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[]"+ "'", str9.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);

  }

  @Test
  public void test302() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test302"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b8 = treeset_b0.stream();
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Boolean b11 = treeset_b0.last();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b11 + "' != '" + true+ "'", b11.equals(true));

  }

  @Test
  public void test303() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test303"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    boolean b16 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array20 = new java.lang.Boolean[] { true, true };
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17, b_array20);
    treeset_b17.clear();
    java.lang.Boolean b24 = treeset_b17.lower((java.lang.Boolean)true);
    java.lang.Boolean b25 = treeset_b17.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b28 = treeset_b17.headSet((java.lang.Boolean)true, false);
    boolean b30 = treeset_b17.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b31 = treeset_b17.stream();
    boolean b32 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17);
    java.util.TreeSet<java.lang.Boolean> treeset_b33 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array35 = new java.lang.Boolean[] { false };
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b33, b_array35);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b39 = treeset_b33.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b39);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b43 = treeset_b40.tailSet((java.lang.Boolean)true, false);
    boolean b44 = treeset_b17.equals((java.lang.Object)treeset_b40);
    boolean b46 = treeset_b17.add((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);

  }

  @Test
  public void test304() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test304"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    boolean b16 = treeset_b9.add((java.lang.Boolean)false);
    int i17 = treeset_b9.size();
    java.lang.Boolean b19 = treeset_b9.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b9.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { true, true };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array25);
    treeset_b22.clear();
    java.lang.Boolean b29 = treeset_b22.lower((java.lang.Boolean)true);
    java.lang.Boolean b30 = treeset_b22.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b33 = treeset_b22.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array37 = new java.lang.Boolean[] { true, true };
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array37);
    treeset_b34.clear();
    boolean b41 = treeset_b34.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b42 = treeset_b34.stream();
    java.lang.Object[] obj_array43 = new java.lang.Object[] { treeset_b34 };
    java.lang.Object[] obj_array44 = treeset_b22.toArray(obj_array43);
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b22);
    java.util.Iterator<java.lang.Boolean> iterator_b46 = treeset_b22.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b47 = treeset_b22.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b48 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array51 = new java.lang.Boolean[] { true, true };
    boolean b52 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b48, b_array51);
    treeset_b48.clear();
    java.lang.Boolean b55 = treeset_b48.lower((java.lang.Boolean)true);
    java.lang.Boolean b56 = treeset_b48.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b59 = treeset_b48.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b60 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array63 = new java.lang.Boolean[] { true, true };
    boolean b64 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b60, b_array63);
    treeset_b60.clear();
    boolean b67 = treeset_b60.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b68 = treeset_b60.stream();
    java.lang.Object[] obj_array69 = new java.lang.Object[] { treeset_b60 };
    java.lang.Object[] obj_array70 = treeset_b48.toArray(obj_array69);
    java.lang.Object[] obj_array71 = treeset_b22.toArray(obj_array70);
    java.lang.Object[] obj_array72 = treeset_b9.toArray(obj_array71);
    java.lang.Object[] obj_array73 = treeset_b0.toArray(obj_array72);
    java.util.TreeSet<java.lang.Boolean> treeset_b74 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array77 = new java.lang.Boolean[] { true, true };
    boolean b78 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b74, b_array77);
    treeset_b74.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b82 = treeset_b74.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b84 = treeset_b74.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b85 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b74);
    java.util.TreeSet<java.lang.Boolean> treeset_b86 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b74);
    java.util.Iterator<java.lang.Boolean> iterator_b87 = treeset_b74.iterator();
    // The following exception was thrown during execution in test generation
    try {
    boolean b88 = treeset_b0.remove((java.lang.Object)iterator_b87);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b19 + "' != '" + false+ "'", b19.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b84 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b87);

  }

  @Test
  public void test305() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test305"); }


    java.util.SortedSet<java.lang.Boolean> sortedset_b0 = null;
    // The following exception was thrown during execution in test generation
    try {
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>(sortedset_b0);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }

  }

  @Test
  public void test306() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test306"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.stream.Stream<java.lang.Boolean> stream_b7 = treeset_b0.parallelStream();
    java.util.Comparator<java.lang.Object> comparator_obj8 = (Comparator<Object>) treeset_b0.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b9 = treeset_b0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b9);

  }

  @Test
  public void test307() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test307"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.stream.Stream<java.lang.Boolean> stream_b14 = treeset_b0.stream();
    java.util.SortedSet<java.lang.Boolean> sortedset_b17 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Boolean b19 = treeset_b0.higher((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { true, true };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b20, b_array23);
    treeset_b20.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b26 = treeset_b20.spliterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b20.tailSet((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b33 = treeset_b20.subSet((java.lang.Boolean)true, true, (java.lang.Boolean)true, true);
    boolean b34 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)navigableset_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test308() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test308"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);

  }

  @Test
  public void test309() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test309"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, true);
    treeset_b0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);

  }

  @Test
  public void test310() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test310"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b12.tailSet((java.lang.Boolean)false);
    boolean b16 = treeset_b12.add((java.lang.Boolean)false);
    treeset_b12.clear();
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);

  }

  @Test
  public void test311() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test311"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b4 = treeset_b0.isEmpty();
    java.lang.Boolean b5 = treeset_b0.first();
    java.lang.Boolean b7 = treeset_b0.floor((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b5 + "' != '" + true+ "'", b5.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b7 + "' != '" + true+ "'", b7.equals(true));

  }

  @Test
  public void test312() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test312"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.lang.Boolean b30 = treeset_b12.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b39 = treeset_b31.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b41 = treeset_b31.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b42 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b31);
    java.util.Iterator<java.lang.Boolean> iterator_b43 = treeset_b42.descendingIterator();
    java.lang.Boolean b45 = treeset_b42.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b46 = treeset_b42.descendingIterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b48 = treeset_b42.headSet((java.lang.Boolean)true);
    boolean b49 = treeset_b12.equals((java.lang.Object)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b30 + "' != '" + true+ "'", b30.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);

  }

  @Test
  public void test313() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test313"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b11);
    java.util.ArrayList<java.lang.String> arraylist_str13 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str13, str_array18);
    boolean b20 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str13);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { true, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    treeset_b21.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b29 = treeset_b21.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b31 = treeset_b21.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array32 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array33 = new java.lang.Object[][] {  };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32, obj_array_array33);
    boolean b35 = treeset_b21.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32);
    boolean b36 = treeset_b12.equals((java.lang.Object)treeset_b21);
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b12.tailSet((java.lang.Boolean)false);
    java.util.function.Consumer<java.lang.Boolean> consumer_b39 = null;
    // The following exception was thrown during execution in test generation
    try {
    treeset_b12.forEach(consumer_b39);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);

  }

  @Test
  public void test314() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test314"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b16 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b18 = treeset_b0.headSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b18);

  }

  @Test
  public void test315() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test315"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.lang.Object obj12 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b0.headSet((java.lang.Boolean)true);
    java.lang.Boolean b16 = treeset_b0.floor((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b16 + "' != '" + false+ "'", b16.equals(false));

  }

  @Test
  public void test316() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test316"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    boolean b14 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b17 = treeset_b0.headSet((java.lang.Boolean)true, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b0.tailSet((java.lang.Boolean)false, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { true, true };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array25);
    treeset_b22.clear();
    boolean b29 = treeset_b22.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b30 = treeset_b22.stream();
    java.util.SortedSet<java.lang.Boolean> sortedset_b32 = treeset_b22.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b33 = treeset_b22.first();
    boolean b34 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b33 + "' != '" + false+ "'", b33.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);

  }

  @Test
  public void test317() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test317"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.lang.Object obj12 = treeset_b0.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    java.lang.Boolean b20 = treeset_b13.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b21 = treeset_b13.iterator();
    java.lang.Boolean b23 = treeset_b13.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b13);
    java.lang.Boolean b25 = treeset_b24.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b26 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array29 = new java.lang.Boolean[] { false, false };
    boolean b30 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b26, b_array29);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array31 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array32 = new java.lang.Object[][] {  };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array31, obj_array_array32);
    boolean b34 = arraylist_b26.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array31);
    boolean b35 = treeset_b24.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array31);
    boolean b36 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array31);
    int i37 = treeset_b0.size();
    java.util.function.Predicate<java.lang.Object> predicate_obj38 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b39 = treeset_b0.removeIf(predicate_obj38);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 1);

  }

  @Test
  public void test318() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test318"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array9 = new java.lang.Boolean[] { false };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b7, b_array9);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b13 = treeset_b7.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b14 = treeset_b7.iterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b23 = treeset_b15.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b25 = treeset_b15.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b15.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b29 = treeset_b7.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15);
    boolean b30 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);

  }

  @Test
  public void test319() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test319"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b17 = treeset_b9.iterator();
    java.lang.Boolean b19 = treeset_b9.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b9);
    java.lang.Boolean b21 = treeset_b20.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b22 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { false, false };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b22, b_array25);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array27 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array28 = new java.lang.Object[][] {  };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27, obj_array_array28);
    boolean b30 = arraylist_b22.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b31 = treeset_b20.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b32 = treeset_b0.equals((java.lang.Object)treeset_b20);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b35 = treeset_b20.headSet((java.lang.Boolean)false, true);
    java.util.function.Consumer<java.lang.Boolean> consumer_b36 = null;
    // The following exception was thrown during execution in test generation
    try {
    treeset_b20.forEach(consumer_b36);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b35);

  }

  @Test
  public void test320() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test320"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b15 = treeset_b0.descendingSet();
    java.lang.Object obj16 = treeset_b0.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj16);

  }

  @Test
  public void test321() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test321"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.stream.Stream<java.lang.Boolean> stream_b6 = treeset_b0.parallelStream();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.subSet((java.lang.Boolean)true, true, (java.lang.Boolean)true, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);

  }

  @Test
  public void test322() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test322"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.lang.String str9 = treeset_b0.toString();
    java.lang.Boolean b11 = treeset_b0.floor((java.lang.Boolean)true);
    java.lang.Boolean b13 = treeset_b0.higher((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[]"+ "'", str9.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);

  }

  @Test
  public void test323() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test323"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b14 = treeset_b0.iterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b16 = treeset_b0.tailSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b16);

  }

  @Test
  public void test324() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test324"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.lang.Boolean b12 = treeset_b0.ceiling((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);

  }

  @Test
  public void test325() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test325"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    boolean b15 = treeset_b0.equals((java.lang.Object)10.0d);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { false };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b16, b_array18);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b22 = treeset_b16.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b22);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b23.tailSet((java.lang.Boolean)true, false);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23);
    java.util.Comparator<java.lang.Object> comparator_obj28 = (Comparator<Object>) treeset_b0.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b31 = treeset_b0.headSet((java.lang.Boolean)false, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b31);

  }

  @Test
  public void test326() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test326"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b8 = treeset_b0.stream();
    java.lang.String str9 = treeset_b0.toString();
    java.util.Comparator<java.lang.Object> comparator_obj10 = (Comparator<Object>)treeset_b0.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b13 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { true, true };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array17);
    treeset_b14.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b22 = treeset_b14.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array26 = new java.lang.Boolean[] { true, true };
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23, b_array26);
    treeset_b23.clear();
    java.lang.Boolean b30 = treeset_b23.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b31 = treeset_b23.iterator();
    java.lang.Boolean b33 = treeset_b23.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b23);
    java.util.TreeSet<java.lang.Boolean> treeset_b35 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array38 = new java.lang.Boolean[] { true, true };
    boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b35, b_array38);
    treeset_b35.clear();
    java.lang.Boolean b42 = treeset_b35.lower((java.lang.Boolean)true);
    java.lang.Boolean b43 = treeset_b35.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b46 = treeset_b35.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b47 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array50 = new java.lang.Boolean[] { true, true };
    boolean b51 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b47, b_array50);
    treeset_b47.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b55 = treeset_b47.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b57 = treeset_b47.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array58 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array59 = new java.lang.Object[][] {  };
    boolean b60 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array58, obj_array_array59);
    boolean b61 = treeset_b47.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array58);
    boolean b62 = treeset_b35.addAll((java.util.Collection<java.lang.Boolean>)treeset_b47);
    java.lang.Boolean b63 = treeset_b47.first();
    java.lang.Boolean b65 = treeset_b47.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b66 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array69 = new java.lang.Boolean[] { true, true };
    boolean b70 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b66, b_array69);
    treeset_b66.clear();
    java.lang.Boolean b73 = treeset_b66.lower((java.lang.Boolean)true);
    java.lang.Boolean b74 = treeset_b66.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b77 = treeset_b66.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b78 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b77);
    java.util.ArrayList<java.lang.String> arraylist_str79 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array84 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str79, str_array84);
    boolean b86 = treeset_b78.retainAll((java.util.Collection<java.lang.String>)arraylist_str79);
    boolean b87 = treeset_b47.retainAll((java.util.Collection<java.lang.String>)arraylist_str79);
    boolean b88 = treeset_b23.retainAll((java.util.Collection<java.lang.String>)arraylist_str79);
    boolean b89 = treeset_b14.retainAll((java.util.Collection<java.lang.String>)arraylist_str79);
    boolean b90 = treeset_b0.retainAll((java.util.Collection<java.lang.String>)arraylist_str79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[false]"+ "'", str9.equals("[false]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b63 + "' != '" + true+ "'", b63.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b65 + "' != '" + true+ "'", b65.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b86 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b87 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b88 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b90 == true);

  }

  @Test
  public void test327() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test327"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b12.stream();
    java.lang.Object[] obj_array21 = new java.lang.Object[] { treeset_b12 };
    java.lang.Object[] obj_array22 = treeset_b0.toArray(obj_array21);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b24 = treeset_b0.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b25 = treeset_b0.parallelStream();
    java.lang.Boolean b27 = treeset_b0.lower((java.lang.Boolean)true);
    treeset_b0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b27);

  }

  @Test
  public void test328() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test328"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.Boolean> navigableset_b15 = treeset_b0.subSet((java.lang.Boolean)true, false, (java.lang.Boolean)false, true);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);

  }

  @Test
  public void test329() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test329"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b11);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b13.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b23 = treeset_b13.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b13);
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array28 = new java.lang.Boolean[] { true, true };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25, b_array28);
    treeset_b25.clear();
    java.lang.Boolean b32 = treeset_b25.lower((java.lang.Boolean)true);
    java.lang.Boolean b33 = treeset_b25.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b36 = treeset_b25.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array40 = new java.lang.Boolean[] { true, true };
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37, b_array40);
    treeset_b37.clear();
    boolean b44 = treeset_b37.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b45 = treeset_b37.stream();
    java.lang.Object[] obj_array46 = new java.lang.Object[] { treeset_b37 };
    java.lang.Object[] obj_array47 = treeset_b25.toArray(obj_array46);
    java.lang.Object[] obj_array48 = treeset_b24.toArray(obj_array47);
    java.util.stream.Stream<java.lang.Boolean> stream_b49 = treeset_b24.stream();
    boolean b50 = treeset_b12.equals((java.lang.Object)treeset_b24);
    java.lang.Boolean b51 = treeset_b24.last();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b52 = treeset_b24.descendingSet();
    java.util.Spliterator<java.lang.Boolean> spliterator_b53 = treeset_b24.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b51 + "' != '" + true+ "'", b51.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b53);

  }

  @Test
  public void test330() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test330"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b12 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b14 = treeset_b0.add((java.lang.Boolean)false);
    java.lang.Boolean b15 = treeset_b0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b15 + "' != '" + false+ "'", b15.equals(false));

  }

  @Test
  public void test331() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test331"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b17 = treeset_b0.headSet((java.lang.Boolean)false, false);
    java.lang.Boolean b19 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b0.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b19 + "' != '" + false+ "'", b19.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);

  }

  @Test
  public void test332() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test332"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b13 = treeset_b0.stream();
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array16 = new java.lang.String[] { "" };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array16);
    boolean b18 = treeset_b0.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    treeset_b0.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Object[] obj_array21 = treeset_b0.toArray();
    java.lang.Boolean b22 = treeset_b0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);

  }

  @Test
  public void test333() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test333"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b12.stream();
    java.lang.Object[] obj_array21 = new java.lang.Object[] { treeset_b12 };
    java.lang.Object[] obj_array22 = treeset_b0.toArray(obj_array21);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b24 = treeset_b0.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b25 = treeset_b0.parallelStream();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b26 = treeset_b0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b25);

  }

  @Test
  public void test334() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test334"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b12.stream();
    java.lang.Object[] obj_array21 = new java.lang.Object[] { treeset_b12 };
    java.lang.Object[] obj_array22 = treeset_b0.toArray(obj_array21);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b23);
    java.util.Iterator<java.lang.Boolean> iterator_b25 = treeset_b24.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b25);

  }

  @Test
  public void test335() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test335"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.tailSet((java.lang.Boolean)false, false);
    java.lang.String str11 = treeset_b0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[]"+ "'", str11.equals("[]"));

  }

  @Test
  public void test336() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test336"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.stream.Stream<java.lang.Boolean> stream_b7 = treeset_b0.parallelStream();
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.descendingIterator();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b13 = treeset_b0.headSet((java.lang.Boolean)true, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b13);

  }

  @Test
  public void test337() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test337"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b6);
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b6);
    java.lang.Boolean b10 = treeset_b8.floor((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));

  }

  @Test
  public void test338() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test338"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    int i11 = treeset_b0.size();
    java.util.Comparator<java.lang.Object> comparator_obj12 = (Comparator<Object>)treeset_b0.comparator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b0.tailSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);

  }

  @Test
  public void test339() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test339"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b17 = treeset_b9.iterator();
    java.lang.Boolean b19 = treeset_b9.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b9);
    java.lang.Boolean b21 = treeset_b20.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b22 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { false, false };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b22, b_array25);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array27 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array28 = new java.lang.Object[][] {  };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27, obj_array_array28);
    boolean b30 = arraylist_b22.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b31 = treeset_b20.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b32 = treeset_b0.equals((java.lang.Object)treeset_b20);
    java.util.Iterator<java.lang.Boolean> iterator_b33 = treeset_b0.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array37 = new java.lang.Boolean[] { true, true };
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array37);
    treeset_b34.clear();
    boolean b41 = treeset_b34.add((java.lang.Boolean)false);
    int i42 = treeset_b34.size();
    java.lang.Boolean b44 = treeset_b34.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b46 = treeset_b34.floor((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b47 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array50 = new java.lang.Boolean[] { true, true };
    boolean b51 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b47, b_array50);
    treeset_b47.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b55 = treeset_b47.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b57 = treeset_b47.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b58 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b47);
    java.util.TreeSet<java.lang.Boolean> treeset_b59 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array62 = new java.lang.Boolean[] { true, true };
    boolean b63 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b59, b_array62);
    treeset_b59.clear();
    java.lang.Boolean b66 = treeset_b59.lower((java.lang.Boolean)true);
    java.lang.Boolean b67 = treeset_b59.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b70 = treeset_b59.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b71 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array74 = new java.lang.Boolean[] { true, true };
    boolean b75 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b71, b_array74);
    treeset_b71.clear();
    boolean b78 = treeset_b71.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b79 = treeset_b71.stream();
    java.lang.Object[] obj_array80 = new java.lang.Object[] { treeset_b71 };
    java.lang.Object[] obj_array81 = treeset_b59.toArray(obj_array80);
    java.lang.Object[] obj_array82 = treeset_b58.toArray(obj_array81);
    java.lang.Object[] obj_array83 = treeset_b34.toArray(obj_array81);
    java.lang.Object[] obj_array84 = treeset_b0.toArray(obj_array83);
    java.lang.Boolean b86 = treeset_b0.floor((java.lang.Boolean)true);
    java.util.Spliterator<java.lang.Boolean> spliterator_b87 = treeset_b0.spliterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b88 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b90 = treeset_b0.lower((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b44 + "' != '" + false+ "'", b44.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b46 + "' != '" + false+ "'", b46.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b86);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b90);

  }

  @Test
  public void test340() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test340"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b12.stream();
    java.lang.Object[] obj_array21 = new java.lang.Object[] { treeset_b12 };
    java.lang.Object[] obj_array22 = treeset_b0.toArray(obj_array21);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b24 = treeset_b0.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b25 = treeset_b0.parallelStream();
    java.util.Comparator<java.lang.Object> comparator_obj26 = (Comparator<Object>)treeset_b0.comparator();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b27 = treeset_b0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj26);

  }

  @Test
  public void test341() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test341"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array10 = new java.lang.Boolean[] { true, true };
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b7, b_array10);
    treeset_b7.clear();
    java.lang.Boolean b14 = treeset_b7.lower((java.lang.Boolean)true);
    java.lang.Boolean b15 = treeset_b7.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b7.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b19 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array22 = new java.lang.Boolean[] { true, true };
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b19, b_array22);
    treeset_b19.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b19.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b29 = treeset_b19.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array30 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array31 = new java.lang.Object[][] {  };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array30, obj_array_array31);
    boolean b33 = treeset_b19.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array30);
    boolean b34 = treeset_b7.addAll((java.util.Collection<java.lang.Boolean>)treeset_b19);
    java.lang.Boolean b35 = treeset_b19.first();
    java.lang.Boolean b37 = treeset_b19.higher((java.lang.Boolean)false);
    boolean b38 = treeset_b0.equals((java.lang.Object)treeset_b19);
    java.util.TreeSet<java.lang.Boolean> treeset_b39 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array42 = new java.lang.Boolean[] { true, true };
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b39, b_array42);
    treeset_b39.clear();
    java.lang.Boolean b46 = treeset_b39.lower((java.lang.Boolean)true);
    java.lang.Boolean b47 = treeset_b39.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b48 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array51 = new java.lang.Boolean[] { true, true };
    boolean b52 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b48, b_array51);
    treeset_b48.clear();
    java.lang.Boolean b55 = treeset_b48.lower((java.lang.Boolean)true);
    boolean b56 = treeset_b39.addAll((java.util.Collection<java.lang.Boolean>)treeset_b48);
    java.util.TreeSet<java.lang.Boolean> treeset_b57 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array60 = new java.lang.Boolean[] { true, true };
    boolean b61 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b57, b_array60);
    treeset_b57.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b63 = treeset_b57.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b66 = treeset_b57.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long67 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array69 = new java.lang.Long[] { 1L };
    boolean b70 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long67, long_array69);
    boolean b71 = treeset_b57.removeAll((java.util.Collection<java.lang.Long>)arraylist_long67);
    boolean b72 = treeset_b39.removeAll((java.util.Collection<java.lang.Long>)arraylist_long67);
    boolean b73 = treeset_b19.removeAll((java.util.Collection<java.lang.Long>)arraylist_long67);
    java.lang.Boolean b75 = treeset_b19.higher((java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b76 = treeset_b19.descendingIterator();
    boolean b77 = treeset_b19.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b78 = treeset_b19.descendingIterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b80 = treeset_b19.tailSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b35 + "' != '" + true+ "'", b35.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b37 + "' != '" + true+ "'", b37.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b75 + "' != '" + true+ "'", b75.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b80);

  }

  @Test
  public void test342() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test342"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b13.tailSet((java.lang.Boolean)true, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b18 = treeset_b13.tailSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b18);

  }

  @Test
  public void test343() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test343"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.lang.Boolean b13 = treeset_b0.lower((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b13 + "' != '" + false+ "'", b13.equals(false));

  }

  @Test
  public void test344() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test344"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.headSet((java.lang.Boolean)false, false);
    java.lang.Boolean b12 = treeset_b0.ceiling((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));

  }

  @Test
  public void test345() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test345"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.Spliterator<java.lang.Boolean> spliterator_b14 = treeset_b0.spliterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b15 = treeset_b0.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b15);

  }

  @Test
  public void test346() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test346"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b12 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b14 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b17 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b17);

  }

  @Test
  public void test347() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test347"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b12 = treeset_b0.ceiling((java.lang.Boolean)false);
    treeset_b0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));

  }

  @Test
  public void test348() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test348"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    java.lang.Boolean b20 = treeset_b13.lower((java.lang.Boolean)true);
    java.lang.Boolean b21 = treeset_b13.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b24 = treeset_b13.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array28 = new java.lang.Boolean[] { true, true };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25, b_array28);
    treeset_b25.clear();
    boolean b32 = treeset_b25.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b33 = treeset_b25.stream();
    java.lang.Object[] obj_array34 = new java.lang.Object[] { treeset_b25 };
    java.lang.Object[] obj_array35 = treeset_b13.toArray(obj_array34);
    java.util.TreeSet<java.lang.Boolean> treeset_b36 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b13);
    java.util.Iterator<java.lang.Boolean> iterator_b37 = treeset_b13.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b38 = treeset_b13.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b39 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array42 = new java.lang.Boolean[] { true, true };
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b39, b_array42);
    treeset_b39.clear();
    java.lang.Boolean b46 = treeset_b39.lower((java.lang.Boolean)true);
    java.lang.Boolean b47 = treeset_b39.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b50 = treeset_b39.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b51 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array54 = new java.lang.Boolean[] { true, true };
    boolean b55 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b51, b_array54);
    treeset_b51.clear();
    boolean b58 = treeset_b51.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b59 = treeset_b51.stream();
    java.lang.Object[] obj_array60 = new java.lang.Object[] { treeset_b51 };
    java.lang.Object[] obj_array61 = treeset_b39.toArray(obj_array60);
    java.lang.Object[] obj_array62 = treeset_b13.toArray(obj_array61);
    java.lang.Object[] obj_array63 = treeset_b0.toArray(obj_array62);
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.Boolean> sortedset_b66 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array63);

  }

  @Test
  public void test349() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test349"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b12 = treeset_b11.pollFirst();
    java.util.Iterator<java.lang.Boolean> iterator_b13 = treeset_b11.descendingIterator();
    java.lang.Boolean b14 = treeset_b11.pollFirst();
    java.lang.Object[] obj_array15 = treeset_b11.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);

  }

  @Test
  public void test350() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test350"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.stream.Stream<java.lang.Boolean> stream_b7 = treeset_b0.parallelStream();
    treeset_b0.clear();
    java.util.function.Consumer<java.lang.Boolean> consumer_b9 = null;
    // The following exception was thrown during execution in test generation
    try {
    treeset_b0.forEach(consumer_b9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b7);

  }

  @Test
  public void test351() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test351"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.Spliterator<java.lang.Boolean> spliterator_b14 = treeset_b0.spliterator();
    java.lang.Boolean b16 = treeset_b0.ceiling((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);

  }

  @Test
  public void test352() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test352"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b13 = treeset_b0.stream();
    java.lang.Boolean b14 = treeset_b0.pollFirst();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.lang.Boolean b22 = treeset_b15.lower((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b15.headSet((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj25 = (Comparator<Object>)treeset_b15.comparator();
    boolean b26 = treeset_b0.equals((java.lang.Object)comparator_obj25);
    java.lang.Boolean b28 = treeset_b0.floor((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + false+ "'", b14.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b28);

  }

  @Test
  public void test353() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test353"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.descendingSet();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b0.subSet((java.lang.Boolean)false, false, (java.lang.Boolean)false, false);
    java.lang.Boolean b17 = treeset_b0.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b17 + "' != '" + false+ "'", b17.equals(false));

  }

  @Test
  public void test354() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test354"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b12 = treeset_b11.descendingIterator();
    java.lang.Boolean b14 = treeset_b11.lower((java.lang.Boolean)true);
    java.lang.Object[] obj_array15 = treeset_b11.toArray();
    treeset_b11.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b19 = treeset_b11.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b11.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);

  }

  @Test
  public void test355() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test355"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.stream.Stream<java.lang.Boolean> stream_b6 = treeset_b0.parallelStream();
    java.lang.Boolean b7 = treeset_b0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);

  }

  @Test
  public void test356() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test356"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.lang.Object obj12 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj12);

  }

  @Test
  public void test357() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test357"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.stream.Stream<java.lang.Boolean> stream_b13 = treeset_b0.stream();
    treeset_b0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b13);

  }

  @Test
  public void test358() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test358"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.util.Iterator<java.lang.Boolean> iterator_b29 = treeset_b12.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true, true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30, b_array33);
    treeset_b30.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b30.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b40 = treeset_b30.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b43 = treeset_b30.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b44 = treeset_b30.iterator();
    boolean b45 = treeset_b12.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30);
    java.util.TreeSet<java.lang.Boolean> treeset_b46 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array49 = new java.lang.Boolean[] { true, true };
    boolean b50 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b46, b_array49);
    treeset_b46.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b54 = treeset_b46.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b56 = treeset_b46.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b57 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b46);
    java.util.TreeSet<java.lang.Boolean> treeset_b58 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b46);
    java.util.SortedSet<java.lang.Boolean> sortedset_b61 = treeset_b46.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b62 = new java.util.TreeSet<java.lang.Boolean>(sortedset_b61);
    boolean b63 = treeset_b12.addAll((java.util.Collection<java.lang.Boolean>)treeset_b62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);

  }

  @Test
  public void test359() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test359"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    boolean b13 = treeset_b0.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b14 = treeset_b0.stream();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.lang.Boolean b22 = treeset_b15.lower((java.lang.Boolean)true);
    java.lang.Boolean b23 = treeset_b15.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b15.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { true, true };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27, b_array30);
    treeset_b27.clear();
    boolean b34 = treeset_b27.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b35 = treeset_b27.stream();
    java.lang.Object[] obj_array36 = new java.lang.Object[] { treeset_b27 };
    java.lang.Object[] obj_array37 = treeset_b15.toArray(obj_array36);
    java.lang.Object[] obj_array38 = treeset_b0.toArray(obj_array37);
    java.util.TreeSet<java.lang.Boolean> treeset_b39 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b41 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array44 = new java.lang.Boolean[] { true, true };
    boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b41, b_array44);
    treeset_b41.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b47 = treeset_b41.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b50 = treeset_b41.headSet((java.lang.Boolean)false, true);
    boolean b51 = treeset_b40.equals((java.lang.Object)treeset_b41);
    int i52 = treeset_b40.size();
    java.util.SortedSet<java.lang.Boolean> sortedset_b54 = treeset_b40.headSet((java.lang.Boolean)false);
    boolean b55 = treeset_b0.equals((java.lang.Object)sortedset_b54);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b60 = treeset_b0.subSet((java.lang.Boolean)true, false, (java.lang.Boolean)true, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b60);

  }

  @Test
  public void test360() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test360"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    boolean b16 = treeset_b9.add((java.lang.Boolean)false);
    int i17 = treeset_b9.size();
    java.lang.Boolean b19 = treeset_b9.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b9.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { true, true };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array25);
    treeset_b22.clear();
    java.lang.Boolean b29 = treeset_b22.lower((java.lang.Boolean)true);
    java.lang.Boolean b30 = treeset_b22.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b33 = treeset_b22.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array37 = new java.lang.Boolean[] { true, true };
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array37);
    treeset_b34.clear();
    boolean b41 = treeset_b34.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b42 = treeset_b34.stream();
    java.lang.Object[] obj_array43 = new java.lang.Object[] { treeset_b34 };
    java.lang.Object[] obj_array44 = treeset_b22.toArray(obj_array43);
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b22);
    java.util.Iterator<java.lang.Boolean> iterator_b46 = treeset_b22.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b47 = treeset_b22.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b48 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array51 = new java.lang.Boolean[] { true, true };
    boolean b52 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b48, b_array51);
    treeset_b48.clear();
    java.lang.Boolean b55 = treeset_b48.lower((java.lang.Boolean)true);
    java.lang.Boolean b56 = treeset_b48.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b59 = treeset_b48.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b60 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array63 = new java.lang.Boolean[] { true, true };
    boolean b64 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b60, b_array63);
    treeset_b60.clear();
    boolean b67 = treeset_b60.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b68 = treeset_b60.stream();
    java.lang.Object[] obj_array69 = new java.lang.Object[] { treeset_b60 };
    java.lang.Object[] obj_array70 = treeset_b48.toArray(obj_array69);
    java.lang.Object[] obj_array71 = treeset_b22.toArray(obj_array70);
    java.lang.Object[] obj_array72 = treeset_b9.toArray(obj_array71);
    java.lang.Object[] obj_array73 = treeset_b0.toArray(obj_array72);
    java.util.function.Predicate<java.lang.Object> predicate_obj74 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b75 = treeset_b0.removeIf(predicate_obj74);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b19 + "' != '" + false+ "'", b19.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array73);

  }

  @Test
  public void test361() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test361"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.lang.String str9 = treeset_b0.toString();
    java.util.stream.Stream<java.lang.Boolean> stream_b10 = treeset_b0.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true, true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b11, b_array14);
    treeset_b11.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b19 = treeset_b11.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Boolean> arraylist_b20 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { false, false };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b20, b_array23);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array25 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array26 = new java.lang.Object[][] {  };
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array25, obj_array_array26);
    boolean b28 = arraylist_b20.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array25);
    boolean b29 = treeset_b11.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array25);
    boolean b30 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array25);
    java.util.Comparator<java.lang.Object> comparator_obj31 = (Comparator<Object>)treeset_b0.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b34 = treeset_b0.headSet((java.lang.Boolean)false, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[]"+ "'", str9.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b34);

  }

  @Test
  public void test362() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test362"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    boolean b14 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b17 = treeset_b0.headSet((java.lang.Boolean)true, true);
    java.lang.Boolean b18 = treeset_b0.last();
    java.lang.String str19 = treeset_b0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[true]"+ "'", str19.equals("[true]"));

  }

  @Test
  public void test363() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test363"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b10 = treeset_b0.higher((java.lang.Boolean)false);
    java.lang.Boolean b12 = treeset_b0.lower((java.lang.Boolean)false);
    java.lang.String str13 = treeset_b0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[]"+ "'", str13.equals("[]"));

  }

  @Test
  public void test364() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test364"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b11.headSet((java.lang.Boolean)false, false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b19 = treeset_b11.subSet((java.lang.Boolean)false, false, (java.lang.Boolean)true, false);
    java.lang.Boolean b21 = treeset_b11.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { true, true };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array25);
    treeset_b22.clear();
    java.lang.Boolean b29 = treeset_b22.lower((java.lang.Boolean)true);
    java.lang.Boolean b30 = treeset_b22.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    java.lang.Boolean b38 = treeset_b31.lower((java.lang.Boolean)true);
    boolean b39 = treeset_b22.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31);
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array43 = new java.lang.Boolean[] { true, true };
    boolean b44 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b40, b_array43);
    treeset_b40.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b46 = treeset_b40.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b49 = treeset_b40.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long50 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array52 = new java.lang.Long[] { 1L };
    boolean b53 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long50, long_array52);
    boolean b54 = treeset_b40.removeAll((java.util.Collection<java.lang.Long>)arraylist_long50);
    boolean b55 = treeset_b22.removeAll((java.util.Collection<java.lang.Long>)arraylist_long50);
    boolean b56 = treeset_b11.removeAll((java.util.Collection<java.lang.Long>)arraylist_long50);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b57 = treeset_b11.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b58 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b21 + "' != '" + true+ "'", b21.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b57);

  }

  @Test
  public void test365() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test365"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b12.tailSet((java.lang.Boolean)false);
    boolean b16 = treeset_b12.add((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b17 = treeset_b12.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b17);

  }

  @Test
  public void test366() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test366"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b11);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b13.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b23 = treeset_b13.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b13);
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array28 = new java.lang.Boolean[] { true, true };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25, b_array28);
    treeset_b25.clear();
    java.lang.Boolean b32 = treeset_b25.lower((java.lang.Boolean)true);
    java.lang.Boolean b33 = treeset_b25.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b36 = treeset_b25.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array40 = new java.lang.Boolean[] { true, true };
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37, b_array40);
    treeset_b37.clear();
    boolean b44 = treeset_b37.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b45 = treeset_b37.stream();
    java.lang.Object[] obj_array46 = new java.lang.Object[] { treeset_b37 };
    java.lang.Object[] obj_array47 = treeset_b25.toArray(obj_array46);
    java.lang.Object[] obj_array48 = treeset_b24.toArray(obj_array47);
    java.util.stream.Stream<java.lang.Boolean> stream_b49 = treeset_b24.stream();
    boolean b50 = treeset_b12.equals((java.lang.Object)treeset_b24);
    java.lang.Boolean b51 = treeset_b24.last();
    java.lang.Boolean b52 = treeset_b24.pollLast();
    java.lang.Boolean b54 = treeset_b24.floor((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b51 + "' != '" + true+ "'", b51.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b52 + "' != '" + true+ "'", b52.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b54);

  }

  @Test
  public void test367() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test367"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    boolean b16 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array20 = new java.lang.Boolean[] { true, true };
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17, b_array20);
    treeset_b17.clear();
    java.lang.Boolean b24 = treeset_b17.lower((java.lang.Boolean)true);
    java.lang.Boolean b25 = treeset_b17.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b28 = treeset_b17.headSet((java.lang.Boolean)true, false);
    boolean b30 = treeset_b17.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b31 = treeset_b17.stream();
    boolean b32 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b17);
    java.util.TreeSet<java.lang.Boolean> treeset_b33 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array35 = new java.lang.Boolean[] { false };
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b33, b_array35);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b39 = treeset_b33.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b39);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b43 = treeset_b40.tailSet((java.lang.Boolean)true, false);
    boolean b44 = treeset_b17.equals((java.lang.Object)treeset_b40);
    java.lang.Boolean b45 = treeset_b17.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b45 + "' != '" + true+ "'", b45.equals(true));

  }

  @Test
  public void test368() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test368"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array4 = new java.lang.Boolean[] { true, true };
    boolean b5 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b1, b_array4);
    treeset_b1.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b7 = treeset_b1.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b1.headSet((java.lang.Boolean)false, true);
    boolean b11 = treeset_b0.equals((java.lang.Object)treeset_b1);
    java.lang.Boolean b13 = treeset_b1.ceiling((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { true, true };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array17);
    treeset_b14.clear();
    java.lang.Boolean b21 = treeset_b14.lower((java.lang.Boolean)true);
    java.lang.Boolean b22 = treeset_b14.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b25 = treeset_b14.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b26 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b25);
    java.util.Spliterator<java.lang.Boolean> spliterator_b27 = treeset_b26.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b28 = treeset_b26.descendingSet();
    // The following exception was thrown during execution in test generation
    try {
    boolean b29 = treeset_b1.contains((java.lang.Object)treeset_b26);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b28);

  }

  @Test
  public void test369() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test369"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    int i15 = treeset_b0.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 1);

  }

  @Test
  public void test370() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test370"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    boolean b14 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b17 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b22 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array26 = new java.lang.Boolean[] { true, true };
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23, b_array26);
    treeset_b23.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b31 = treeset_b23.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b33 = treeset_b23.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b23);
    java.util.TreeSet<java.lang.Boolean> treeset_b35 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b23);
    java.util.SortedSet<java.lang.Boolean> sortedset_b37 = treeset_b35.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b38 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array41 = new java.lang.Boolean[] { true, true };
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b38, b_array41);
    treeset_b38.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b46 = treeset_b38.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b48 = treeset_b38.add((java.lang.Boolean)true);
    boolean b50 = treeset_b38.add((java.lang.Boolean)true);
    boolean b52 = treeset_b38.add((java.lang.Boolean)true);
    java.lang.Object obj53 = treeset_b38.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b54 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b38);
    java.lang.Boolean b55 = treeset_b54.last();
    java.util.ArrayList<java.lang.String> arraylist_str56 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array62 = new java.lang.String[] { "hi!", "[]", "[]", "[true]", "[false]" };
    boolean b63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str56, str_array62);
    boolean b64 = treeset_b54.retainAll((java.util.Collection<java.lang.String>)arraylist_str56);
    boolean b65 = treeset_b35.retainAll((java.util.Collection<java.lang.String>)arraylist_str56);
    boolean b66 = treeset_b0.retainAll((java.util.Collection<java.lang.String>)arraylist_str56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b55 + "' != '" + true+ "'", b55.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);

  }

  @Test
  public void test371() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test371"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.lang.Boolean b19 = treeset_b12.lower((java.lang.Boolean)true);
    java.lang.Boolean b20 = treeset_b12.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b23 = treeset_b12.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array27 = new java.lang.Boolean[] { true, true };
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24, b_array27);
    treeset_b24.clear();
    boolean b31 = treeset_b24.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b32 = treeset_b24.stream();
    java.lang.Object[] obj_array33 = new java.lang.Object[] { treeset_b24 };
    java.lang.Object[] obj_array34 = treeset_b12.toArray(obj_array33);
    java.util.TreeSet<java.lang.Boolean> treeset_b35 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.util.Iterator<java.lang.Boolean> iterator_b36 = treeset_b12.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b37 = treeset_b12.parallelStream();
      java.util.Comparator<java.lang.Object> comparator_obj38 = (Comparator<Object>)treeset_b12.comparator();
    boolean b39 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b41 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b42 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b41);

  }

  @Test
  public void test372() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test372"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b12.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b15 = treeset_b12.last();
    java.lang.Boolean b16 = treeset_b12.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b15 + "' != '" + true+ "'", b15.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b16 + "' != '" + true+ "'", b16.equals(true));

  }

  @Test
  public void test373() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test373"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b13 = treeset_b0.stream();
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array16 = new java.lang.String[] { "" };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array16);
    boolean b18 = treeset_b0.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b0.headSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);

  }

  @Test
  public void test374() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test374"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b6);
    java.util.Comparator<java.lang.Object> comparator_obj8 = (Comparator<Object>)treeset_b7.comparator();
    java.lang.Boolean b10 = treeset_b7.floor((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b7.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);

  }

  @Test
  public void test375() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test375"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b12 = treeset_b0.floor((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b13.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b23 = treeset_b13.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b13);
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array28 = new java.lang.Boolean[] { true, true };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25, b_array28);
    treeset_b25.clear();
    java.lang.Boolean b32 = treeset_b25.lower((java.lang.Boolean)true);
    java.lang.Boolean b33 = treeset_b25.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b36 = treeset_b25.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array40 = new java.lang.Boolean[] { true, true };
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37, b_array40);
    treeset_b37.clear();
    boolean b44 = treeset_b37.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b45 = treeset_b37.stream();
    java.lang.Object[] obj_array46 = new java.lang.Object[] { treeset_b37 };
    java.lang.Object[] obj_array47 = treeset_b25.toArray(obj_array46);
    java.lang.Object[] obj_array48 = treeset_b24.toArray(obj_array47);
    java.lang.Object[] obj_array49 = treeset_b0.toArray(obj_array47);
    java.util.SortedSet<java.lang.Boolean> sortedset_b51 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b54 = treeset_b0.tailSet((java.lang.Boolean)false, false);
    java.lang.Object[] obj_array55 = treeset_b0.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array55);

  }

  @Test
  public void test376() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test376"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b17 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b0.headSet((java.lang.Boolean)true, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);

  }

  @Test
  public void test377() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test377"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    boolean b16 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b19 = treeset_b0.higher((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.String str22 = treeset_b0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b19 + "' != '" + true+ "'", b19.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "[true]"+ "'", str22.equals("[true]"));

  }

  @Test
  public void test378() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test378"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b14 = treeset_b13.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b23 = treeset_b15.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b25 = treeset_b15.add((java.lang.Boolean)true);
    boolean b27 = treeset_b15.add((java.lang.Boolean)true);
    boolean b29 = treeset_b15.add((java.lang.Boolean)true);
    java.lang.Object obj30 = treeset_b15.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b15);
    java.lang.Boolean b32 = treeset_b31.last();
    java.util.ArrayList<java.lang.String> arraylist_str33 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array39 = new java.lang.String[] { "hi!", "[]", "[]", "[true]", "[false]" };
    boolean b40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str33, str_array39);
    boolean b41 = treeset_b31.retainAll((java.util.Collection<java.lang.String>)arraylist_str33);
    java.lang.Object obj42 = treeset_b31.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array46 = new java.lang.Boolean[] { true, true };
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b43, b_array46);
    treeset_b43.clear();
    boolean b50 = treeset_b43.add((java.lang.Boolean)false);
    int i51 = treeset_b43.size();
    java.lang.Boolean b53 = treeset_b43.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b55 = treeset_b43.tailSet((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b56 = treeset_b43.stream();
    java.util.ArrayList<java.lang.String> arraylist_str57 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array59 = new java.lang.String[] { "" };
    boolean b60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str57, str_array59);
    boolean b61 = treeset_b43.retainAll((java.util.Collection<java.lang.String>)arraylist_str57);
    treeset_b43.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b63 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b43);
    java.lang.Object[] obj_array64 = treeset_b43.toArray();
    java.lang.Object[] obj_array65 = treeset_b31.toArray(obj_array64);
    java.lang.Object[] obj_array66 = treeset_b13.toArray(obj_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + true+ "'", b14.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b32 + "' != '" + true+ "'", b32.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b53 + "' != '" + false+ "'", b53.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array66);

  }

  @Test
  public void test379() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test379"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.lang.Boolean b19 = treeset_b12.lower((java.lang.Boolean)true);
    java.lang.Boolean b20 = treeset_b12.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b23 = treeset_b12.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array27 = new java.lang.Boolean[] { true, true };
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24, b_array27);
    treeset_b24.clear();
    boolean b31 = treeset_b24.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b32 = treeset_b24.stream();
    java.lang.Object[] obj_array33 = new java.lang.Object[] { treeset_b24 };
    java.lang.Object[] obj_array34 = treeset_b12.toArray(obj_array33);
    java.util.TreeSet<java.lang.Boolean> treeset_b35 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.util.Iterator<java.lang.Boolean> iterator_b36 = treeset_b12.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b37 = treeset_b12.parallelStream();
      java.util.Comparator<java.lang.Object> comparator_obj38 = (Comparator<Object>)treeset_b12.comparator();
    boolean b39 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Object obj40 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj40);

  }

  @Test
  public void test380() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test380"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b12.stream();
    java.lang.Object[] obj_array21 = new java.lang.Object[] { treeset_b12 };
    java.lang.Object[] obj_array22 = treeset_b0.toArray(obj_array21);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b24 = treeset_b0.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b25 = treeset_b0.parallelStream();
    boolean b26 = treeset_b0.isEmpty();
    java.util.Iterator<java.lang.Boolean> iterator_b27 = treeset_b0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b27);

  }

  @Test
  public void test381() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test381"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b10 = treeset_b0.descendingIterator();
    treeset_b0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b10);

  }

  @Test
  public void test382() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test382"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b17 = treeset_b9.iterator();
    java.lang.Boolean b19 = treeset_b9.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b9);
    java.lang.Boolean b21 = treeset_b20.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b22 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { false, false };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b22, b_array25);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array27 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array28 = new java.lang.Object[][] {  };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27, obj_array_array28);
    boolean b30 = arraylist_b22.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b31 = treeset_b20.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b32 = treeset_b0.equals((java.lang.Object)treeset_b20);
    java.util.Iterator<java.lang.Boolean> iterator_b33 = treeset_b0.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b34 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array37 = new java.lang.Boolean[] { true, true };
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b34, b_array37);
    treeset_b34.clear();
    boolean b41 = treeset_b34.add((java.lang.Boolean)false);
    int i42 = treeset_b34.size();
    java.lang.Boolean b44 = treeset_b34.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b46 = treeset_b34.floor((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b47 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array50 = new java.lang.Boolean[] { true, true };
    boolean b51 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b47, b_array50);
    treeset_b47.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b55 = treeset_b47.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b57 = treeset_b47.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b58 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b47);
    java.util.TreeSet<java.lang.Boolean> treeset_b59 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array62 = new java.lang.Boolean[] { true, true };
    boolean b63 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b59, b_array62);
    treeset_b59.clear();
    java.lang.Boolean b66 = treeset_b59.lower((java.lang.Boolean)true);
    java.lang.Boolean b67 = treeset_b59.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b70 = treeset_b59.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b71 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array74 = new java.lang.Boolean[] { true, true };
    boolean b75 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b71, b_array74);
    treeset_b71.clear();
    boolean b78 = treeset_b71.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b79 = treeset_b71.stream();
    java.lang.Object[] obj_array80 = new java.lang.Object[] { treeset_b71 };
    java.lang.Object[] obj_array81 = treeset_b59.toArray(obj_array80);
    java.lang.Object[] obj_array82 = treeset_b58.toArray(obj_array81);
    java.lang.Object[] obj_array83 = treeset_b34.toArray(obj_array81);
    java.lang.Object[] obj_array84 = treeset_b0.toArray(obj_array83);
    java.lang.Boolean b86 = treeset_b0.floor((java.lang.Boolean)true);
    java.util.Spliterator<java.lang.Boolean> spliterator_b87 = treeset_b0.spliterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b88 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.stream.Stream<java.lang.Boolean> stream_b89 = treeset_b0.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b44 + "' != '" + false+ "'", b44.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b46 + "' != '" + false+ "'", b46.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b86);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b89);

  }

  @Test
  public void test383() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test383"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b11);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b13.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b23 = treeset_b13.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b13);
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array28 = new java.lang.Boolean[] { true, true };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25, b_array28);
    treeset_b25.clear();
    java.lang.Boolean b32 = treeset_b25.lower((java.lang.Boolean)true);
    java.lang.Boolean b33 = treeset_b25.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b36 = treeset_b25.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array40 = new java.lang.Boolean[] { true, true };
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37, b_array40);
    treeset_b37.clear();
    boolean b44 = treeset_b37.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b45 = treeset_b37.stream();
    java.lang.Object[] obj_array46 = new java.lang.Object[] { treeset_b37 };
    java.lang.Object[] obj_array47 = treeset_b25.toArray(obj_array46);
    java.lang.Object[] obj_array48 = treeset_b24.toArray(obj_array47);
    java.util.stream.Stream<java.lang.Boolean> stream_b49 = treeset_b24.stream();
    boolean b50 = treeset_b12.equals((java.lang.Object)treeset_b24);
    treeset_b24.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);

  }

  @Test
  public void test384() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test384"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.util.ArrayList<java.lang.Long> arraylist_long7 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array9 = new java.lang.Long[] { 0L };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long7, long_array9);
    boolean b11 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long7);
    java.util.Comparator<java.lang.Object> comparator_obj12 = (Comparator<Object>)treeset_b0.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b13 = treeset_b0.descendingSet();
    java.util.function.Consumer<java.lang.Boolean> consumer_b14 = null;
    // The following exception was thrown during execution in test generation
    try {
    navigableset_b13.forEach(consumer_b14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b13);

  }

  @Test
  public void test385() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test385"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b11);
    java.util.ArrayList<java.lang.String> arraylist_str13 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str13, str_array18);
    boolean b20 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str13);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { true, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    treeset_b21.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b29 = treeset_b21.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b31 = treeset_b21.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array32 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array33 = new java.lang.Object[][] {  };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32, obj_array_array33);
    boolean b35 = treeset_b21.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32);
    boolean b36 = treeset_b12.equals((java.lang.Object)treeset_b21);
    java.lang.Object[] obj_array37 = treeset_b21.toArray();
    java.util.SortedSet<java.lang.Boolean> sortedset_b39 = treeset_b21.tailSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b39);

  }

  @Test
  public void test386() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test386"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array11 = new java.lang.Boolean[] { true, true };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array11);
    treeset_b8.clear();
    java.lang.Boolean b15 = treeset_b8.lower((java.lang.Boolean)true);
    java.lang.Boolean b16 = treeset_b8.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b19 = treeset_b8.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { true, true };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b20, b_array23);
    treeset_b20.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b20.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b30 = treeset_b20.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array31 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array32 = new java.lang.Object[][] {  };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array31, obj_array_array32);
    boolean b34 = treeset_b20.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array31);
    boolean b35 = treeset_b8.addAll((java.util.Collection<java.lang.Boolean>)treeset_b20);
    boolean b36 = treeset_b0.remove((java.lang.Object)b35);
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b39 = treeset_b0.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b39);

  }

  @Test
  public void test387() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test387"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    boolean b16 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b19 = treeset_b0.higher((java.lang.Boolean)false);
    java.lang.Boolean b20 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b0.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { true, true };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b22, b_array25);
    treeset_b22.clear();
    boolean b29 = treeset_b22.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b30 = treeset_b22.stream();
    boolean b31 = treeset_b0.equals((java.lang.Object)stream_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b19 + "' != '" + true+ "'", b19.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b20 + "' != '" + true+ "'", b20.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);

  }

  @Test
  public void test388() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test388"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b12.stream();
    java.lang.Object[] obj_array21 = new java.lang.Object[] { treeset_b12 };
    java.lang.Object[] obj_array22 = treeset_b0.toArray(obj_array21);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b24 = treeset_b0.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b25 = treeset_b0.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b26 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array29 = new java.lang.Boolean[] { true, true };
    boolean b30 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b26, b_array29);
    treeset_b26.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b32 = treeset_b26.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b35 = treeset_b26.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long36 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array41 = new java.lang.Long[] { 1L, 1L, 100L, (-1L) };
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long36, long_array41);
    boolean b43 = treeset_b26.removeAll((java.util.Collection<java.lang.Long>)arraylist_long36);
    boolean b44 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long36);
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array48 = new java.lang.Boolean[] { true, true };
    boolean b49 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b45, b_array48);
    treeset_b45.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b53 = treeset_b45.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b55 = treeset_b45.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array56 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array57 = new java.lang.Object[][] {  };
    boolean b58 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array56, obj_array_array57);
    boolean b59 = treeset_b45.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array56);
    java.lang.Object obj60 = treeset_b45.clone();
    java.lang.String str61 = treeset_b45.toString();
    java.lang.Boolean b63 = treeset_b45.ceiling((java.lang.Boolean)false);
    boolean b64 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b45);
    java.lang.Boolean b65 = treeset_b0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + "[true]"+ "'", str61.equals("[true]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b63 + "' != '" + true+ "'", b63.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b65 + "' != '" + true+ "'", b65.equals(true));

  }

  @Test
  public void test389() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test389"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    boolean b16 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b18 = treeset_b0.pollFirst();
    java.lang.Boolean b20 = treeset_b0.higher((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { true, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    treeset_b21.clear();
    java.lang.Boolean b28 = treeset_b21.lower((java.lang.Boolean)true);
    java.lang.Boolean b30 = treeset_b21.lower((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    java.lang.Boolean b38 = treeset_b31.lower((java.lang.Boolean)true);
    java.lang.Boolean b39 = treeset_b31.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b42 = treeset_b31.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array46 = new java.lang.Boolean[] { true, true };
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b43, b_array46);
    treeset_b43.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b51 = treeset_b43.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b53 = treeset_b43.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array54 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array55 = new java.lang.Object[][] {  };
    boolean b56 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array54, obj_array_array55);
    boolean b57 = treeset_b43.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array54);
    boolean b58 = treeset_b31.addAll((java.util.Collection<java.lang.Boolean>)treeset_b43);
    java.util.TreeSet<java.lang.Boolean> treeset_b59 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array62 = new java.lang.Boolean[] { true, true };
    boolean b63 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b59, b_array62);
    treeset_b59.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b67 = treeset_b59.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b69 = treeset_b59.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array70 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array71 = new java.lang.Object[][] {  };
    boolean b72 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array70, obj_array_array71);
    boolean b73 = treeset_b59.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array70);
    boolean b74 = treeset_b43.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array70);
    boolean b75 = treeset_b21.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array70);
    boolean b76 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array70);
    java.lang.Object obj77 = treeset_b0.clone();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b78 = treeset_b0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj77);

  }

  @Test
  public void test390() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test390"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b13 = treeset_b0.stream();
    java.lang.Boolean b14 = treeset_b0.pollFirst();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.lang.Boolean b22 = treeset_b15.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b23 = treeset_b15.iterator();
    java.lang.Boolean b25 = treeset_b15.ceiling((java.lang.Boolean)true);
    boolean b26 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15);
    java.util.Comparator<java.lang.Object> comparator_obj27 = (Comparator<Object>)treeset_b0.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + false+ "'", b14.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj27);

  }

  @Test
  public void test391() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test391"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array4 = new java.lang.Boolean[] { true, true };
    boolean b5 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b1, b_array4);
    treeset_b1.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b7 = treeset_b1.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b1.headSet((java.lang.Boolean)false, true);
    boolean b11 = treeset_b0.equals((java.lang.Object)treeset_b1);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b18 = treeset_b0.equals((java.lang.Object)treeset_b12);
    java.lang.Boolean b19 = treeset_b12.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);

  }

  @Test
  public void test392() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test392"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b17 = treeset_b9.iterator();
    java.lang.Boolean b19 = treeset_b9.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b9);
    java.lang.Boolean b21 = treeset_b20.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b22 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { false, false };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b22, b_array25);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array27 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array28 = new java.lang.Object[][] {  };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27, obj_array_array28);
    boolean b30 = arraylist_b22.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b31 = treeset_b20.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b32 = treeset_b0.equals((java.lang.Object)treeset_b20);
    boolean b34 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b35 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);

  }

  @Test
  public void test393() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test393"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.util.Iterator<java.lang.Boolean> iterator_b12 = treeset_b0.descendingIterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b15 = treeset_b0.headSet((java.lang.Boolean)true, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b15);

  }

  @Test
  public void test394() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test394"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    boolean b14 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b17 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.stream.Stream<java.lang.Boolean> stream_b18 = navigableset_b17.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b18);

  }

  @Test
  public void test395() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test395"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b12 = treeset_b0.floor((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);

  }

  @Test
  public void test396() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test396"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b12 = treeset_b11.descendingIterator();
    java.lang.Boolean b14 = treeset_b11.lower((java.lang.Boolean)true);
    java.lang.Object[] obj_array15 = treeset_b11.toArray();
    treeset_b11.clear();
    java.lang.Object[] obj_array17 = treeset_b11.toArray();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b18 = treeset_b11.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);

  }

  @Test
  public void test397() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test397"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.stream.Stream<java.lang.Boolean> stream_b1 = treeset_b0.parallelStream();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b2 = treeset_b0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b2);

  }

  @Test
  public void test398() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test398"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { true };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    boolean b4 = treeset_b0.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b7 = treeset_b0.headSet((java.lang.Boolean)true, false);
    boolean b9 = treeset_b0.add((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);

  }

  @Test
  public void test399() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test399"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.lang.Object obj12 = treeset_b0.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    java.lang.Boolean b20 = treeset_b13.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b21 = treeset_b13.iterator();
    java.lang.Boolean b23 = treeset_b13.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b13);
    java.lang.Boolean b25 = treeset_b24.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b26 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array29 = new java.lang.Boolean[] { false, false };
    boolean b30 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b26, b_array29);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array31 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array32 = new java.lang.Object[][] {  };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array31, obj_array_array32);
    boolean b34 = arraylist_b26.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array31);
    boolean b35 = treeset_b24.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array31);
    boolean b36 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array31);
    java.util.SortedSet<java.lang.Boolean> sortedset_b39 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b39);

  }

  @Test
  public void test400() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test400"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.lang.Object obj7 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Spliterator<java.lang.Boolean> spliterator_b10 = treeset_b0.spliterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array14 = new java.lang.Boolean[] { true, true };
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b11, b_array14);
    treeset_b11.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b17 = treeset_b11.spliterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b19 = treeset_b11.tailSet((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b24 = treeset_b11.subSet((java.lang.Boolean)true, true, (java.lang.Boolean)true, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b11.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b28 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array31 = new java.lang.Boolean[] { true, true };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b28, b_array31);
    treeset_b28.clear();
    boolean b35 = treeset_b28.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b37 = treeset_b28.headSet((java.lang.Boolean)false);
    boolean b38 = treeset_b11.addAll((java.util.Collection<java.lang.Boolean>)sortedset_b37);
    boolean b39 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);

  }

  @Test
  public void test401() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test401"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b13 = treeset_b0.first();
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.tailSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b13 + "' != '" + false+ "'", b13.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);

  }

  @Test
  public void test402() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test402"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b11);
    java.util.ArrayList<java.lang.String> arraylist_str13 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str13, str_array18);
    boolean b20 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str13);
    java.util.Iterator<java.lang.Boolean> iterator_b21 = treeset_b12.descendingIterator();
    boolean b22 = treeset_b12.isEmpty();
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array26 = new java.lang.Boolean[] { true, true };
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23, b_array26);
    treeset_b23.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b31 = treeset_b23.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Boolean> arraylist_b32 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array35 = new java.lang.Boolean[] { false, false };
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b32, b_array35);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array37 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array38 = new java.lang.Object[][] {  };
    boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array37, obj_array_array38);
    boolean b40 = arraylist_b32.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array37);
    boolean b41 = treeset_b23.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array37);
    boolean b42 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array37);
    java.lang.Boolean b44 = treeset_b12.floor((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array48 = new java.lang.Boolean[] { true, true };
    boolean b49 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b45, b_array48);
    treeset_b45.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b51 = treeset_b45.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b54 = treeset_b45.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long55 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array57 = new java.lang.Long[] { 1L };
    boolean b58 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long55, long_array57);
    boolean b59 = treeset_b45.removeAll((java.util.Collection<java.lang.Long>)arraylist_long55);
    boolean b60 = treeset_b12.removeAll((java.util.Collection<java.lang.Long>)arraylist_long55);
    java.util.TreeSet<java.lang.Boolean> treeset_b61 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array64 = new java.lang.Boolean[] { true, true };
    boolean b65 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b61, b_array64);
    treeset_b61.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b69 = treeset_b61.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b71 = treeset_b61.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array72 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array73 = new java.lang.Object[][] {  };
    boolean b74 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array72, obj_array_array73);
    boolean b75 = treeset_b61.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array72);
    boolean b77 = treeset_b61.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b78 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b61);
    java.util.SortedSet<java.lang.Boolean> sortedset_b80 = treeset_b78.headSet((java.lang.Boolean)false);
    boolean b81 = treeset_b12.addAll((java.util.Collection<java.lang.Boolean>)sortedset_b80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b81 == false);

  }

  @Test
  public void test403() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test403"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.lang.Object obj12 = treeset_b0.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b0.headSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.lang.Boolean b22 = treeset_b15.lower((java.lang.Boolean)true);
    java.lang.Boolean b23 = treeset_b15.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b15.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { true, true };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27, b_array30);
    treeset_b27.clear();
    boolean b34 = treeset_b27.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b35 = treeset_b27.stream();
    java.lang.Object[] obj_array36 = new java.lang.Object[] { treeset_b27 };
    java.lang.Object[] obj_array37 = treeset_b15.toArray(obj_array36);
    java.util.TreeSet<java.lang.Boolean> treeset_b38 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b15);
    java.util.Iterator<java.lang.Boolean> iterator_b39 = treeset_b15.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b40 = treeset_b15.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b41 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array44 = new java.lang.Boolean[] { true, true };
    boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b41, b_array44);
    treeset_b41.clear();
    java.lang.Boolean b48 = treeset_b41.lower((java.lang.Boolean)true);
    java.lang.Boolean b49 = treeset_b41.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b52 = treeset_b41.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b53 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array56 = new java.lang.Boolean[] { true, true };
    boolean b57 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b53, b_array56);
    treeset_b53.clear();
    boolean b60 = treeset_b53.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b61 = treeset_b53.stream();
    java.lang.Object[] obj_array62 = new java.lang.Object[] { treeset_b53 };
    java.lang.Object[] obj_array63 = treeset_b41.toArray(obj_array62);
    java.lang.Object[] obj_array64 = treeset_b15.toArray(obj_array63);
    java.util.TreeSet<java.lang.Boolean> treeset_b65 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b15);
    java.lang.String str66 = treeset_b65.toString();
    boolean b67 = treeset_b0.equals((java.lang.Object)treeset_b65);
    java.lang.Boolean b68 = treeset_b0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str66 + "' != '" + "[]"+ "'", str66.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b68 + "' != '" + false+ "'", b68.equals(false));

  }

  @Test
  public void test404() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test404"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b11);
    java.util.ArrayList<java.lang.String> arraylist_str13 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str13, str_array18);
    boolean b20 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str13);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { true, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    treeset_b21.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b29 = treeset_b21.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b31 = treeset_b21.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array32 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array33 = new java.lang.Object[][] {  };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32, obj_array_array33);
    boolean b35 = treeset_b21.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32);
    boolean b36 = treeset_b12.equals((java.lang.Object)treeset_b21);
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array39 = new java.lang.Boolean[] { false };
    boolean b40 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37, b_array39);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b43 = treeset_b37.headSet((java.lang.Boolean)false, true);
    java.util.stream.Stream<java.lang.Boolean> stream_b44 = treeset_b37.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b37);
    boolean b46 = treeset_b21.equals((java.lang.Object)treeset_b45);
    java.util.Comparator<java.lang.Object> comparator_obj47 = (Comparator<Object>)treeset_b21.comparator();
    java.lang.Boolean b48 = treeset_b21.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b48 + "' != '" + true+ "'", b48.equals(true));

  }

  @Test
  public void test405() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test405"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    boolean b16 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    treeset_b18.clear();
    java.lang.Boolean b25 = treeset_b18.lower((java.lang.Boolean)true);
    java.lang.Boolean b26 = treeset_b18.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b18.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true, true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30, b_array33);
    treeset_b30.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b30.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b40 = treeset_b30.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array41 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array42 = new java.lang.Object[][] {  };
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array41, obj_array_array42);
    boolean b44 = treeset_b30.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array41);
    boolean b45 = treeset_b18.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30);
    java.lang.Boolean b46 = treeset_b30.first();
    java.util.Iterator<java.lang.Boolean> iterator_b47 = treeset_b30.descendingIterator();
    boolean b48 = treeset_b0.equals((java.lang.Object)treeset_b30);
    java.util.TreeSet<java.lang.Boolean> treeset_b49 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array52 = new java.lang.Boolean[] { true, true };
    boolean b53 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b49, b_array52);
    treeset_b49.clear();
    java.lang.Boolean b56 = treeset_b49.lower((java.lang.Boolean)true);
    java.lang.Boolean b57 = treeset_b49.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b60 = treeset_b49.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b61 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array64 = new java.lang.Boolean[] { true, true };
    boolean b65 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b61, b_array64);
    treeset_b61.clear();
    boolean b68 = treeset_b61.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b69 = treeset_b61.stream();
    java.lang.Object[] obj_array70 = new java.lang.Object[] { treeset_b61 };
    java.lang.Object[] obj_array71 = treeset_b49.toArray(obj_array70);
    java.lang.Object[] obj_array72 = treeset_b30.toArray(obj_array70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b46 + "' != '" + true+ "'", b46.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array72);

  }

  @Test
  public void test406() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test406"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array11 = new java.lang.Boolean[] { true, true };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array11);
    treeset_b8.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b16 = treeset_b8.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b18 = treeset_b8.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b8.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8);
    java.lang.Boolean b23 = treeset_b0.pollFirst();
    java.lang.Boolean b25 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b30 = treeset_b0.subSet((java.lang.Boolean)false, false, (java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b23 + "' != '" + false+ "'", b23.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b25 + "' != '" + true+ "'", b25.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b30);

  }

  @Test
  public void test407() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test407"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b13 = treeset_b11.floor((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b13 + "' != '" + false+ "'", b13.equals(false));

  }

  @Test
  public void test408() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test408"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.lang.Boolean b10 = treeset_b0.higher((java.lang.Boolean)false);
    java.lang.Boolean b12 = treeset_b0.lower((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b13.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Boolean> arraylist_b22 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { false, false };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b22, b_array25);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array27 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array28 = new java.lang.Object[][] {  };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27, obj_array_array28);
    boolean b30 = arraylist_b22.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b31 = treeset_b13.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b32 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);

  }

  @Test
  public void test409() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test409"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b12.stream();
    java.lang.Object[] obj_array21 = new java.lang.Object[] { treeset_b12 };
    java.lang.Object[] obj_array22 = treeset_b0.toArray(obj_array21);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b24 = treeset_b0.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b25 = treeset_b0.parallelStream();
    java.lang.Boolean b27 = treeset_b0.lower((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b28 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array31 = new java.lang.Boolean[] { true, true };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b28, b_array31);
    treeset_b28.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b34 = treeset_b28.spliterator();
    java.util.ArrayList<java.lang.Long> arraylist_long35 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array37 = new java.lang.Long[] { 0L };
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long35, long_array37);
    boolean b39 = treeset_b28.removeAll((java.util.Collection<java.lang.Long>)arraylist_long35);
    java.util.Comparator<java.lang.Object> comparator_obj40 = (Comparator<Object>)treeset_b28.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b41 = treeset_b28.descendingSet();
    boolean b42 = treeset_b0.equals((java.lang.Object)navigableset_b41);
    java.util.SortedSet<java.lang.Boolean> sortedset_b44 = treeset_b0.tailSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b44);

  }

  @Test
  public void test410() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test410"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.util.ArrayList<java.lang.Long> arraylist_long7 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array9 = new java.lang.Long[] { 0L };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long7, long_array9);
    boolean b11 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long7);
    java.util.Comparator<java.lang.Object> comparator_obj12 = (Comparator<Object>)treeset_b0.comparator();
    treeset_b0.clear();
    java.util.Iterator<java.lang.Boolean> iterator_b14 = treeset_b0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b14);

  }

  @Test
  public void test411() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test411"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b8 = treeset_b0.stream();
    java.util.SortedSet<java.lang.Boolean> sortedset_b10 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b10);

  }

  @Test
  public void test412() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test412"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b12 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b14 = treeset_b0.add((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.lang.Boolean b22 = treeset_b15.lower((java.lang.Boolean)true);
    java.lang.Boolean b23 = treeset_b15.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b15.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { true, true };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27, b_array30);
    treeset_b27.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b35 = treeset_b27.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b37 = treeset_b27.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array38 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array39 = new java.lang.Object[][] {  };
    boolean b40 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array38, obj_array_array39);
    boolean b41 = treeset_b27.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array38);
    boolean b42 = treeset_b15.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27);
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array46 = new java.lang.Boolean[] { true, true };
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b43, b_array46);
    treeset_b43.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b51 = treeset_b43.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b53 = treeset_b43.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array54 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array55 = new java.lang.Object[][] {  };
    boolean b56 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array54, obj_array_array55);
    boolean b57 = treeset_b43.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array54);
    boolean b58 = treeset_b27.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array54);
    boolean b59 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27);
    java.util.SortedSet<java.lang.Boolean> sortedset_b62 = treeset_b27.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b62);

  }

  @Test
  public void test413() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test413"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b7 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array10 = new java.lang.Boolean[] { true, true };
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b7, b_array10);
    treeset_b7.clear();
    java.lang.Boolean b14 = treeset_b7.lower((java.lang.Boolean)true);
    java.lang.Boolean b15 = treeset_b7.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b7.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b19 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array22 = new java.lang.Boolean[] { true, true };
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b19, b_array22);
    treeset_b19.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b27 = treeset_b19.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b29 = treeset_b19.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array30 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array31 = new java.lang.Object[][] {  };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array30, obj_array_array31);
    boolean b33 = treeset_b19.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array30);
    boolean b34 = treeset_b7.addAll((java.util.Collection<java.lang.Boolean>)treeset_b19);
    java.lang.Boolean b35 = treeset_b19.first();
    java.lang.Boolean b37 = treeset_b19.higher((java.lang.Boolean)false);
    boolean b38 = treeset_b0.equals((java.lang.Object)treeset_b19);
    java.util.TreeSet<java.lang.Boolean> treeset_b39 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b35 + "' != '" + true+ "'", b35.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b37 + "' != '" + true+ "'", b37.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);

  }

  @Test
  public void test414() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test414"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.stream.Stream<java.lang.Boolean> stream_b1 = treeset_b0.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b2 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b4 = treeset_b0.higher((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b6 = treeset_b0.headSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b6);

  }

  @Test
  public void test415() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test415"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.lang.Boolean b30 = treeset_b12.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    java.lang.Boolean b38 = treeset_b31.lower((java.lang.Boolean)true);
    java.lang.Boolean b39 = treeset_b31.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b42 = treeset_b31.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b42);
    java.util.ArrayList<java.lang.String> arraylist_str44 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array49 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str44, str_array49);
    boolean b51 = treeset_b43.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    boolean b52 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b53 = treeset_b12.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b54 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b12);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b55 = treeset_b12.descendingSet();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b56 = treeset_b12.descendingSet();
    java.util.function.Predicate<java.lang.Object> predicate_obj57 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b58 = navigableset_b56.removeIf(predicate_obj57);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b30 + "' != '" + true+ "'", b30.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b56);

  }

  @Test
  public void test416() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test416"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.util.Iterator<java.lang.Boolean> iterator_b29 = treeset_b12.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true, true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30, b_array33);
    treeset_b30.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b30.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b40 = treeset_b30.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b43 = treeset_b30.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b44 = treeset_b30.iterator();
    boolean b45 = treeset_b12.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30);
    int i46 = treeset_b30.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b47 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array50 = new java.lang.Boolean[] { true, true };
    boolean b51 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b47, b_array50);
    treeset_b47.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b55 = treeset_b47.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b57 = treeset_b47.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b58 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b47);
    java.util.Iterator<java.lang.Boolean> iterator_b59 = treeset_b58.descendingIterator();
    java.lang.Boolean b61 = treeset_b58.lower((java.lang.Boolean)true);
    java.lang.Object[] obj_array62 = treeset_b58.toArray();
    boolean b63 = treeset_b30.equals((java.lang.Object)treeset_b58);
    java.lang.Boolean b64 = treeset_b58.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b64 + "' != '" + true+ "'", b64.equals(true));

  }

  @Test
  public void test417() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test417"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array11 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array12 = new java.lang.Object[][] {  };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11, obj_array_array12);
    boolean b14 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array11);
    java.lang.Boolean b15 = treeset_b0.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b15 + "' != '" + true+ "'", b15.equals(true));

  }

  @Test
  public void test418() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test418"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.lang.String str9 = treeset_b0.toString();
    java.lang.Boolean b11 = treeset_b0.floor((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b12 = treeset_b0.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[]"+ "'", str9.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b12);

  }

  @Test
  public void test419() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test419"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b9 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long10 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array12 = new java.lang.Long[] { 1L };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long10, long_array12);
    boolean b14 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long10);
    java.util.Spliterator<java.lang.Boolean> spliterator_b15 = treeset_b0.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);

  }

  @Test
  public void test420() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test420"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b8 = treeset_b0.stream();
    java.lang.String str9 = treeset_b0.toString();
    java.lang.Boolean b11 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b13 = treeset_b0.higher((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[false]"+ "'", str9.equals("[false]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b11 + "' != '" + false+ "'", b11.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);

  }

  @Test
  public void test421() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test421"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.lang.String str9 = treeset_b0.toString();
    java.util.stream.Stream<java.lang.Boolean> stream_b10 = treeset_b0.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    int i20 = treeset_b12.size();
    java.lang.Boolean b22 = treeset_b12.ceiling((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b23 = treeset_b12.descendingSet();
    // The following exception was thrown during execution in test generation
    try {
    boolean b24 = treeset_b11.contains((java.lang.Object)treeset_b12);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[]"+ "'", str9.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b22 + "' != '" + false+ "'", b22.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b23);

  }

  @Test
  public void test422() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test422"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array19 = new java.lang.Boolean[] { true, true };
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b16, b_array19);
    treeset_b16.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b16.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b26 = treeset_b16.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b16);
    java.util.Iterator<java.lang.Boolean> iterator_b28 = treeset_b27.descendingIterator();
    java.lang.Boolean b30 = treeset_b27.lower((java.lang.Boolean)true);
    java.lang.Object[] obj_array31 = treeset_b27.toArray();
    treeset_b27.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b35 = treeset_b27.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.lang.Boolean b37 = treeset_b27.floor((java.lang.Boolean)false);
    // The following exception was thrown during execution in test generation
    try {
    boolean b38 = treeset_b0.contains((java.lang.Object)b37);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b37);

  }

  @Test
  public void test423() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test423"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b12.tailSet((java.lang.Boolean)false);
    boolean b16 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b17 = treeset_b12.stream();
    java.util.TreeSet<java.lang.Boolean> treeset_b18 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array21 = new java.lang.Boolean[] { true, true };
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18, b_array21);
    treeset_b18.clear();
    java.lang.Boolean b25 = treeset_b18.lower((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b28 = treeset_b18.tailSet((java.lang.Boolean)false, false);
    java.lang.Object obj29 = treeset_b18.clone();
    java.util.SortedSet<java.lang.Boolean> sortedset_b31 = treeset_b18.tailSet((java.lang.Boolean)true);
    boolean b32 = treeset_b12.addAll((java.util.Collection<java.lang.Boolean>)treeset_b18);
    boolean b33 = treeset_b18.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);

  }

  @Test
  public void test424() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test424"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Object[] obj_array14 = treeset_b13.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);

  }

  @Test
  public void test425() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test425"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b17 = treeset_b9.iterator();
    java.lang.Boolean b19 = treeset_b9.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b9);
    java.lang.Boolean b21 = treeset_b20.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b22 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { false, false };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b22, b_array25);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array27 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array28 = new java.lang.Object[][] {  };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27, obj_array_array28);
    boolean b30 = arraylist_b22.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b31 = treeset_b20.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b32 = treeset_b0.equals((java.lang.Object)treeset_b20);
    java.lang.Boolean b33 = treeset_b0.pollFirst();
    java.util.SortedSet<java.lang.Boolean> sortedset_b36 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b36);

  }

  @Test
  public void test426() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test426"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b13 = treeset_b0.first();
    java.lang.Boolean b15 = treeset_b0.higher((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b13 + "' != '" + false+ "'", b13.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);

  }

  @Test
  public void test427() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test427"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    boolean b15 = treeset_b0.equals((java.lang.Object)10.0d);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { false };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b16, b_array18);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b22 = treeset_b16.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b22);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b23.tailSet((java.lang.Boolean)true, false);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23);
    java.lang.String str28 = treeset_b0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[false, true]"+ "'", str28.equals("[false, true]"));

  }

  @Test
  public void test428() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test428"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b0.headSet((java.lang.Boolean)false);
    boolean b15 = treeset_b0.isEmpty();
    java.lang.Object obj16 = treeset_b0.clone();
    boolean b18 = treeset_b0.add((java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b19 = treeset_b0.descendingIterator();
    java.lang.Boolean b20 = treeset_b0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b20 + "' != '" + false+ "'", b20.equals(false));

  }

  @Test
  public void test429() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test429"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.lang.Boolean b14 = treeset_b0.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { false };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array17);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b15.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b22 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b21);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b25 = treeset_b22.tailSet((java.lang.Boolean)true, false);
    boolean b26 = treeset_b0.equals((java.lang.Object)true);
    java.util.Iterator<java.lang.Boolean> iterator_b27 = treeset_b0.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b28 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array31 = new java.lang.Boolean[] { true, true };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b28, b_array31);
    treeset_b28.clear();
    java.lang.Boolean b35 = treeset_b28.lower((java.lang.Boolean)true);
    java.lang.Boolean b36 = treeset_b28.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b39 = treeset_b28.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array43 = new java.lang.Boolean[] { true, true };
    boolean b44 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b40, b_array43);
    treeset_b40.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b48 = treeset_b40.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b50 = treeset_b40.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array51 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array52 = new java.lang.Object[][] {  };
    boolean b53 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array51, obj_array_array52);
    boolean b54 = treeset_b40.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array51);
    boolean b55 = treeset_b28.addAll((java.util.Collection<java.lang.Boolean>)treeset_b40);
    java.lang.Boolean b56 = treeset_b40.first();
    java.lang.Boolean b58 = treeset_b40.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b59 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array62 = new java.lang.Boolean[] { true, true };
    boolean b63 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b59, b_array62);
    treeset_b59.clear();
    java.lang.Boolean b66 = treeset_b59.lower((java.lang.Boolean)true);
    java.lang.Boolean b67 = treeset_b59.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b70 = treeset_b59.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b71 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b70);
    java.util.ArrayList<java.lang.String> arraylist_str72 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array77 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str72, str_array77);
    boolean b79 = treeset_b71.retainAll((java.util.Collection<java.lang.String>)arraylist_str72);
    boolean b80 = treeset_b40.retainAll((java.util.Collection<java.lang.String>)arraylist_str72);
    boolean b81 = treeset_b0.retainAll((java.util.Collection<java.lang.String>)arraylist_str72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b56 + "' != '" + true+ "'", b56.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b58 + "' != '" + true+ "'", b58.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b80 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b81 == true);

  }

  @Test
  public void test430() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test430"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b12.stream();
    java.lang.Object[] obj_array21 = new java.lang.Object[] { treeset_b12 };
    java.lang.Object[] obj_array22 = treeset_b0.toArray(obj_array21);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b23);
    java.util.Iterator<java.lang.Boolean> iterator_b25 = treeset_b24.iterator();
    java.lang.Object[] obj_array26 = treeset_b24.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);

  }

  @Test
  public void test431() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test431"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.lang.Boolean b8 = treeset_b0.pollFirst();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b8 + "' != '" + false+ "'", b8.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);

  }

  @Test
  public void test432() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test432"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    boolean b13 = treeset_b0.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b14 = treeset_b0.stream();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.lang.Boolean b22 = treeset_b15.lower((java.lang.Boolean)true);
    java.lang.Boolean b23 = treeset_b15.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b15.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { true, true };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27, b_array30);
    treeset_b27.clear();
    boolean b34 = treeset_b27.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b35 = treeset_b27.stream();
    java.lang.Object[] obj_array36 = new java.lang.Object[] { treeset_b27 };
    java.lang.Object[] obj_array37 = treeset_b15.toArray(obj_array36);
    java.lang.Object[] obj_array38 = treeset_b0.toArray(obj_array37);
    java.util.TreeSet<java.lang.Boolean> treeset_b39 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b41 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array44 = new java.lang.Boolean[] { true, true };
    boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b41, b_array44);
    treeset_b41.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b47 = treeset_b41.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b50 = treeset_b41.headSet((java.lang.Boolean)false, true);
    boolean b51 = treeset_b40.equals((java.lang.Object)treeset_b41);
    int i52 = treeset_b40.size();
    java.util.SortedSet<java.lang.Boolean> sortedset_b54 = treeset_b40.headSet((java.lang.Boolean)false);
    boolean b55 = treeset_b0.equals((java.lang.Object)sortedset_b54);
    boolean b57 = treeset_b0.add((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b58 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b60 = treeset_b58.tailSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b60);

  }

  @Test
  public void test433() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test433"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    boolean b1 = treeset_b0.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b2 = treeset_b0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b2);

  }

  @Test
  public void test434() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test434"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b13 = treeset_b0.stream();
    java.lang.Boolean b14 = treeset_b0.pollFirst();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.lang.Boolean b22 = treeset_b15.lower((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b15.headSet((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj25 = (Comparator<Object>) treeset_b15.comparator();
    boolean b26 = treeset_b0.equals((java.lang.Object)comparator_obj25);
    java.util.Spliterator<java.lang.Boolean> spliterator_b27 = treeset_b0.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + false+ "'", b14.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b27);

  }

  @Test
  public void test435() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test435"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    boolean b1 = treeset_b0.isEmpty();
    java.lang.String str2 = treeset_b0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "[]"+ "'", str2.equals("[]"));

  }

  @Test
  public void test436() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test436"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b13 = treeset_b0.first();
    java.lang.Boolean b15 = treeset_b0.ceiling((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b13 + "' != '" + false+ "'", b13.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b15 + "' != '" + false+ "'", b15.equals(false));

  }

  @Test
  public void test437() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test437"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array11 = new java.lang.Boolean[] { true, true };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array11);
    treeset_b8.clear();
    java.lang.Boolean b15 = treeset_b8.lower((java.lang.Boolean)true);
    java.lang.Boolean b16 = treeset_b8.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b19 = treeset_b8.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { true, true };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b20, b_array23);
    treeset_b20.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b20.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b30 = treeset_b20.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array31 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array32 = new java.lang.Object[][] {  };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array31, obj_array_array32);
    boolean b34 = treeset_b20.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array31);
    boolean b35 = treeset_b8.addAll((java.util.Collection<java.lang.Boolean>)treeset_b20);
    boolean b36 = treeset_b0.remove((java.lang.Object)b35);
    java.lang.Boolean b38 = treeset_b0.lower((java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b39 = treeset_b0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b39);

  }

  @Test
  public void test438() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test438"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.stream.Stream<java.lang.Boolean> stream_b12 = treeset_b0.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { true, true };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array17);
    treeset_b14.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b20 = treeset_b14.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b23 = treeset_b14.headSet((java.lang.Boolean)false, true);
    boolean b24 = treeset_b13.equals((java.lang.Object)treeset_b14);
    int i25 = treeset_b13.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b26 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array28 = new java.lang.Boolean[] { false };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b26, b_array28);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b32 = treeset_b26.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b33 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b32);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b36 = treeset_b33.tailSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array40 = new java.lang.Boolean[] { true, true };
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37, b_array40);
    treeset_b37.clear();
    java.lang.Boolean b44 = treeset_b37.lower((java.lang.Boolean)true);
    java.lang.Boolean b45 = treeset_b37.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b48 = treeset_b37.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b49 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array52 = new java.lang.Boolean[] { true, true };
    boolean b53 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b49, b_array52);
    treeset_b49.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b57 = treeset_b49.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b59 = treeset_b49.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array60 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array61 = new java.lang.Object[][] {  };
    boolean b62 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array60, obj_array_array61);
    boolean b63 = treeset_b49.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array60);
    boolean b64 = treeset_b37.addAll((java.util.Collection<java.lang.Boolean>)treeset_b49);
    java.lang.Boolean b65 = treeset_b49.first();
    java.lang.Boolean b67 = treeset_b49.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b68 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array71 = new java.lang.Boolean[] { true, true };
    boolean b72 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b68, b_array71);
    treeset_b68.clear();
    java.lang.Boolean b75 = treeset_b68.lower((java.lang.Boolean)true);
    java.lang.Boolean b76 = treeset_b68.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b79 = treeset_b68.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b80 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b79);
    java.util.ArrayList<java.lang.String> arraylist_str81 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array86 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str81, str_array86);
    boolean b88 = treeset_b80.retainAll((java.util.Collection<java.lang.String>)arraylist_str81);
    boolean b89 = treeset_b49.retainAll((java.util.Collection<java.lang.String>)arraylist_str81);
    boolean b90 = treeset_b33.retainAll((java.util.Collection<java.lang.String>)arraylist_str81);
    boolean b91 = treeset_b13.retainAll((java.util.Collection<java.lang.String>)arraylist_str81);
    boolean b92 = treeset_b0.retainAll((java.util.Collection<java.lang.String>)arraylist_str81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b65 + "' != '" + true+ "'", b65.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b67 + "' != '" + true+ "'", b67.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array86);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b87 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b88 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b89 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b90 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b92 == false);

  }

  @Test
  public void test439() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test439"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.stream.Stream<java.lang.Boolean> stream_b1 = treeset_b0.parallelStream();
    java.util.SortedSet<java.lang.Boolean> sortedset_b3 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b4 = treeset_b0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b4);

  }

  @Test
  public void test440() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test440"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b11.headSet((java.lang.Boolean)false, false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b19 = treeset_b11.subSet((java.lang.Boolean)false, false, (java.lang.Boolean)true, false);
    java.lang.Boolean b21 = treeset_b11.floor((java.lang.Boolean)true);
    java.lang.Boolean b22 = treeset_b11.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b21 + "' != '" + true+ "'", b21.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b22 + "' != '" + true+ "'", b22.equals(true));

  }

  @Test
  public void test441() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test441"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.stream.Stream<java.lang.Boolean> stream_b13 = treeset_b0.stream();
    java.lang.Boolean b14 = treeset_b0.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + false+ "'", b14.equals(false));

  }

  @Test
  public void test442() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test442"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.lang.Boolean b12 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.Comparator<java.lang.Object> comparator_obj13 = (Comparator<Object>)treeset_b0.comparator();
    java.util.Spliterator<java.lang.Boolean> spliterator_b14 = treeset_b0.spliterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b15 = treeset_b0.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b15);

  }

  @Test
  public void test443() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test443"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b12 = treeset_b11.last();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b15 = treeset_b11.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { false };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b16, b_array18);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b22 = treeset_b16.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b22);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b23.tailSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { true, true };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27, b_array30);
    treeset_b27.clear();
    java.lang.Boolean b34 = treeset_b27.lower((java.lang.Boolean)true);
    java.lang.Boolean b35 = treeset_b27.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b38 = treeset_b27.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b39 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array42 = new java.lang.Boolean[] { true, true };
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b39, b_array42);
    treeset_b39.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b47 = treeset_b39.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b49 = treeset_b39.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array50 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array51 = new java.lang.Object[][] {  };
    boolean b52 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array50, obj_array_array51);
    boolean b53 = treeset_b39.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array50);
    boolean b54 = treeset_b27.addAll((java.util.Collection<java.lang.Boolean>)treeset_b39);
    java.lang.Boolean b55 = treeset_b39.first();
    java.lang.Boolean b57 = treeset_b39.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b58 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array61 = new java.lang.Boolean[] { true, true };
    boolean b62 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b58, b_array61);
    treeset_b58.clear();
    java.lang.Boolean b65 = treeset_b58.lower((java.lang.Boolean)true);
    java.lang.Boolean b66 = treeset_b58.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b69 = treeset_b58.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b70 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b69);
    java.util.ArrayList<java.lang.String> arraylist_str71 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array76 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str71, str_array76);
    boolean b78 = treeset_b70.retainAll((java.util.Collection<java.lang.String>)arraylist_str71);
    boolean b79 = treeset_b39.retainAll((java.util.Collection<java.lang.String>)arraylist_str71);
    boolean b80 = treeset_b23.retainAll((java.util.Collection<java.lang.String>)arraylist_str71);
    boolean b81 = treeset_b11.retainAll((java.util.Collection<java.lang.String>)arraylist_str71);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b84 = treeset_b11.headSet((java.lang.Boolean)true, true);
    java.util.Comparator<java.lang.Object> comparator_obj85 = (Comparator<Object>)treeset_b11.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + true+ "'", b12.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b55 + "' != '" + true+ "'", b55.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b57 + "' != '" + true+ "'", b57.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b80 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b81 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj85);

  }

  @Test
  public void test444() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test444"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    boolean b14 = treeset_b0.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b17 = treeset_b0.headSet((java.lang.Boolean)true, true);
    java.lang.Boolean b18 = treeset_b0.last();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b0.headSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);

  }

  @Test
  public void test445() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test445"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b14 = treeset_b0.iterator();
    int i15 = treeset_b0.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 1);

  }

  @Test
  public void test446() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test446"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    boolean b15 = treeset_b0.equals((java.lang.Object)10.0d);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { false };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b16, b_array18);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b22 = treeset_b16.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b22);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b23.tailSet((java.lang.Boolean)true, false);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23);
    java.lang.Boolean b28 = treeset_b0.first();
    java.util.TreeSet<java.lang.Boolean> treeset_b29 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array31 = new java.lang.Boolean[] { false };
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b29, b_array31);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b35 = treeset_b29.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b36 = treeset_b29.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b39 = treeset_b29.headSet((java.lang.Boolean)false, false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b42 = treeset_b29.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b43 = treeset_b29.iterator();
    boolean b44 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + false+ "'", b28.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);

  }

  @Test
  public void test447() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test447"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.lang.Boolean b19 = treeset_b12.lower((java.lang.Boolean)true);
    java.lang.Boolean b20 = treeset_b12.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b23 = treeset_b12.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array27 = new java.lang.Boolean[] { true, true };
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24, b_array27);
    treeset_b24.clear();
    boolean b31 = treeset_b24.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b32 = treeset_b24.stream();
    java.lang.Object[] obj_array33 = new java.lang.Object[] { treeset_b24 };
    java.lang.Object[] obj_array34 = treeset_b12.toArray(obj_array33);
    java.util.TreeSet<java.lang.Boolean> treeset_b35 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.util.Iterator<java.lang.Boolean> iterator_b36 = treeset_b12.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b37 = treeset_b12.parallelStream();
      java.util.Comparator<java.lang.Object> comparator_obj38 = (Comparator<Object>)treeset_b12.comparator();
    boolean b39 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    boolean b40 = treeset_b0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);

  }

  @Test
  public void test448() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test448"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.util.SortedSet<java.lang.Boolean> sortedset_b31 = treeset_b12.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b32 = sortedset_b31.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b32);

  }

  @Test
  public void test449() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test449"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b13.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.lang.String str22 = treeset_b13.toString();
    java.util.stream.Stream<java.lang.Boolean> stream_b23 = treeset_b13.parallelStream();
    boolean b24 = treeset_b0.equals((java.lang.Object)stream_b23);
    java.lang.Boolean b26 = treeset_b0.ceiling((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "[]"+ "'", str22.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b26 + "' != '" + true+ "'", b26.equals(true));

  }

  @Test
  public void test450() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test450"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b14 = treeset_b0.iterator();
    int i15 = treeset_b0.size();
    java.lang.String str16 = treeset_b0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "[true]"+ "'", str16.equals("[true]"));

  }

  @Test
  public void test451() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test451"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    boolean b22 = treeset_b15.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b24 = treeset_b15.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b27 = treeset_b15.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b30 = treeset_b15.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    boolean b38 = treeset_b31.add((java.lang.Boolean)false);
    int i39 = treeset_b31.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array43 = new java.lang.Boolean[] { true, true };
    boolean b44 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b40, b_array43);
    treeset_b40.clear();
    java.lang.Boolean b47 = treeset_b40.lower((java.lang.Boolean)true);
    java.lang.Boolean b48 = treeset_b40.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b51 = treeset_b40.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b52 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b51);
    java.util.ArrayList<java.lang.String> arraylist_str53 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array58 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str53, str_array58);
    boolean b60 = treeset_b52.retainAll((java.util.Collection<java.lang.String>)arraylist_str53);
    boolean b61 = treeset_b31.retainAll((java.util.Collection<java.lang.String>)arraylist_str53);
    boolean b62 = treeset_b15.retainAll((java.util.Collection<java.lang.String>)arraylist_str53);
    boolean b63 = treeset_b14.retainAll((java.util.Collection<java.lang.String>)arraylist_str53);
    java.util.function.Consumer<java.lang.Boolean> consumer_b64 = null;
    // The following exception was thrown during execution in test generation
    try {
    treeset_b14.forEach(consumer_b64);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);

  }

  @Test
  public void test452() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test452"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.tailSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);

  }

  @Test
  public void test453() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test453"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b12 = treeset_b11.descendingIterator();
    java.lang.Boolean b14 = treeset_b11.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b15 = treeset_b11.descendingIterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b17 = treeset_b11.headSet((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b18 = treeset_b11.iterator();
    java.util.Spliterator<java.lang.Boolean> spliterator_b19 = treeset_b11.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b19);

  }

  @Test
  public void test454() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test454"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.stream.Stream<java.lang.Boolean> stream_b1 = treeset_b0.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b2 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.Comparator<java.lang.Object> comparator_obj3 = (Comparator<Object>)treeset_b0.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj3);

  }

  @Test
  public void test455() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test455"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, true);
    java.lang.Object obj12 = treeset_b0.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    boolean b20 = treeset_b13.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b22 = treeset_b13.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b25 = treeset_b13.tailSet((java.lang.Boolean)false, true);
    java.util.stream.Stream<java.lang.Boolean> stream_b26 = navigableset_b25.parallelStream();
    // The following exception was thrown during execution in test generation
    try {
    boolean b27 = treeset_b0.remove((java.lang.Object)navigableset_b25);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b26);

  }

  @Test
  public void test456() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test456"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.lang.Object obj12 = treeset_b0.clone();
    treeset_b0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj12);

  }

  @Test
  public void test457() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test457"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.stream.Stream<java.lang.Boolean> stream_b1 = treeset_b0.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b2 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b4 = treeset_b0.higher((java.lang.Boolean)false);
    java.lang.Boolean b6 = treeset_b0.floor((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b6);

  }

  @Test
  public void test458() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test458"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b12 = treeset_b11.last();
    java.lang.Boolean b14 = treeset_b11.ceiling((java.lang.Boolean)true);
    java.util.function.Predicate<java.lang.Object> predicate_obj15 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b16 = treeset_b11.removeIf(predicate_obj15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + true+ "'", b12.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b14 + "' != '" + true+ "'", b14.equals(true));

  }

  @Test
  public void test459() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test459"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.util.Iterator<java.lang.Boolean> iterator_b29 = treeset_b12.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true, true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30, b_array33);
    treeset_b30.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b30.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b40 = treeset_b30.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b43 = treeset_b30.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b44 = treeset_b30.iterator();
    boolean b45 = treeset_b12.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30);
    java.util.Spliterator<java.lang.Boolean> spliterator_b46 = treeset_b30.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b46);

  }

  @Test
  public void test460() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test460"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b12.tailSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>(sortedset_b14);
    java.util.Comparator<java.lang.Object> comparator_obj16 = (Comparator<Object>)treeset_b15.comparator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b21 = treeset_b15.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, false);
    java.lang.Boolean b22 = treeset_b15.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b22 + "' != '" + true+ "'", b22.equals(true));

  }

  @Test
  public void test461() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test461"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b12 = treeset_b11.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b13 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { false, false };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b13, b_array16);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array18 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array19 = new java.lang.Object[][] {  };
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array18, obj_array_array19);
    boolean b21 = arraylist_b13.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array18);
    boolean b22 = treeset_b11.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array18);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { false };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23, b_array25);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b29 = treeset_b23.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b30 = treeset_b23.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b33 = treeset_b23.tailSet((java.lang.Boolean)true, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b36 = treeset_b23.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b37 = treeset_b11.contains((java.lang.Object)true);
    java.lang.Boolean b39 = treeset_b11.floor((java.lang.Boolean)true);
    java.lang.Boolean b40 = treeset_b11.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b40);

  }

  @Test
  public void test462() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test462"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.descendingSet();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b0.subSet((java.lang.Boolean)false, false, (java.lang.Boolean)false, false);
    java.lang.Object obj17 = treeset_b0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj17);

  }

  @Test
  public void test463() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test463"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.lang.Boolean b7 = treeset_b0.last();
    java.lang.Object obj8 = treeset_b0.clone();
    boolean b9 = treeset_b0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b7 + "' != '" + false+ "'", b7.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test464() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test464"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array11 = new java.lang.Boolean[] { true, true };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array11);
    treeset_b8.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b16 = treeset_b8.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b18 = treeset_b8.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b8.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8);
    java.lang.Boolean b23 = treeset_b0.pollFirst();
    java.lang.Boolean b25 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b30 = treeset_b0.subSet((java.lang.Boolean)false, false, (java.lang.Boolean)false, true);
    treeset_b0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b23 + "' != '" + false+ "'", b23.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b25 + "' != '" + true+ "'", b25.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b30);

  }

  @Test
  public void test465() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test465"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b12 = treeset_b0.tailSet((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b13 = treeset_b0.stream();
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array16 = new java.lang.String[] { "" };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array16);
    boolean b18 = treeset_b0.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    treeset_b0.clear();
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b23 = treeset_b20.tailSet((java.lang.Boolean)false, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b23);

  }

  @Test
  public void test466() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test466"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b11);
    java.util.ArrayList<java.lang.String> arraylist_str13 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str13, str_array18);
    boolean b20 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str13);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { true, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    treeset_b21.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b29 = treeset_b21.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b31 = treeset_b21.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array32 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array33 = new java.lang.Object[][] {  };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32, obj_array_array33);
    boolean b35 = treeset_b21.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array32);
    boolean b36 = treeset_b12.equals((java.lang.Object)treeset_b21);
    java.util.TreeSet<java.lang.Boolean> treeset_b37 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array39 = new java.lang.Boolean[] { false };
    boolean b40 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b37, b_array39);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b43 = treeset_b37.headSet((java.lang.Boolean)false, true);
    java.util.stream.Stream<java.lang.Boolean> stream_b44 = treeset_b37.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b45 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b37);
    boolean b46 = treeset_b21.equals((java.lang.Object)treeset_b45);
    java.util.SortedSet<java.lang.Boolean> sortedset_b48 = treeset_b45.tailSet((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b48);

  }

  @Test
  public void test467() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test467"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b10 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.Comparator<java.lang.Object> comparator_obj11 = (Comparator<Object>)treeset_b10.comparator();
    java.lang.Boolean b12 = treeset_b10.pollFirst();
    java.lang.Object[] obj_array13 = treeset_b10.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);

  }

  @Test
  public void test468() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test468"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    boolean b15 = treeset_b0.equals((java.lang.Object)10.0d);
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { false };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b16, b_array18);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b22 = treeset_b16.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b22);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b23.tailSet((java.lang.Boolean)true, false);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b23);
    java.lang.Boolean b28 = treeset_b0.first();
    java.lang.Boolean b30 = treeset_b0.floor((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + false+ "'", b28.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b30 + "' != '" + true+ "'", b30.equals(true));

  }

  @Test
  public void test469() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test469"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b17 = treeset_b0.headSet((java.lang.Boolean)true);
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.Boolean> navigableset_b22 = treeset_b0.subSet((java.lang.Boolean)true, true, (java.lang.Boolean)false, false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.IllegalArgumentException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b17);

  }

  @Test
  public void test470() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test470"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b12 = treeset_b11.last();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b15 = treeset_b11.headSet((java.lang.Boolean)false, true);
    java.lang.Boolean b16 = treeset_b11.pollLast();
    java.util.SortedSet<java.lang.Boolean> sortedset_b18 = treeset_b11.headSet((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + true+ "'", b12.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b16 + "' != '" + true+ "'", b16.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b18);

  }

  @Test
  public void test471() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test471"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    int i8 = treeset_b0.size();
    java.lang.Boolean b10 = treeset_b0.ceiling((java.lang.Boolean)false);
    boolean b11 = treeset_b0.isEmpty();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b16 = treeset_b0.subSet((java.lang.Boolean)true, false, (java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b17 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b10 + "' != '" + false+ "'", b10.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b16);

  }

  @Test
  public void test472() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test472"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.lang.Boolean b30 = treeset_b12.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    java.lang.Boolean b38 = treeset_b31.lower((java.lang.Boolean)true);
    java.lang.Boolean b39 = treeset_b31.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b42 = treeset_b31.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b42);
    java.util.ArrayList<java.lang.String> arraylist_str44 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array49 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str44, str_array49);
    boolean b51 = treeset_b43.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    boolean b52 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b53 = treeset_b12.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b54 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b12);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b55 = treeset_b12.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b56 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b12);
    java.util.Comparator<java.lang.Object> comparator_obj57 = (Comparator<Object>)treeset_b12.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b30 + "' != '" + true+ "'", b30.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj57);

  }

  @Test
  public void test473() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test473"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b17 = treeset_b9.iterator();
    java.lang.Boolean b19 = treeset_b9.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b9);
    java.lang.Boolean b21 = treeset_b20.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b22 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { false, false };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b22, b_array25);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array27 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array28 = new java.lang.Object[][] {  };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27, obj_array_array28);
    boolean b30 = arraylist_b22.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b31 = treeset_b20.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b32 = treeset_b0.equals((java.lang.Object)treeset_b20);
    treeset_b0.clear();
    java.util.Iterator<java.lang.Boolean> iterator_b34 = treeset_b0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b34);

  }

  @Test
  public void test474() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test474"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.lang.Boolean b30 = treeset_b12.higher((java.lang.Boolean)false);
    java.lang.Boolean b31 = treeset_b12.last();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b34 = treeset_b12.headSet((java.lang.Boolean)true, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b30 + "' != '" + true+ "'", b30.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b31 + "' != '" + true+ "'", b31.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b34);

  }

  @Test
  public void test475() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test475"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array4 = new java.lang.Boolean[] { true, true };
    boolean b5 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b1, b_array4);
    treeset_b1.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b7 = treeset_b1.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b1.headSet((java.lang.Boolean)false, true);
    boolean b11 = treeset_b0.equals((java.lang.Object)treeset_b1);
    boolean b12 = treeset_b1.isEmpty();
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b1.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);

  }

  @Test
  public void test476() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test476"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.util.ArrayList<java.lang.Long> arraylist_long7 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array9 = new java.lang.Long[] { 0L };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long7, long_array9);
    boolean b11 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long7);
    java.util.Iterator<java.lang.Boolean> iterator_b12 = treeset_b0.descendingIterator();
    java.lang.Boolean b13 = treeset_b0.pollFirst();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b14 = treeset_b0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b13);

  }

  @Test
  public void test477() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test477"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b15 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.lang.Boolean b20 = treeset_b0.floor((java.lang.Boolean)false);
    java.lang.Boolean b22 = treeset_b0.lower((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b20 + "' != '" + false+ "'", b20.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b22 + "' != '" + false+ "'", b22.equals(false));

  }

  @Test
  public void test478() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test478"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b13 = treeset_b0.iterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { false };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array16);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b20 = treeset_b14.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b21 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array24 = new java.lang.Boolean[] { true, true };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b21, b_array24);
    treeset_b21.clear();
    java.lang.Boolean b28 = treeset_b21.lower((java.lang.Boolean)true);
    java.lang.Boolean b29 = treeset_b21.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b32 = treeset_b21.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b33 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array36 = new java.lang.Boolean[] { true, true };
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b33, b_array36);
    treeset_b33.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b41 = treeset_b33.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b43 = treeset_b33.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array44 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array45 = new java.lang.Object[][] {  };
    boolean b46 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array44, obj_array_array45);
    boolean b47 = treeset_b33.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array44);
    boolean b48 = treeset_b21.addAll((java.util.Collection<java.lang.Boolean>)treeset_b33);
    java.lang.Boolean b49 = treeset_b33.first();
    java.lang.Boolean b51 = treeset_b33.higher((java.lang.Boolean)false);
    boolean b52 = treeset_b14.equals((java.lang.Object)treeset_b33);
    java.util.TreeSet<java.lang.Boolean> treeset_b53 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array56 = new java.lang.Boolean[] { true, true };
    boolean b57 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b53, b_array56);
    treeset_b53.clear();
    java.lang.Boolean b60 = treeset_b53.lower((java.lang.Boolean)true);
    java.lang.Boolean b61 = treeset_b53.pollLast();
    java.util.TreeSet<java.lang.Boolean> treeset_b62 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array65 = new java.lang.Boolean[] { true, true };
    boolean b66 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b62, b_array65);
    treeset_b62.clear();
    java.lang.Boolean b69 = treeset_b62.lower((java.lang.Boolean)true);
    boolean b70 = treeset_b53.addAll((java.util.Collection<java.lang.Boolean>)treeset_b62);
    java.util.TreeSet<java.lang.Boolean> treeset_b71 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array74 = new java.lang.Boolean[] { true, true };
    boolean b75 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b71, b_array74);
    treeset_b71.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b77 = treeset_b71.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b80 = treeset_b71.headSet((java.lang.Boolean)false, true);
    java.util.ArrayList<java.lang.Long> arraylist_long81 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array83 = new java.lang.Long[] { 1L };
    boolean b84 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long81, long_array83);
    boolean b85 = treeset_b71.removeAll((java.util.Collection<java.lang.Long>)arraylist_long81);
    boolean b86 = treeset_b53.removeAll((java.util.Collection<java.lang.Long>)arraylist_long81);
    boolean b87 = treeset_b33.removeAll((java.util.Collection<java.lang.Long>)arraylist_long81);
    boolean b88 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long81);
    boolean b90 = treeset_b0.add((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b49 + "' != '" + true+ "'", b49.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b51 + "' != '" + true+ "'", b51.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b84 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b86 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b87 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b88 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b90 == true);

  }

  @Test
  public void test479() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test479"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array4 = new java.lang.Boolean[] { true, true };
    boolean b5 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b1, b_array4);
    treeset_b1.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b7 = treeset_b1.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b1.headSet((java.lang.Boolean)false, true);
    boolean b11 = treeset_b0.equals((java.lang.Object)treeset_b1);
    int i12 = treeset_b0.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b21 = treeset_b13.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b23 = treeset_b13.add((java.lang.Boolean)true);
    boolean b25 = treeset_b13.add((java.lang.Boolean)true);
    boolean b27 = treeset_b13.add((java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b30 = treeset_b13.headSet((java.lang.Boolean)true, true);
    boolean b31 = treeset_b0.equals((java.lang.Object)navigableset_b30);
    java.lang.String str32 = treeset_b0.toString();
    java.util.function.Consumer<java.lang.Boolean> consumer_b33 = null;
    // The following exception was thrown during execution in test generation
    try {
    treeset_b0.forEach(consumer_b33);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "[]"+ "'", str32.equals("[]"));

  }

  @Test
  public void test480() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test480"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    boolean b12 = treeset_b0.add((java.lang.Boolean)true);
    boolean b14 = treeset_b0.add((java.lang.Boolean)true);
    java.lang.Object obj15 = treeset_b0.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b16 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.lang.Boolean b17 = treeset_b16.last();
    java.lang.Boolean b18 = treeset_b16.last();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b17 + "' != '" + true+ "'", b17.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b18 + "' != '" + true+ "'", b18.equals(true));

  }

  @Test
  public void test481() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test481"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.util.Iterator<java.lang.Boolean> iterator_b29 = treeset_b12.descendingIterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true, true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30, b_array33);
    treeset_b30.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b30.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b40 = treeset_b30.add((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b43 = treeset_b30.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    java.util.Iterator<java.lang.Boolean> iterator_b44 = treeset_b30.iterator();
    boolean b45 = treeset_b12.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30);
    int i46 = treeset_b30.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b47 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array50 = new java.lang.Boolean[] { true, true };
    boolean b51 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b47, b_array50);
    treeset_b47.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b55 = treeset_b47.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b57 = treeset_b47.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b58 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b47);
    java.util.Iterator<java.lang.Boolean> iterator_b59 = treeset_b58.descendingIterator();
    java.lang.Boolean b61 = treeset_b58.lower((java.lang.Boolean)true);
    java.lang.Object[] obj_array62 = treeset_b58.toArray();
    boolean b63 = treeset_b30.equals((java.lang.Object)treeset_b58);
    java.util.TreeSet<java.lang.Boolean> treeset_b64 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array67 = new java.lang.Boolean[] { true, true };
    boolean b68 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b64, b_array67);
    treeset_b64.clear();
    boolean b71 = treeset_b64.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b73 = treeset_b64.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b76 = treeset_b64.tailSet((java.lang.Boolean)false, true);
    java.lang.Boolean b78 = treeset_b64.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b79 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array81 = new java.lang.Boolean[] { false };
    boolean b82 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b79, b_array81);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b85 = treeset_b79.headSet((java.lang.Boolean)false, true);
    java.util.TreeSet<java.lang.Boolean> treeset_b86 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)navigableset_b85);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b89 = treeset_b86.tailSet((java.lang.Boolean)true, false);
    boolean b90 = treeset_b64.equals((java.lang.Object)true);
    boolean b91 = treeset_b30.equals((java.lang.Object)treeset_b64);
    java.util.SortedSet<java.lang.Boolean> sortedset_b94 = treeset_b64.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b82 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b89);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b94);

  }

  @Test
  public void test482() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test482"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b12.stream();
    java.lang.Object[] obj_array21 = new java.lang.Object[] { treeset_b12 };
    java.lang.Object[] obj_array22 = treeset_b0.toArray(obj_array21);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b24 = treeset_b0.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b25 = treeset_b0.parallelStream();
    java.lang.Boolean b27 = treeset_b0.lower((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b32 = treeset_b0.subSet((java.lang.Boolean)true, true, (java.lang.Boolean)true, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b32);

  }

  @Test
  public void test483() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test483"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b14);
    int i16 = treeset_b15.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 1);

  }

  @Test
  public void test484() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test484"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b12.stream();
    java.lang.Object[] obj_array21 = new java.lang.Object[] { treeset_b12 };
    java.lang.Object[] obj_array22 = treeset_b0.toArray(obj_array21);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b24 = treeset_b0.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b25 = treeset_b0.parallelStream();
    boolean b26 = treeset_b0.isEmpty();
    java.lang.Boolean b28 = treeset_b0.ceiling((java.lang.Boolean)false);
    int i29 = treeset_b0.size();
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array33 = new java.lang.Boolean[] { true, true };
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b30, b_array33);
    treeset_b30.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b30.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.lang.String str39 = treeset_b30.toString();
    java.util.stream.Stream<java.lang.Boolean> stream_b40 = treeset_b30.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b41 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array44 = new java.lang.Boolean[] { true, true };
    boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b41, b_array44);
    treeset_b41.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b49 = treeset_b41.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Boolean> arraylist_b50 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array53 = new java.lang.Boolean[] { false, false };
    boolean b54 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b50, b_array53);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array55 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array56 = new java.lang.Object[][] {  };
    boolean b57 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array55, obj_array_array56);
    boolean b58 = arraylist_b50.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array55);
    boolean b59 = treeset_b41.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array55);
    boolean b60 = treeset_b30.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array55);
    boolean b61 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[]"+ "'", str39.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);

  }

  @Test
  public void test485() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test485"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b8 = treeset_b0.iterator();
    java.util.SortedSet<java.lang.Boolean> sortedset_b11 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.lang.Boolean b19 = treeset_b12.lower((java.lang.Boolean)true);
    java.lang.Boolean b20 = treeset_b12.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b23 = treeset_b12.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b24 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array27 = new java.lang.Boolean[] { true, true };
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b24, b_array27);
    treeset_b24.clear();
    boolean b31 = treeset_b24.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b32 = treeset_b24.stream();
    java.lang.Object[] obj_array33 = new java.lang.Object[] { treeset_b24 };
    java.lang.Object[] obj_array34 = treeset_b12.toArray(obj_array33);
    java.util.TreeSet<java.lang.Boolean> treeset_b35 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.util.Iterator<java.lang.Boolean> iterator_b36 = treeset_b12.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b37 = treeset_b12.parallelStream();
      java.util.Comparator<java.lang.Object> comparator_obj38 = (Comparator<Object>)treeset_b12.comparator();
    boolean b39 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b41 = treeset_b12.higher((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b41);

  }

  @Test
  public void test486() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test486"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b18 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)false, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b18);

  }

  @Test
  public void test487() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test487"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.Iterator<java.lang.Boolean> iterator_b7 = treeset_b0.iterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b0.tailSet((java.lang.Boolean)true, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b13 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.Spliterator<java.lang.Boolean> spliterator_b14 = treeset_b0.spliterator();
    java.lang.String str15 = treeset_b0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "[false]"+ "'", str15.equals("[false]"));

  }

  @Test
  public void test488() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test488"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    boolean b13 = treeset_b0.add((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b14 = treeset_b0.stream();
    java.util.TreeSet<java.lang.Boolean> treeset_b15 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array18 = new java.lang.Boolean[] { true, true };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b15, b_array18);
    treeset_b15.clear();
    java.lang.Boolean b22 = treeset_b15.lower((java.lang.Boolean)true);
    java.lang.Boolean b23 = treeset_b15.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b26 = treeset_b15.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b27 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array30 = new java.lang.Boolean[] { true, true };
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b27, b_array30);
    treeset_b27.clear();
    boolean b34 = treeset_b27.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b35 = treeset_b27.stream();
    java.lang.Object[] obj_array36 = new java.lang.Object[] { treeset_b27 };
    java.lang.Object[] obj_array37 = treeset_b15.toArray(obj_array36);
    java.lang.Object[] obj_array38 = treeset_b0.toArray(obj_array37);
    java.util.TreeSet<java.lang.Boolean> treeset_b39 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b40 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b41 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array44 = new java.lang.Boolean[] { true, true };
    boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b41, b_array44);
    treeset_b41.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b47 = treeset_b41.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b50 = treeset_b41.headSet((java.lang.Boolean)false, true);
    boolean b51 = treeset_b40.equals((java.lang.Object)treeset_b41);
    int i52 = treeset_b40.size();
    java.util.SortedSet<java.lang.Boolean> sortedset_b54 = treeset_b40.headSet((java.lang.Boolean)false);
    boolean b55 = treeset_b0.equals((java.lang.Object)sortedset_b54);
    boolean b57 = treeset_b0.add((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b58 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.SortedSet<java.lang.Boolean> sortedset_b61 = treeset_b0.subSet((java.lang.Boolean)false, (java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b61);

  }

  @Test
  public void test489() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test489"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.util.TreeSet<java.lang.Boolean> treeset_b1 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array4 = new java.lang.Boolean[] { true, true };
    boolean b5 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b1, b_array4);
    treeset_b1.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b7 = treeset_b1.spliterator();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b10 = treeset_b1.headSet((java.lang.Boolean)false, true);
    boolean b11 = treeset_b0.equals((java.lang.Object)treeset_b1);
    java.util.stream.Stream<java.lang.Boolean> stream_b12 = treeset_b1.stream();
    treeset_b1.clear();
    java.util.Iterator<java.lang.Boolean> iterator_b14 = treeset_b1.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b15 = treeset_b1.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b15);

  }

  @Test
  public void test490() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test490"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b13 = treeset_b0.iterator();
    java.util.TreeSet<java.lang.Boolean> treeset_b14 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array17 = new java.lang.Boolean[] { true, true };
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b14, b_array17);
    treeset_b14.clear();
    boolean b21 = treeset_b14.add((java.lang.Boolean)false);
    int i22 = treeset_b14.size();
    java.lang.Boolean b24 = treeset_b14.ceiling((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b26 = treeset_b14.tailSet((java.lang.Boolean)true);
    java.util.stream.Stream<java.lang.Boolean> stream_b27 = treeset_b14.stream();
    java.lang.Boolean b28 = treeset_b14.pollLast();
    boolean b29 = treeset_b0.equals((java.lang.Object)treeset_b14);
    java.util.TreeSet<java.lang.Boolean> treeset_b30 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b24 + "' != '" + false+ "'", b24.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + false+ "'", b28.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);

  }

  @Test
  public void test491() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test491"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.SortedSet<java.lang.Boolean> sortedset_b9 = treeset_b0.headSet((java.lang.Boolean)false);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b12 = treeset_b0.tailSet((java.lang.Boolean)false, true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b14 = treeset_b0.headSet((java.lang.Boolean)false);
    java.lang.String str15 = treeset_b0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "[false]"+ "'", str15.equals("[false]"));

  }

  @Test
  public void test492() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test492"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    boolean b7 = treeset_b0.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b8 = treeset_b0.stream();
    java.lang.String str9 = treeset_b0.toString();
    java.util.Comparator<java.lang.Object> comparator_obj10 = (Comparator<Object>)treeset_b0.comparator();
    java.util.stream.Stream<java.lang.Boolean> stream_b11 = treeset_b0.stream();
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[false]"+ "'", str9.equals("[false]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b11);

  }

  @Test
  public void test493() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test493"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array2 = new java.lang.Boolean[] { false };
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array2);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b6 = treeset_b0.headSet((java.lang.Boolean)false, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.lang.Boolean b12 = treeset_b0.pollFirst();
    java.util.TreeSet<java.lang.Boolean> treeset_b13 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array16 = new java.lang.Boolean[] { true, true };
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b13, b_array16);
    treeset_b13.clear();
    java.lang.Boolean b20 = treeset_b13.lower((java.lang.Boolean)true);
    java.lang.Boolean b21 = treeset_b13.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b24 = treeset_b13.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b25 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array28 = new java.lang.Boolean[] { true, true };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25, b_array28);
    treeset_b25.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b33 = treeset_b25.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b35 = treeset_b25.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array36 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array37 = new java.lang.Object[][] {  };
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array36, obj_array_array37);
    boolean b39 = treeset_b25.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array36);
    boolean b40 = treeset_b13.addAll((java.util.Collection<java.lang.Boolean>)treeset_b25);
    java.util.TreeSet<java.lang.Boolean> treeset_b41 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array44 = new java.lang.Boolean[] { true, true };
    boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b41, b_array44);
    treeset_b41.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b49 = treeset_b41.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b51 = treeset_b41.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array52 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array53 = new java.lang.Object[][] {  };
    boolean b54 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array52, obj_array_array53);
    boolean b55 = treeset_b41.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array52);
    boolean b56 = treeset_b25.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array52);
    boolean b58 = treeset_b25.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b59 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array61 = new java.lang.Boolean[] { false };
    boolean b62 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b59, b_array61);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b65 = treeset_b59.headSet((java.lang.Boolean)false, true);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b70 = treeset_b59.subSet((java.lang.Boolean)false, true, (java.lang.Boolean)true, false);
    java.lang.Object obj71 = treeset_b59.clone();
    java.util.TreeSet<java.lang.Boolean> treeset_b72 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array75 = new java.lang.Boolean[] { true, true };
    boolean b76 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b72, b_array75);
    treeset_b72.clear();
    java.lang.Boolean b79 = treeset_b72.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b80 = treeset_b72.iterator();
    java.lang.Boolean b82 = treeset_b72.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b83 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b72);
    java.lang.Boolean b84 = treeset_b83.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b85 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array88 = new java.lang.Boolean[] { false, false };
    boolean b89 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b85, b_array88);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array90 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array91 = new java.lang.Object[][] {  };
    boolean b92 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array90, obj_array_array91);
    boolean b93 = arraylist_b85.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array90);
    boolean b94 = treeset_b83.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array90);
    boolean b95 = treeset_b59.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array90);
    boolean b96 = treeset_b25.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array90);
    boolean b97 = treeset_b0.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array90);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b12 + "' != '" + false+ "'", b12.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array88);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b89 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array91);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b92 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b93 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b94 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b95 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b96 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b97 == true);

  }

  @Test
  public void test494() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test494"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    boolean b19 = treeset_b12.add((java.lang.Boolean)false);
    java.util.stream.Stream<java.lang.Boolean> stream_b20 = treeset_b12.stream();
    java.lang.Object[] obj_array21 = new java.lang.Object[] { treeset_b12 };
    java.lang.Object[] obj_array22 = treeset_b0.toArray(obj_array21);
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)treeset_b0);
    java.util.Iterator<java.lang.Boolean> iterator_b24 = treeset_b0.iterator();
    java.util.stream.Stream<java.lang.Boolean> stream_b25 = treeset_b0.parallelStream();
    java.util.Comparator<java.lang.Object> comparator_obj26 = (Comparator<Object>)treeset_b0.comparator();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Boolean b27 = treeset_b0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj26);

  }

  @Test
  public void test495() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test495"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b10 = treeset_b0.add((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b11 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b0);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b14 = treeset_b11.headSet((java.lang.Boolean)false, false);
    java.util.Comparator<java.lang.Object> comparator_obj15 = (Comparator<Object>)treeset_b11.comparator();
    java.util.Spliterator<java.lang.Boolean> spliterator_b16 = treeset_b11.spliterator();
    java.util.Iterator<java.lang.Boolean> iterator_b17 = treeset_b11.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b17);

  }

  @Test
  public void test496() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test496"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b8 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array11 = new java.lang.Boolean[] { true, true };
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b8, b_array11);
    treeset_b8.clear();
    java.lang.Boolean b15 = treeset_b8.lower((java.lang.Boolean)true);
    java.lang.Boolean b16 = treeset_b8.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b19 = treeset_b8.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array23 = new java.lang.Boolean[] { true, true };
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b20, b_array23);
    treeset_b20.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b28 = treeset_b20.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b30 = treeset_b20.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array31 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array32 = new java.lang.Object[][] {  };
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array31, obj_array_array32);
    boolean b34 = treeset_b20.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array31);
    boolean b35 = treeset_b8.addAll((java.util.Collection<java.lang.Boolean>)treeset_b20);
    boolean b36 = treeset_b0.remove((java.lang.Object)b35);
    java.util.SortedSet<java.lang.Boolean> sortedset_b38 = treeset_b0.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b40 = treeset_b0.floor((java.lang.Boolean)false);
    java.lang.Boolean b41 = treeset_b0.pollFirst();
    java.util.TreeSet<java.lang.Boolean> treeset_b42 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array45 = new java.lang.Boolean[] { true, true };
    boolean b46 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b42, b_array45);
    treeset_b42.clear();
    java.lang.Boolean b49 = treeset_b42.lower((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b50 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array53 = new java.lang.Boolean[] { true, true };
    boolean b54 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b50, b_array53);
    treeset_b50.clear();
    java.lang.Boolean b57 = treeset_b50.lower((java.lang.Boolean)true);
    java.lang.Boolean b58 = treeset_b50.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b61 = treeset_b50.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b62 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array65 = new java.lang.Boolean[] { true, true };
    boolean b66 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b62, b_array65);
    treeset_b62.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b70 = treeset_b62.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b72 = treeset_b62.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array73 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array74 = new java.lang.Object[][] {  };
    boolean b75 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array73, obj_array_array74);
    boolean b76 = treeset_b62.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array73);
    boolean b77 = treeset_b50.addAll((java.util.Collection<java.lang.Boolean>)treeset_b62);
    boolean b78 = treeset_b42.remove((java.lang.Object)b77);
    java.util.SortedSet<java.lang.Boolean> sortedset_b80 = treeset_b42.tailSet((java.lang.Boolean)false);
    java.lang.Boolean b82 = treeset_b42.floor((java.lang.Boolean)false);
    java.lang.Boolean b83 = treeset_b42.pollFirst();
    java.lang.Boolean b84 = treeset_b42.pollLast();
    boolean b85 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == false);

  }

  @Test
  public void test497() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test497"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array15 = new java.lang.Boolean[] { true, true };
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12, b_array15);
    treeset_b12.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b20 = treeset_b12.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    boolean b22 = treeset_b12.add((java.lang.Boolean)true);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array23 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array24 = new java.lang.Object[][] {  };
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23, obj_array_array24);
    boolean b26 = treeset_b12.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array23);
    boolean b27 = treeset_b0.addAll((java.util.Collection<java.lang.Boolean>)treeset_b12);
    java.lang.Boolean b28 = treeset_b12.first();
    java.lang.Boolean b30 = treeset_b12.higher((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b31 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array34 = new java.lang.Boolean[] { true, true };
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b31, b_array34);
    treeset_b31.clear();
    java.lang.Boolean b38 = treeset_b31.lower((java.lang.Boolean)true);
    java.lang.Boolean b39 = treeset_b31.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b42 = treeset_b31.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b43 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b42);
    java.util.ArrayList<java.lang.String> arraylist_str44 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array49 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str44, str_array49);
    boolean b51 = treeset_b43.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    boolean b52 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b53 = treeset_b12.descendingSet();
    java.util.TreeSet<java.lang.Boolean> treeset_b54 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b12);
    java.util.stream.Stream<java.lang.Boolean> stream_b55 = treeset_b12.parallelStream();
    java.util.stream.Stream<java.lang.Boolean> stream_b56 = treeset_b12.parallelStream();
    java.util.TreeSet<java.lang.Boolean> treeset_b57 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array60 = new java.lang.Boolean[] { true, true };
    boolean b61 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b57, b_array60);
    treeset_b57.clear();
    java.lang.Boolean b64 = treeset_b57.lower((java.lang.Boolean)true);
    java.util.SortedSet<java.lang.Boolean> sortedset_b66 = treeset_b57.headSet((java.lang.Boolean)false);
    java.util.TreeSet<java.lang.Boolean> treeset_b67 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array70 = new java.lang.Boolean[] { true, true };
    boolean b71 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b67, b_array70);
    treeset_b67.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b73 = treeset_b67.spliterator();
    java.util.ArrayList<java.lang.Long> arraylist_long74 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array76 = new java.lang.Long[] { 0L };
    boolean b77 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long74, long_array76);
    boolean b78 = treeset_b67.removeAll((java.util.Collection<java.lang.Long>)arraylist_long74);
    boolean b79 = treeset_b57.removeAll((java.util.Collection<java.lang.Long>)arraylist_long74);
    boolean b80 = treeset_b12.removeAll((java.util.Collection<java.lang.Long>)arraylist_long74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b28 + "' != '" + true+ "'", b28.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + b30 + "' != '" + true+ "'", b30.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_b56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b80 == false);

  }

  @Test
  public void test498() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test498"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.SortedSet<java.lang.Boolean> sortedset_b8 = treeset_b0.subSet((java.lang.Boolean)true, (java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b9 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array12 = new java.lang.Boolean[] { true, true };
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b9, b_array12);
    treeset_b9.clear();
    java.lang.Boolean b16 = treeset_b9.lower((java.lang.Boolean)true);
    java.util.Iterator<java.lang.Boolean> iterator_b17 = treeset_b9.iterator();
    java.lang.Boolean b19 = treeset_b9.ceiling((java.lang.Boolean)true);
    java.util.TreeSet<java.lang.Boolean> treeset_b20 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b9);
    java.lang.Boolean b21 = treeset_b20.pollFirst();
    java.util.ArrayList<java.lang.Boolean> arraylist_b22 = new java.util.ArrayList<java.lang.Boolean>();
    java.lang.Boolean[] b_array25 = new java.lang.Boolean[] { false, false };
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)arraylist_b22, b_array25);
    java.util.ArrayList<java.lang.Object[]> arraylist_obj_array27 = new java.util.ArrayList<java.lang.Object[]>();
    java.lang.Object[][] obj_array_array28 = new java.lang.Object[][] {  };
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27, obj_array_array28);
    boolean b30 = arraylist_b22.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b31 = treeset_b20.containsAll((java.util.Collection<java.lang.Object[]>)arraylist_obj_array27);
    boolean b32 = treeset_b0.equals((java.lang.Object)treeset_b20);
    java.util.NavigableSet<java.lang.Boolean> navigableset_b33 = treeset_b20.descendingSet();
    java.lang.Boolean b35 = treeset_b20.lower((java.lang.Boolean)false);
    boolean b36 = treeset_b20.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);

  }

  @Test
  public void test499() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test499"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.util.Spliterator<java.lang.Boolean> spliterator_b6 = treeset_b0.spliterator();
    java.util.ArrayList<java.lang.Long> arraylist_long7 = new java.util.ArrayList<java.lang.Long>();
    java.lang.Long[] long_array9 = new java.lang.Long[] { 0L };
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>)arraylist_long7, long_array9);
    boolean b11 = treeset_b0.removeAll((java.util.Collection<java.lang.Long>)arraylist_long7);
    java.util.Iterator<java.lang.Boolean> iterator_b12 = treeset_b0.descendingIterator();
    java.util.Spliterator<java.lang.Boolean> spliterator_b13 = treeset_b0.spliterator();
    java.lang.String str14 = treeset_b0.toString();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b15 = treeset_b0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(long_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "[]"+ "'", str14.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b15);

  }

  @Test
  public void test500() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test500"); }


    java.util.TreeSet<java.lang.Boolean> treeset_b0 = new java.util.TreeSet<java.lang.Boolean>();
    java.lang.Boolean[] b_array3 = new java.lang.Boolean[] { true, true };
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>)treeset_b0, b_array3);
    treeset_b0.clear();
    java.lang.Boolean b7 = treeset_b0.lower((java.lang.Boolean)true);
    java.lang.Boolean b8 = treeset_b0.pollLast();
    java.util.NavigableSet<java.lang.Boolean> navigableset_b11 = treeset_b0.headSet((java.lang.Boolean)true, false);
    java.util.TreeSet<java.lang.Boolean> treeset_b12 = new java.util.TreeSet<java.lang.Boolean>((java.util.Collection<java.lang.Boolean>)navigableset_b11);
    java.util.ArrayList<java.lang.String> arraylist_str13 = new java.util.ArrayList<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "[false]", "", "[false]", "[]" };
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str13, str_array18);
    boolean b20 = treeset_b12.retainAll((java.util.Collection<java.lang.String>)arraylist_str13);
    java.util.Iterator<java.lang.Boolean> iterator_b21 = treeset_b12.descendingIterator();
    boolean b22 = treeset_b12.isEmpty();
    java.util.TreeSet<java.lang.Boolean> treeset_b23 = new java.util.TreeSet<java.lang.Boolean>((java.util.SortedSet<java.lang.Boolean>)treeset_b12);
    java.util.Spliterator<java.lang.Boolean> spliterator_b24 = treeset_b23.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(b_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(b8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_b11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_b21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_b24);

  }

}
