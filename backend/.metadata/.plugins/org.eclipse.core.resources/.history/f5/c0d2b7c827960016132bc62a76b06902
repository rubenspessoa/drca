package server;

import java.util.concurrent.atomic.AtomicLong;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import net.minidev.json.parser.JSONParser;

@RestController
public class Server {
	private final String idKey = "id"; 

    @RequestMapping("/greeting")
    public String greeting(@RequestParam(value="name", defaultValue="World") String name) {
    	return "hello";
    }
    
    @RequestMapping("/fetchStudents")
    public String fetchStudents() {
    	try {
    		return CloudQuery.callCloudCodeFunction("fetchStudents", "");
    	}
    	catch(Exception e) {
    		return e.toString();
    	}
    }
    
    @RequestMapping("/fetchClassesForStudentWithId")
    public String fetchClassesForStudentWithId(@RequestParam(value=idKey) String id) {
    	try {
    		return CloudQuery.callCloudCodeFunction("fetchClassesForStudentWithId", "{\"" + idKey + "\": \"" + id + "\"}");
    	}
    	catch(Exception e) {
    		return e.toString();
    	}
    }
    
    @RequestMapping("/fetchClassesForDepartmentWithId")
    public String fetchClassesForDepartmentWithId(@RequestParam(value=idKey) String id) {
    	try {
    		return CloudQuery.callCloudCodeFunction("fetchClassesForDepartmentWithId", "{\"" + idKey + "\": \"" + id + "\"}");
    	}
    	catch(Exception e) {
    		return e.toString();
    	}
    }
    
    @RequestMapping("/fetchDepartments")
    public String fetchDepartments() {
    	try {
    		return CloudQuery.callCloudCodeFunction("fetchDepartments", "");
    	}
    	catch(Exception e) {
    		return e.toString();
    	}
    }
   
    @RequestMapping("/fetchSecretaryWithId")
    public String fetchSecretaryWithId(@RequestParam(value=idKey) String id) {
    	try {
    		return CloudQuery.callCloudCodeFunction("fetchSecretaryWithId", "{\"" + idKey + "\": \"" + id + "\"}");
    	}
    	catch(Exception e) {
    		return e.toString();
    	}
    }
   
    @RequestMapping("/fetchTeacherWithId")
    public String fetchTeacherWithId(@RequestParam(value=idKey) String id) {
    	try {
    		return CloudQuery.callCloudCodeFunction("fetchTeacherWithId", "{\"" + idKey + "\": \"" + id + "\"}");
    	}
    	catch(Exception e) {
    		return e.toString();
    	}
    }
   
    @RequestMapping("/fetchStudentsForSecretaryWithId")
    public String fetchStudentsForSecretaryWithId(@RequestParam(value=idKey) String id) {
    	try {
    		return CloudQuery.callCloudCodeFunction("fetchStudentsForSecretaryWithId", "{\"" + idKey + "\": \"" + id + "\"}");
    	}
    	catch(Exception e) {
    		return e.toString();
    	}
    }
   
    @RequestMapping("/signupStudentWithIdForClassWithId")
    public String signupStudentWithIdForClassWithId(@RequestParam(value=idKey) String studentId, @RequestParam(value=idKey) String classId) {
    	try {
    		String studentString = CloudQuery.callCloudCodeFunction("fetchStudentWithId", "{\"" + idKey + "\": \"" + studentId + "\"}");
    		String classString = CloudQuery.callCloudCodeFunction("fetchClassWithId", "{\"" + idKey + "\": \"" + classId + "\"}");
    		JSONParser parser = new JSONParser();
    		Object obj = parser.parse(studentString);
    		return obj.toString();
    	}
    	catch(Exception e) {
    		return e.toString();
    	}
    }
}
